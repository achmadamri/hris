// ______________________________________________________
// Generated by sql2java - http://sql2java.sourceforge.net/
// jdbc driver used at code generation time: com.mysql.jdbc.Driver
//
// Please help us improve this tool by reporting:
// - problems and suggestions to
//   http://sourceforge.net/tracker/?group_id=54687
// - feedbacks and ideas on
//   http://sourceforge.net/forum/forum.php?forum_id=182208
// ______________________________________________________

package com.gwt.hris.db;

import com.gwt.hris.db.exception.DAOException;

/**
 * Listener that is notified of tb_notification table changes.
 * @author sql2java
 */
public interface TbNotificationListener
{
    /**
     * Invoked just before inserting a TbNotificationBean record into the database.
     *
     * @param bean the TbNotificationBean that is about to be inserted
     */
    public void beforeInsert(TbNotificationBean bean) throws DAOException;


    /**
     * Invoked just after a TbNotificationBean record is inserted in the database.
     *
     * @param bean the TbNotificationBean that was just inserted
     */
    public void afterInsert(TbNotificationBean bean) throws DAOException;


    /**
     * Invoked just before updating a TbNotificationBean record in the database.
     *
     * @param bean the TbNotificationBean that is about to be updated
     */
    public void beforeUpdate(TbNotificationBean bean) throws DAOException;


    /**
     * Invoked just after updating a TbNotificationBean record in the database.
     *
     * @param bean the TbNotificationBean that was just updated
     */
    public void afterUpdate(TbNotificationBean bean) throws DAOException;


    /**
     * Invoked just before deleting a TbNotificationBean record in the database.
     *
     * @param bean the TbNotificationBean that is about to be deleted
     */
    public void beforeDelete(TbNotificationBean bean) throws DAOException;


    /**
     * Invoked just after deleting a TbNotificationBean record in the database.
     *
     * @param bean the TbNotificationBean that was just deleted
     */
    public void afterDelete(TbNotificationBean bean) throws DAOException;

}
