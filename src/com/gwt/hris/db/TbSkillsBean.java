// ______________________________________________________
// Generated by sql2java - http://sql2java.sourceforge.net/
// jdbc driver used at code generation time: com.mysql.jdbc.Driver
//
// Please help us improve this tool by reporting:
// - problems and suggestions to
//   http://sourceforge.net/tracker/?group_id=54687
// - feedbacks and ideas on
//   http://sourceforge.net/forum/forum.php?forum_id=182208
// ______________________________________________________

package com.gwt.hris.db;

import java.io.Serializable;
import java.util.HashMap;
import java.util.Map;

import org.apache.commons.lang.builder.CompareToBuilder;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.commons.lang.builder.ToStringStyle;

/**
 * TbSkillsBean is a mapping of tb_skills Table.
 * @author sql2java
*/
public class TbSkillsBean
    implements Serializable, GeneratedBean
{
	private static final long serialVersionUID = -4706594956444383291L;
	
    private String tbsDescription;

    private boolean tbsDescriptionIsModified = false;
    private boolean tbsDescriptionIsInitialized = false;

    private String tbsName;

    private boolean tbsNameIsModified = false;
    private boolean tbsNameIsInitialized = false;

    private String tbsSkillId;

    private boolean tbsSkillIdIsModified = false;
    private boolean tbsSkillIdIsInitialized = false;

    private Integer tbsId;

    private boolean tbsIdIsModified = false;
    private boolean tbsIdIsInitialized = false;

    private boolean _isNew = true;

    /**
     * Prefered methods to create a TbSkillsBean is via the createTbSkillsBean method in TbSkillsManager or
     * via the factory class TbSkillsFactory create method
     */
    protected TbSkillsBean()
    {
    }

    /**
     * Getter method for tbsDescription.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_skills.tbs_description</li>
     * <li>column size: 500</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbsDescription
     */
    public String getTbsDescription()
    {
        return tbsDescription;
    }

    /**
     * Setter method for tbsDescription.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbsDescription
     */
    public void setTbsDescription(String newVal)
    {
        if ((newVal != null && tbsDescription != null && (newVal.compareTo(tbsDescription) == 0)) ||
            (newVal == null && tbsDescription == null && tbsDescriptionIsInitialized)) {
            return;
        }
        tbsDescription = newVal;
        tbsDescriptionIsModified = true;
        tbsDescriptionIsInitialized = true;
    }

    /**
     * Determines if the tbsDescription has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbsDescriptionModified()
    {
        return tbsDescriptionIsModified;
    }

    /**
     * Determines if the tbsDescription has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbsDescriptionInitialized()
    {
        return tbsDescriptionIsInitialized;
    }

    /**
     * Getter method for tbsName.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_skills.tbs_name</li>
     * <li>column size: 45</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbsName
     */
    public String getTbsName()
    {
        return tbsName;
    }

    /**
     * Setter method for tbsName.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbsName
     */
    public void setTbsName(String newVal)
    {
        if ((newVal != null && tbsName != null && (newVal.compareTo(tbsName) == 0)) ||
            (newVal == null && tbsName == null && tbsNameIsInitialized)) {
            return;
        }
        tbsName = newVal;
        tbsNameIsModified = true;
        tbsNameIsInitialized = true;
    }

    /**
     * Determines if the tbsName has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbsNameModified()
    {
        return tbsNameIsModified;
    }

    /**
     * Determines if the tbsName has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbsNameInitialized()
    {
        return tbsNameIsInitialized;
    }

    /**
     * Getter method for tbsSkillId.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_skills.tbs_skill_id</li>
     * <li>column size: 45</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbsSkillId
     */
    public String getTbsSkillId()
    {
        return tbsSkillId;
    }

    /**
     * Setter method for tbsSkillId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbsSkillId
     */
    public void setTbsSkillId(String newVal)
    {
        if ((newVal != null && tbsSkillId != null && (newVal.compareTo(tbsSkillId) == 0)) ||
            (newVal == null && tbsSkillId == null && tbsSkillIdIsInitialized)) {
            return;
        }
        tbsSkillId = newVal;
        tbsSkillIdIsModified = true;
        tbsSkillIdIsInitialized = true;
    }

    /**
     * Determines if the tbsSkillId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbsSkillIdModified()
    {
        return tbsSkillIdIsModified;
    }

    /**
     * Determines if the tbsSkillId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbsSkillIdInitialized()
    {
        return tbsSkillIdIsInitialized;
    }

    /**
     * Getter method for tbsId.
     * <br>
     * PRIMARY KEY.<br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_skills.tbs_id</li>
     * <li> imported key: tb_assigned_skills.tbs_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbsId
     */
    public Integer getTbsId()
    {
        return tbsId;
    }

    /**
     * Setter method for tbsId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbsId
     */
    public void setTbsId(Integer newVal)
    {
        if ((newVal != null && tbsId != null && (newVal.compareTo(tbsId) == 0)) ||
            (newVal == null && tbsId == null && tbsIdIsInitialized)) {
            return;
        }
        tbsId = newVal;
        tbsIdIsModified = true;
        tbsIdIsInitialized = true;
    }

    /**
     * Setter method for tbsId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbsId
     */
    public void setTbsId(int newVal)
    {
        setTbsId(new Integer(newVal));
    }

    /**
     * Determines if the tbsId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbsIdModified()
    {
        return tbsIdIsModified;
    }

    /**
     * Determines if the tbsId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbsIdInitialized()
    {
        return tbsIdIsInitialized;
    }

    /**
     * Determines if the current object is new.
     *
     * @return true if the current object is new, false if the object is not new
     */
    public boolean isNew()
    {
        return _isNew;
    }

    /**
     * Specifies to the object if it has been set as new.
     *
     * @param isNew the boolean value to be assigned to the isNew field
     */
    public void isNew(boolean isNew)
    {
        this._isNew = isNew;
    }

    /**
     * Determines if the object has been modified since the last time this method was called.
     * <br>
     * We can also determine if this object has ever been modified since its creation.
     *
     * @return true if the object has been modified, false if the object has not been modified
     */
    public boolean isModified()
    {
        return tbsDescriptionIsModified 		|| tbsNameIsModified  		|| tbsSkillIdIsModified  		|| tbsIdIsModified  ;
    }

    /**
     * Resets the object modification status to 'not modified'.
     */
    public void resetIsModified()
    {
        tbsDescriptionIsModified = false;
        tbsNameIsModified = false;
        tbsSkillIdIsModified = false;
        tbsIdIsModified = false;
    }

    /**
     * Copies the passed bean into the current bean.
     *
     * @param bean the bean to copy into the current bean
     */
    public void copy(TbSkillsBean bean)
    {
        setTbsDescription(bean.getTbsDescription());
        setTbsName(bean.getTbsName());
        setTbsSkillId(bean.getTbsSkillId());
        setTbsId(bean.getTbsId());
    }

    /**
     * return a dictionnary of the object
     */
    public Map getDictionnary()
    {
        Map dictionnary = new HashMap();
        dictionnary.put("tbs_description", getTbsDescription() == null ? "" : getTbsDescription().toString());
        dictionnary.put("tbs_name", getTbsName() == null ? "" : getTbsName().toString());
        dictionnary.put("tbs_skill_id", getTbsSkillId() == null ? "" : getTbsSkillId().toString());
        dictionnary.put("tbs_id", getTbsId() == null ? "" : getTbsId().toString());
        return dictionnary;
    }

    /**
     * return a dictionnary of the pk columns
     */
    public Map getPkDictionnary()
    {
        Map dictionnary = new HashMap();
        dictionnary.put("tbs_id", getTbsId() == null ? "" : getTbsId().toString());
        return dictionnary;
    }

    /**
     * return a the value string representation of the given field
     */
    public String getValue(String column)
    {
        if (null == column || "".equals(column)) {
            return "";
        } else if ("tbs_description".equalsIgnoreCase(column) || "tbsDescription".equalsIgnoreCase(column)) {
            return getTbsDescription() == null ? "" : getTbsDescription().toString();
        } else if ("tbs_name".equalsIgnoreCase(column) || "tbsName".equalsIgnoreCase(column)) {
            return getTbsName() == null ? "" : getTbsName().toString();
        } else if ("tbs_skill_id".equalsIgnoreCase(column) || "tbsSkillId".equalsIgnoreCase(column)) {
            return getTbsSkillId() == null ? "" : getTbsSkillId().toString();
        } else if ("tbs_id".equalsIgnoreCase(column) || "tbsId".equalsIgnoreCase(column)) {
            return getTbsId() == null ? "" : getTbsId().toString();
        }
        return "";
    }

    /**
     * @see java.lang.Object#equals(Object)
     */
    public boolean equals(Object object)
    {
        if (!(object instanceof TbSkillsBean)) {
            return false;
        }

		TbSkillsBean obj = (TbSkillsBean) object;
		return new EqualsBuilder()
            .append(getTbsDescription(), obj.getTbsDescription())
            .append(getTbsName(), obj.getTbsName())
            .append(getTbsSkillId(), obj.getTbsSkillId())
            .append(getTbsId(), obj.getTbsId())
            .isEquals();
	}

	/**
	 * @see java.lang.Object#hashCode()
	 */
	public int hashCode()
	{
		return new HashCodeBuilder(-82280557, -700257973)
            .append(getTbsDescription())
            .append(getTbsName())
            .append(getTbsSkillId())
            .append(getTbsId())
            .toHashCode();
	}

	/**
	 * @see java.lang.Object#toString()
	 */
	public String toString()
	{
	    return toString(ToStringStyle.MULTI_LINE_STYLE);
	}

	/**
	 * you can use the following styles:
	 * <li>ToStringStyle.DEFAULT_STYLE</li>
	 * <li>ToStringStyle.MULTI_LINE_STYLE</li>
     * <li>ToStringStyle.NO_FIELD_NAMES_STYLE</li>
     * <li>ToStringStyle.SHORT_PREFIX_STYLE</li>
     * <li>ToStringStyle.SIMPLE_STYLE</li>
	 */
	public String toString(ToStringStyle style) {
		return new ToStringBuilder(this, style)
            .append("tbs_description", getTbsDescription())
            .append("tbs_name", getTbsName())
            .append("tbs_skill_id", getTbsSkillId())
            .append("tbs_id", getTbsId())
            .toString();
	}


    public int compareTo(Object object)
    {
        TbSkillsBean obj = (TbSkillsBean) object;
        return new CompareToBuilder()
            .append(getTbsDescription(), obj.getTbsDescription())
            .append(getTbsName(), obj.getTbsName())
            .append(getTbsSkillId(), obj.getTbsSkillId())
            .append(getTbsId(), obj.getTbsId())
            .toComparison();
   }
}
