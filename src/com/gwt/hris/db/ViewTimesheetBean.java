// ______________________________________________________
// Generated by sql2java - http://sql2java.sourceforge.net/
// jdbc driver used at code generation time: com.mysql.jdbc.Driver
//
// Please help us improve this tool by reporting:
// - problems and suggestions to
//   http://sourceforge.net/tracker/?group_id=54687
// - feedbacks and ideas on
//   http://sourceforge.net/forum/forum.php?forum_id=182208
// ______________________________________________________

package com.gwt.hris.db;

import java.io.Serializable;
import java.util.HashMap;
import java.util.Map;

import org.apache.commons.lang.builder.CompareToBuilder;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.commons.lang.builder.ToStringStyle;

/**
 * ViewTimesheetBean is a mapping of view_timesheet Table.
 * @author sql2java
*/
public class ViewTimesheetBean
    implements Serializable, GeneratedBean
{
	private static final long serialVersionUID = 6905590457038329080L;
	
    private Integer tbtApprovalStatus;

    private boolean tbtApprovalStatusIsModified = false;
    private boolean tbtApprovalStatusIsInitialized = false;

    private Integer tbtGrandTotalHour;

    private boolean tbtGrandTotalHourIsModified = false;
    private boolean tbtGrandTotalHourIsInitialized = false;

    private Integer tbtTotalHour;

    private boolean tbtTotalHourIsModified = false;
    private boolean tbtTotalHourIsInitialized = false;

    private Integer tbtDay7Hour;

    private boolean tbtDay7HourIsModified = false;
    private boolean tbtDay7HourIsInitialized = false;

    private Integer tbtDay6Hour;

    private boolean tbtDay6HourIsModified = false;
    private boolean tbtDay6HourIsInitialized = false;

    private Integer tbtDay5Hour;

    private boolean tbtDay5HourIsModified = false;
    private boolean tbtDay5HourIsInitialized = false;

    private Integer tbtDay4Hour;

    private boolean tbtDay4HourIsModified = false;
    private boolean tbtDay4HourIsInitialized = false;

    private Integer tbtDay3Hour;

    private boolean tbtDay3HourIsModified = false;
    private boolean tbtDay3HourIsInitialized = false;

    private Integer tbtDay2Hour;

    private boolean tbtDay2HourIsModified = false;
    private boolean tbtDay2HourIsInitialized = false;

    private Integer tbtDay1Hour;

    private boolean tbtDay1HourIsModified = false;
    private boolean tbtDay1HourIsInitialized = false;

    private String tbtStartOfWeek;

    private boolean tbtStartOfWeekIsModified = false;
    private boolean tbtStartOfWeekIsInitialized = false;

    private java.sql.Timestamp tbtUpdateTime;

    private boolean tbtUpdateTimeIsModified = false;
    private boolean tbtUpdateTimeIsInitialized = false;

    private Integer tbtId;

    private boolean tbtIdIsModified = false;
    private boolean tbtIdIsInitialized = false;

    private Integer tbpaPayable;

    private boolean tbpaPayableIsModified = false;
    private boolean tbpaPayableIsInitialized = false;

    private String tbpaName;

    private boolean tbpaNameIsModified = false;
    private boolean tbpaNameIsInitialized = false;

    private Integer tbpaId;

    private boolean tbpaIdIsModified = false;
    private boolean tbpaIdIsInitialized = false;

    private String tbpagName;

    private boolean tbpagNameIsModified = false;
    private boolean tbpagNameIsInitialized = false;

    private String tbpagProjectActivitiesGroupId;

    private boolean tbpagProjectActivitiesGroupIdIsModified = false;
    private boolean tbpagProjectActivitiesGroupIdIsInitialized = false;

    private Integer tbpagId;

    private boolean tbpagIdIsModified = false;
    private boolean tbpagIdIsInitialized = false;

    private String tbpName;

    private boolean tbpNameIsModified = false;
    private boolean tbpNameIsInitialized = false;

    private String tbpProjectId;

    private boolean tbpProjectIdIsModified = false;
    private boolean tbpProjectIdIsInitialized = false;

    private Integer tbpId;

    private boolean tbpIdIsModified = false;
    private boolean tbpIdIsInitialized = false;

    private String tbcCustomerId;

    private boolean tbcCustomerIdIsModified = false;
    private boolean tbcCustomerIdIsInitialized = false;

    private String tbcName;

    private boolean tbcNameIsModified = false;
    private boolean tbcNameIsInitialized = false;

    private Integer tbcId;

    private boolean tbcIdIsModified = false;
    private boolean tbcIdIsInitialized = false;

    private String tbeName;

    private boolean tbeNameIsModified = false;
    private boolean tbeNameIsInitialized = false;

    private Integer tbeId;

    private boolean tbeIdIsModified = false;
    private boolean tbeIdIsInitialized = false;

    private boolean _isNew = true;

    /**
     * Prefered methods to create a ViewTimesheetBean is via the createViewTimesheetBean method in ViewTimesheetManager or
     * via the factory class ViewTimesheetFactory create method
     */
    protected ViewTimesheetBean()
    {
    }

    /**
     * Getter method for tbtApprovalStatus.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_timesheet.tbt_approval_status</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbtApprovalStatus
     */
    public Integer getTbtApprovalStatus()
    {
        return tbtApprovalStatus;
    }

    /**
     * Setter method for tbtApprovalStatus.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbtApprovalStatus
     */
    public void setTbtApprovalStatus(Integer newVal)
    {
        if ((newVal != null && tbtApprovalStatus != null && (newVal.compareTo(tbtApprovalStatus) == 0)) ||
            (newVal == null && tbtApprovalStatus == null && tbtApprovalStatusIsInitialized)) {
            return;
        }
        tbtApprovalStatus = newVal;
        tbtApprovalStatusIsModified = true;
        tbtApprovalStatusIsInitialized = true;
    }

    /**
     * Setter method for tbtApprovalStatus.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbtApprovalStatus
     */
    public void setTbtApprovalStatus(int newVal)
    {
        setTbtApprovalStatus(new Integer(newVal));
    }

    /**
     * Determines if the tbtApprovalStatus has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbtApprovalStatusModified()
    {
        return tbtApprovalStatusIsModified;
    }

    /**
     * Determines if the tbtApprovalStatus has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbtApprovalStatusInitialized()
    {
        return tbtApprovalStatusIsInitialized;
    }

    /**
     * Getter method for tbtGrandTotalHour.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_timesheet.tbt_grand_total_hour</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbtGrandTotalHour
     */
    public Integer getTbtGrandTotalHour()
    {
        return tbtGrandTotalHour;
    }

    /**
     * Setter method for tbtGrandTotalHour.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbtGrandTotalHour
     */
    public void setTbtGrandTotalHour(Integer newVal)
    {
        if ((newVal != null && tbtGrandTotalHour != null && (newVal.compareTo(tbtGrandTotalHour) == 0)) ||
            (newVal == null && tbtGrandTotalHour == null && tbtGrandTotalHourIsInitialized)) {
            return;
        }
        tbtGrandTotalHour = newVal;
        tbtGrandTotalHourIsModified = true;
        tbtGrandTotalHourIsInitialized = true;
    }

    /**
     * Setter method for tbtGrandTotalHour.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbtGrandTotalHour
     */
    public void setTbtGrandTotalHour(int newVal)
    {
        setTbtGrandTotalHour(new Integer(newVal));
    }

    /**
     * Determines if the tbtGrandTotalHour has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbtGrandTotalHourModified()
    {
        return tbtGrandTotalHourIsModified;
    }

    /**
     * Determines if the tbtGrandTotalHour has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbtGrandTotalHourInitialized()
    {
        return tbtGrandTotalHourIsInitialized;
    }

    /**
     * Getter method for tbtTotalHour.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_timesheet.tbt_total_hour</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbtTotalHour
     */
    public Integer getTbtTotalHour()
    {
        return tbtTotalHour;
    }

    /**
     * Setter method for tbtTotalHour.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbtTotalHour
     */
    public void setTbtTotalHour(Integer newVal)
    {
        if ((newVal != null && tbtTotalHour != null && (newVal.compareTo(tbtTotalHour) == 0)) ||
            (newVal == null && tbtTotalHour == null && tbtTotalHourIsInitialized)) {
            return;
        }
        tbtTotalHour = newVal;
        tbtTotalHourIsModified = true;
        tbtTotalHourIsInitialized = true;
    }

    /**
     * Setter method for tbtTotalHour.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbtTotalHour
     */
    public void setTbtTotalHour(int newVal)
    {
        setTbtTotalHour(new Integer(newVal));
    }

    /**
     * Determines if the tbtTotalHour has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbtTotalHourModified()
    {
        return tbtTotalHourIsModified;
    }

    /**
     * Determines if the tbtTotalHour has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbtTotalHourInitialized()
    {
        return tbtTotalHourIsInitialized;
    }

    /**
     * Getter method for tbtDay7Hour.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_timesheet.tbt_day_7_hour</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbtDay7Hour
     */
    public Integer getTbtDay7Hour()
    {
        return tbtDay7Hour;
    }

    /**
     * Setter method for tbtDay7Hour.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbtDay7Hour
     */
    public void setTbtDay7Hour(Integer newVal)
    {
        if ((newVal != null && tbtDay7Hour != null && (newVal.compareTo(tbtDay7Hour) == 0)) ||
            (newVal == null && tbtDay7Hour == null && tbtDay7HourIsInitialized)) {
            return;
        }
        tbtDay7Hour = newVal;
        tbtDay7HourIsModified = true;
        tbtDay7HourIsInitialized = true;
    }

    /**
     * Setter method for tbtDay7Hour.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbtDay7Hour
     */
    public void setTbtDay7Hour(int newVal)
    {
        setTbtDay7Hour(new Integer(newVal));
    }

    /**
     * Determines if the tbtDay7Hour has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbtDay7HourModified()
    {
        return tbtDay7HourIsModified;
    }

    /**
     * Determines if the tbtDay7Hour has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbtDay7HourInitialized()
    {
        return tbtDay7HourIsInitialized;
    }

    /**
     * Getter method for tbtDay6Hour.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_timesheet.tbt_day_6_hour</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbtDay6Hour
     */
    public Integer getTbtDay6Hour()
    {
        return tbtDay6Hour;
    }

    /**
     * Setter method for tbtDay6Hour.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbtDay6Hour
     */
    public void setTbtDay6Hour(Integer newVal)
    {
        if ((newVal != null && tbtDay6Hour != null && (newVal.compareTo(tbtDay6Hour) == 0)) ||
            (newVal == null && tbtDay6Hour == null && tbtDay6HourIsInitialized)) {
            return;
        }
        tbtDay6Hour = newVal;
        tbtDay6HourIsModified = true;
        tbtDay6HourIsInitialized = true;
    }

    /**
     * Setter method for tbtDay6Hour.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbtDay6Hour
     */
    public void setTbtDay6Hour(int newVal)
    {
        setTbtDay6Hour(new Integer(newVal));
    }

    /**
     * Determines if the tbtDay6Hour has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbtDay6HourModified()
    {
        return tbtDay6HourIsModified;
    }

    /**
     * Determines if the tbtDay6Hour has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbtDay6HourInitialized()
    {
        return tbtDay6HourIsInitialized;
    }

    /**
     * Getter method for tbtDay5Hour.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_timesheet.tbt_day_5_hour</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbtDay5Hour
     */
    public Integer getTbtDay5Hour()
    {
        return tbtDay5Hour;
    }

    /**
     * Setter method for tbtDay5Hour.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbtDay5Hour
     */
    public void setTbtDay5Hour(Integer newVal)
    {
        if ((newVal != null && tbtDay5Hour != null && (newVal.compareTo(tbtDay5Hour) == 0)) ||
            (newVal == null && tbtDay5Hour == null && tbtDay5HourIsInitialized)) {
            return;
        }
        tbtDay5Hour = newVal;
        tbtDay5HourIsModified = true;
        tbtDay5HourIsInitialized = true;
    }

    /**
     * Setter method for tbtDay5Hour.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbtDay5Hour
     */
    public void setTbtDay5Hour(int newVal)
    {
        setTbtDay5Hour(new Integer(newVal));
    }

    /**
     * Determines if the tbtDay5Hour has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbtDay5HourModified()
    {
        return tbtDay5HourIsModified;
    }

    /**
     * Determines if the tbtDay5Hour has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbtDay5HourInitialized()
    {
        return tbtDay5HourIsInitialized;
    }

    /**
     * Getter method for tbtDay4Hour.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_timesheet.tbt_day_4_hour</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbtDay4Hour
     */
    public Integer getTbtDay4Hour()
    {
        return tbtDay4Hour;
    }

    /**
     * Setter method for tbtDay4Hour.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbtDay4Hour
     */
    public void setTbtDay4Hour(Integer newVal)
    {
        if ((newVal != null && tbtDay4Hour != null && (newVal.compareTo(tbtDay4Hour) == 0)) ||
            (newVal == null && tbtDay4Hour == null && tbtDay4HourIsInitialized)) {
            return;
        }
        tbtDay4Hour = newVal;
        tbtDay4HourIsModified = true;
        tbtDay4HourIsInitialized = true;
    }

    /**
     * Setter method for tbtDay4Hour.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbtDay4Hour
     */
    public void setTbtDay4Hour(int newVal)
    {
        setTbtDay4Hour(new Integer(newVal));
    }

    /**
     * Determines if the tbtDay4Hour has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbtDay4HourModified()
    {
        return tbtDay4HourIsModified;
    }

    /**
     * Determines if the tbtDay4Hour has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbtDay4HourInitialized()
    {
        return tbtDay4HourIsInitialized;
    }

    /**
     * Getter method for tbtDay3Hour.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_timesheet.tbt_day_3_hour</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbtDay3Hour
     */
    public Integer getTbtDay3Hour()
    {
        return tbtDay3Hour;
    }

    /**
     * Setter method for tbtDay3Hour.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbtDay3Hour
     */
    public void setTbtDay3Hour(Integer newVal)
    {
        if ((newVal != null && tbtDay3Hour != null && (newVal.compareTo(tbtDay3Hour) == 0)) ||
            (newVal == null && tbtDay3Hour == null && tbtDay3HourIsInitialized)) {
            return;
        }
        tbtDay3Hour = newVal;
        tbtDay3HourIsModified = true;
        tbtDay3HourIsInitialized = true;
    }

    /**
     * Setter method for tbtDay3Hour.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbtDay3Hour
     */
    public void setTbtDay3Hour(int newVal)
    {
        setTbtDay3Hour(new Integer(newVal));
    }

    /**
     * Determines if the tbtDay3Hour has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbtDay3HourModified()
    {
        return tbtDay3HourIsModified;
    }

    /**
     * Determines if the tbtDay3Hour has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbtDay3HourInitialized()
    {
        return tbtDay3HourIsInitialized;
    }

    /**
     * Getter method for tbtDay2Hour.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_timesheet.tbt_day_2_hour</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbtDay2Hour
     */
    public Integer getTbtDay2Hour()
    {
        return tbtDay2Hour;
    }

    /**
     * Setter method for tbtDay2Hour.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbtDay2Hour
     */
    public void setTbtDay2Hour(Integer newVal)
    {
        if ((newVal != null && tbtDay2Hour != null && (newVal.compareTo(tbtDay2Hour) == 0)) ||
            (newVal == null && tbtDay2Hour == null && tbtDay2HourIsInitialized)) {
            return;
        }
        tbtDay2Hour = newVal;
        tbtDay2HourIsModified = true;
        tbtDay2HourIsInitialized = true;
    }

    /**
     * Setter method for tbtDay2Hour.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbtDay2Hour
     */
    public void setTbtDay2Hour(int newVal)
    {
        setTbtDay2Hour(new Integer(newVal));
    }

    /**
     * Determines if the tbtDay2Hour has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbtDay2HourModified()
    {
        return tbtDay2HourIsModified;
    }

    /**
     * Determines if the tbtDay2Hour has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbtDay2HourInitialized()
    {
        return tbtDay2HourIsInitialized;
    }

    /**
     * Getter method for tbtDay1Hour.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_timesheet.tbt_day_1_hour</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbtDay1Hour
     */
    public Integer getTbtDay1Hour()
    {
        return tbtDay1Hour;
    }

    /**
     * Setter method for tbtDay1Hour.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbtDay1Hour
     */
    public void setTbtDay1Hour(Integer newVal)
    {
        if ((newVal != null && tbtDay1Hour != null && (newVal.compareTo(tbtDay1Hour) == 0)) ||
            (newVal == null && tbtDay1Hour == null && tbtDay1HourIsInitialized)) {
            return;
        }
        tbtDay1Hour = newVal;
        tbtDay1HourIsModified = true;
        tbtDay1HourIsInitialized = true;
    }

    /**
     * Setter method for tbtDay1Hour.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbtDay1Hour
     */
    public void setTbtDay1Hour(int newVal)
    {
        setTbtDay1Hour(new Integer(newVal));
    }

    /**
     * Determines if the tbtDay1Hour has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbtDay1HourModified()
    {
        return tbtDay1HourIsModified;
    }

    /**
     * Determines if the tbtDay1Hour has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbtDay1HourInitialized()
    {
        return tbtDay1HourIsInitialized;
    }

    /**
     * Getter method for tbtStartOfWeek.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_timesheet.tbt_start_of_week</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbtStartOfWeek
     */
    public String getTbtStartOfWeek()
    {
        return tbtStartOfWeek;
    }

    /**
     * Setter method for tbtStartOfWeek.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbtStartOfWeek
     */
    public void setTbtStartOfWeek(String newVal)
    {
        if ((newVal != null && tbtStartOfWeek != null && (newVal.compareTo(tbtStartOfWeek) == 0)) ||
            (newVal == null && tbtStartOfWeek == null && tbtStartOfWeekIsInitialized)) {
            return;
        }
        tbtStartOfWeek = newVal;
        tbtStartOfWeekIsModified = true;
        tbtStartOfWeekIsInitialized = true;
    }

    /**
     * Determines if the tbtStartOfWeek has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbtStartOfWeekModified()
    {
        return tbtStartOfWeekIsModified;
    }

    /**
     * Determines if the tbtStartOfWeek has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbtStartOfWeekInitialized()
    {
        return tbtStartOfWeekIsInitialized;
    }

    /**
     * Getter method for tbtUpdateTime.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_timesheet.tbt_update_time</li>
     * <li>column size: 19</li>
     * <li>jdbc type returned by the driver: Types.TIMESTAMP</li>
     * </ul>
     *
     * @return the value of tbtUpdateTime
     */
    public java.sql.Timestamp getTbtUpdateTime()
    {
        return tbtUpdateTime;
    }

    /**
     * Setter method for tbtUpdateTime.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbtUpdateTime
     */
    public void setTbtUpdateTime(java.sql.Timestamp newVal)
    {
        if ((newVal != null && tbtUpdateTime != null && (newVal.compareTo(tbtUpdateTime) == 0)) ||
            (newVal == null && tbtUpdateTime == null && tbtUpdateTimeIsInitialized)) {
            return;
        }
        tbtUpdateTime = newVal;
        tbtUpdateTimeIsModified = true;
        tbtUpdateTimeIsInitialized = true;
    }

    /**
     * Setter method for tbtUpdateTime.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbtUpdateTime
     */
    public void setTbtUpdateTime(long newVal)
    {
        setTbtUpdateTime(new java.sql.Timestamp(newVal));
    }

    /**
     * Determines if the tbtUpdateTime has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbtUpdateTimeModified()
    {
        return tbtUpdateTimeIsModified;
    }

    /**
     * Determines if the tbtUpdateTime has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbtUpdateTimeInitialized()
    {
        return tbtUpdateTimeIsInitialized;
    }

    /**
     * Getter method for tbtId.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_timesheet.tbt_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbtId
     */
    public Integer getTbtId()
    {
        return tbtId;
    }

    /**
     * Setter method for tbtId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbtId
     */
    public void setTbtId(Integer newVal)
    {
        if ((newVal != null && tbtId != null && (newVal.compareTo(tbtId) == 0)) ||
            (newVal == null && tbtId == null && tbtIdIsInitialized)) {
            return;
        }
        tbtId = newVal;
        tbtIdIsModified = true;
        tbtIdIsInitialized = true;
    }

    /**
     * Setter method for tbtId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbtId
     */
    public void setTbtId(int newVal)
    {
        setTbtId(new Integer(newVal));
    }

    /**
     * Determines if the tbtId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbtIdModified()
    {
        return tbtIdIsModified;
    }

    /**
     * Determines if the tbtId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbtIdInitialized()
    {
        return tbtIdIsInitialized;
    }

    /**
     * Getter method for tbpaPayable.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_timesheet.tbpa_payable</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbpaPayable
     */
    public Integer getTbpaPayable()
    {
        return tbpaPayable;
    }

    /**
     * Setter method for tbpaPayable.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpaPayable
     */
    public void setTbpaPayable(Integer newVal)
    {
        if ((newVal != null && tbpaPayable != null && (newVal.compareTo(tbpaPayable) == 0)) ||
            (newVal == null && tbpaPayable == null && tbpaPayableIsInitialized)) {
            return;
        }
        tbpaPayable = newVal;
        tbpaPayableIsModified = true;
        tbpaPayableIsInitialized = true;
    }

    /**
     * Setter method for tbpaPayable.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpaPayable
     */
    public void setTbpaPayable(int newVal)
    {
        setTbpaPayable(new Integer(newVal));
    }

    /**
     * Determines if the tbpaPayable has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpaPayableModified()
    {
        return tbpaPayableIsModified;
    }

    /**
     * Determines if the tbpaPayable has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpaPayableInitialized()
    {
        return tbpaPayableIsInitialized;
    }

    /**
     * Getter method for tbpaName.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_timesheet.tbpa_name</li>
     * <li>column size: 45</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbpaName
     */
    public String getTbpaName()
    {
        return tbpaName;
    }

    /**
     * Setter method for tbpaName.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpaName
     */
    public void setTbpaName(String newVal)
    {
        if ((newVal != null && tbpaName != null && (newVal.compareTo(tbpaName) == 0)) ||
            (newVal == null && tbpaName == null && tbpaNameIsInitialized)) {
            return;
        }
        tbpaName = newVal;
        tbpaNameIsModified = true;
        tbpaNameIsInitialized = true;
    }

    /**
     * Determines if the tbpaName has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpaNameModified()
    {
        return tbpaNameIsModified;
    }

    /**
     * Determines if the tbpaName has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpaNameInitialized()
    {
        return tbpaNameIsInitialized;
    }

    /**
     * Getter method for tbpaId.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_timesheet.tbpa_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbpaId
     */
    public Integer getTbpaId()
    {
        return tbpaId;
    }

    /**
     * Setter method for tbpaId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpaId
     */
    public void setTbpaId(Integer newVal)
    {
        if ((newVal != null && tbpaId != null && (newVal.compareTo(tbpaId) == 0)) ||
            (newVal == null && tbpaId == null && tbpaIdIsInitialized)) {
            return;
        }
        tbpaId = newVal;
        tbpaIdIsModified = true;
        tbpaIdIsInitialized = true;
    }

    /**
     * Setter method for tbpaId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpaId
     */
    public void setTbpaId(int newVal)
    {
        setTbpaId(new Integer(newVal));
    }

    /**
     * Determines if the tbpaId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpaIdModified()
    {
        return tbpaIdIsModified;
    }

    /**
     * Determines if the tbpaId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpaIdInitialized()
    {
        return tbpaIdIsInitialized;
    }

    /**
     * Getter method for tbpagName.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_timesheet.tbpag_name</li>
     * <li>column size: 45</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbpagName
     */
    public String getTbpagName()
    {
        return tbpagName;
    }

    /**
     * Setter method for tbpagName.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpagName
     */
    public void setTbpagName(String newVal)
    {
        if ((newVal != null && tbpagName != null && (newVal.compareTo(tbpagName) == 0)) ||
            (newVal == null && tbpagName == null && tbpagNameIsInitialized)) {
            return;
        }
        tbpagName = newVal;
        tbpagNameIsModified = true;
        tbpagNameIsInitialized = true;
    }

    /**
     * Determines if the tbpagName has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpagNameModified()
    {
        return tbpagNameIsModified;
    }

    /**
     * Determines if the tbpagName has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpagNameInitialized()
    {
        return tbpagNameIsInitialized;
    }

    /**
     * Getter method for tbpagProjectActivitiesGroupId.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_timesheet.tbpag_project_activities_group_id</li>
     * <li>column size: 45</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbpagProjectActivitiesGroupId
     */
    public String getTbpagProjectActivitiesGroupId()
    {
        return tbpagProjectActivitiesGroupId;
    }

    /**
     * Setter method for tbpagProjectActivitiesGroupId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpagProjectActivitiesGroupId
     */
    public void setTbpagProjectActivitiesGroupId(String newVal)
    {
        if ((newVal != null && tbpagProjectActivitiesGroupId != null && (newVal.compareTo(tbpagProjectActivitiesGroupId) == 0)) ||
            (newVal == null && tbpagProjectActivitiesGroupId == null && tbpagProjectActivitiesGroupIdIsInitialized)) {
            return;
        }
        tbpagProjectActivitiesGroupId = newVal;
        tbpagProjectActivitiesGroupIdIsModified = true;
        tbpagProjectActivitiesGroupIdIsInitialized = true;
    }

    /**
     * Determines if the tbpagProjectActivitiesGroupId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpagProjectActivitiesGroupIdModified()
    {
        return tbpagProjectActivitiesGroupIdIsModified;
    }

    /**
     * Determines if the tbpagProjectActivitiesGroupId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpagProjectActivitiesGroupIdInitialized()
    {
        return tbpagProjectActivitiesGroupIdIsInitialized;
    }

    /**
     * Getter method for tbpagId.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_timesheet.tbpag_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbpagId
     */
    public Integer getTbpagId()
    {
        return tbpagId;
    }

    /**
     * Setter method for tbpagId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpagId
     */
    public void setTbpagId(Integer newVal)
    {
        if ((newVal != null && tbpagId != null && (newVal.compareTo(tbpagId) == 0)) ||
            (newVal == null && tbpagId == null && tbpagIdIsInitialized)) {
            return;
        }
        tbpagId = newVal;
        tbpagIdIsModified = true;
        tbpagIdIsInitialized = true;
    }

    /**
     * Setter method for tbpagId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpagId
     */
    public void setTbpagId(int newVal)
    {
        setTbpagId(new Integer(newVal));
    }

    /**
     * Determines if the tbpagId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpagIdModified()
    {
        return tbpagIdIsModified;
    }

    /**
     * Determines if the tbpagId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpagIdInitialized()
    {
        return tbpagIdIsInitialized;
    }

    /**
     * Getter method for tbpName.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_timesheet.tbp_name</li>
     * <li>column size: 45</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbpName
     */
    public String getTbpName()
    {
        return tbpName;
    }

    /**
     * Setter method for tbpName.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpName
     */
    public void setTbpName(String newVal)
    {
        if ((newVal != null && tbpName != null && (newVal.compareTo(tbpName) == 0)) ||
            (newVal == null && tbpName == null && tbpNameIsInitialized)) {
            return;
        }
        tbpName = newVal;
        tbpNameIsModified = true;
        tbpNameIsInitialized = true;
    }

    /**
     * Determines if the tbpName has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpNameModified()
    {
        return tbpNameIsModified;
    }

    /**
     * Determines if the tbpName has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpNameInitialized()
    {
        return tbpNameIsInitialized;
    }

    /**
     * Getter method for tbpProjectId.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_timesheet.tbp_project_id</li>
     * <li>column size: 45</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbpProjectId
     */
    public String getTbpProjectId()
    {
        return tbpProjectId;
    }

    /**
     * Setter method for tbpProjectId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpProjectId
     */
    public void setTbpProjectId(String newVal)
    {
        if ((newVal != null && tbpProjectId != null && (newVal.compareTo(tbpProjectId) == 0)) ||
            (newVal == null && tbpProjectId == null && tbpProjectIdIsInitialized)) {
            return;
        }
        tbpProjectId = newVal;
        tbpProjectIdIsModified = true;
        tbpProjectIdIsInitialized = true;
    }

    /**
     * Determines if the tbpProjectId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpProjectIdModified()
    {
        return tbpProjectIdIsModified;
    }

    /**
     * Determines if the tbpProjectId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpProjectIdInitialized()
    {
        return tbpProjectIdIsInitialized;
    }

    /**
     * Getter method for tbpId.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_timesheet.tbp_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbpId
     */
    public Integer getTbpId()
    {
        return tbpId;
    }

    /**
     * Setter method for tbpId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpId
     */
    public void setTbpId(Integer newVal)
    {
        if ((newVal != null && tbpId != null && (newVal.compareTo(tbpId) == 0)) ||
            (newVal == null && tbpId == null && tbpIdIsInitialized)) {
            return;
        }
        tbpId = newVal;
        tbpIdIsModified = true;
        tbpIdIsInitialized = true;
    }

    /**
     * Setter method for tbpId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpId
     */
    public void setTbpId(int newVal)
    {
        setTbpId(new Integer(newVal));
    }

    /**
     * Determines if the tbpId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpIdModified()
    {
        return tbpIdIsModified;
    }

    /**
     * Determines if the tbpId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpIdInitialized()
    {
        return tbpIdIsInitialized;
    }

    /**
     * Getter method for tbcCustomerId.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_timesheet.tbc_customer_id</li>
     * <li>column size: 45</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbcCustomerId
     */
    public String getTbcCustomerId()
    {
        return tbcCustomerId;
    }

    /**
     * Setter method for tbcCustomerId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbcCustomerId
     */
    public void setTbcCustomerId(String newVal)
    {
        if ((newVal != null && tbcCustomerId != null && (newVal.compareTo(tbcCustomerId) == 0)) ||
            (newVal == null && tbcCustomerId == null && tbcCustomerIdIsInitialized)) {
            return;
        }
        tbcCustomerId = newVal;
        tbcCustomerIdIsModified = true;
        tbcCustomerIdIsInitialized = true;
    }

    /**
     * Determines if the tbcCustomerId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbcCustomerIdModified()
    {
        return tbcCustomerIdIsModified;
    }

    /**
     * Determines if the tbcCustomerId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbcCustomerIdInitialized()
    {
        return tbcCustomerIdIsInitialized;
    }

    /**
     * Getter method for tbcName.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_timesheet.tbc_name</li>
     * <li>column size: 45</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbcName
     */
    public String getTbcName()
    {
        return tbcName;
    }

    /**
     * Setter method for tbcName.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbcName
     */
    public void setTbcName(String newVal)
    {
        if ((newVal != null && tbcName != null && (newVal.compareTo(tbcName) == 0)) ||
            (newVal == null && tbcName == null && tbcNameIsInitialized)) {
            return;
        }
        tbcName = newVal;
        tbcNameIsModified = true;
        tbcNameIsInitialized = true;
    }

    /**
     * Determines if the tbcName has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbcNameModified()
    {
        return tbcNameIsModified;
    }

    /**
     * Determines if the tbcName has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbcNameInitialized()
    {
        return tbcNameIsInitialized;
    }

    /**
     * Getter method for tbcId.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_timesheet.tbc_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbcId
     */
    public Integer getTbcId()
    {
        return tbcId;
    }

    /**
     * Setter method for tbcId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbcId
     */
    public void setTbcId(Integer newVal)
    {
        if ((newVal != null && tbcId != null && (newVal.compareTo(tbcId) == 0)) ||
            (newVal == null && tbcId == null && tbcIdIsInitialized)) {
            return;
        }
        tbcId = newVal;
        tbcIdIsModified = true;
        tbcIdIsInitialized = true;
    }

    /**
     * Setter method for tbcId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbcId
     */
    public void setTbcId(int newVal)
    {
        setTbcId(new Integer(newVal));
    }

    /**
     * Determines if the tbcId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbcIdModified()
    {
        return tbcIdIsModified;
    }

    /**
     * Determines if the tbcId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbcIdInitialized()
    {
        return tbcIdIsInitialized;
    }

    /**
     * Getter method for tbeName.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_timesheet.tbe_name</li>
     * <li>column size: 100</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbeName
     */
    public String getTbeName()
    {
        return tbeName;
    }

    /**
     * Setter method for tbeName.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbeName
     */
    public void setTbeName(String newVal)
    {
        if ((newVal != null && tbeName != null && (newVal.compareTo(tbeName) == 0)) ||
            (newVal == null && tbeName == null && tbeNameIsInitialized)) {
            return;
        }
        tbeName = newVal;
        tbeNameIsModified = true;
        tbeNameIsInitialized = true;
    }

    /**
     * Determines if the tbeName has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbeNameModified()
    {
        return tbeNameIsModified;
    }

    /**
     * Determines if the tbeName has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbeNameInitialized()
    {
        return tbeNameIsInitialized;
    }

    /**
     * Getter method for tbeId.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_timesheet.tbe_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbeId
     */
    public Integer getTbeId()
    {
        return tbeId;
    }

    /**
     * Setter method for tbeId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbeId
     */
    public void setTbeId(Integer newVal)
    {
        if ((newVal != null && tbeId != null && (newVal.compareTo(tbeId) == 0)) ||
            (newVal == null && tbeId == null && tbeIdIsInitialized)) {
            return;
        }
        tbeId = newVal;
        tbeIdIsModified = true;
        tbeIdIsInitialized = true;
    }

    /**
     * Setter method for tbeId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbeId
     */
    public void setTbeId(int newVal)
    {
        setTbeId(new Integer(newVal));
    }

    /**
     * Determines if the tbeId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbeIdModified()
    {
        return tbeIdIsModified;
    }

    /**
     * Determines if the tbeId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbeIdInitialized()
    {
        return tbeIdIsInitialized;
    }

    /**
     * Determines if the current object is new.
     *
     * @return true if the current object is new, false if the object is not new
     */
    public boolean isNew()
    {
        return _isNew;
    }

    /**
     * Specifies to the object if it has been set as new.
     *
     * @param isNew the boolean value to be assigned to the isNew field
     */
    public void isNew(boolean isNew)
    {
        this._isNew = isNew;
    }

    /**
     * Determines if the object has been modified since the last time this method was called.
     * <br>
     * We can also determine if this object has ever been modified since its creation.
     *
     * @return true if the object has been modified, false if the object has not been modified
     */
    public boolean isModified()
    {
        return tbtApprovalStatusIsModified 		|| tbtGrandTotalHourIsModified  		|| tbtTotalHourIsModified  		|| tbtDay7HourIsModified  		|| tbtDay6HourIsModified  		|| tbtDay5HourIsModified  		|| tbtDay4HourIsModified  		|| tbtDay3HourIsModified  		|| tbtDay2HourIsModified  		|| tbtDay1HourIsModified  		|| tbtStartOfWeekIsModified  		|| tbtUpdateTimeIsModified  		|| tbtIdIsModified  		|| tbpaPayableIsModified  		|| tbpaNameIsModified  		|| tbpaIdIsModified  		|| tbpagNameIsModified  		|| tbpagProjectActivitiesGroupIdIsModified  		|| tbpagIdIsModified  		|| tbpNameIsModified  		|| tbpProjectIdIsModified  		|| tbpIdIsModified  		|| tbcCustomerIdIsModified  		|| tbcNameIsModified  		|| tbcIdIsModified  		|| tbeNameIsModified  		|| tbeIdIsModified  ;
    }

    /**
     * Resets the object modification status to 'not modified'.
     */
    public void resetIsModified()
    {
        tbtApprovalStatusIsModified = false;
        tbtGrandTotalHourIsModified = false;
        tbtTotalHourIsModified = false;
        tbtDay7HourIsModified = false;
        tbtDay6HourIsModified = false;
        tbtDay5HourIsModified = false;
        tbtDay4HourIsModified = false;
        tbtDay3HourIsModified = false;
        tbtDay2HourIsModified = false;
        tbtDay1HourIsModified = false;
        tbtStartOfWeekIsModified = false;
        tbtUpdateTimeIsModified = false;
        tbtIdIsModified = false;
        tbpaPayableIsModified = false;
        tbpaNameIsModified = false;
        tbpaIdIsModified = false;
        tbpagNameIsModified = false;
        tbpagProjectActivitiesGroupIdIsModified = false;
        tbpagIdIsModified = false;
        tbpNameIsModified = false;
        tbpProjectIdIsModified = false;
        tbpIdIsModified = false;
        tbcCustomerIdIsModified = false;
        tbcNameIsModified = false;
        tbcIdIsModified = false;
        tbeNameIsModified = false;
        tbeIdIsModified = false;
    }

    /**
     * Copies the passed bean into the current bean.
     *
     * @param bean the bean to copy into the current bean
     */
    public void copy(ViewTimesheetBean bean)
    {
        setTbtApprovalStatus(bean.getTbtApprovalStatus());
        setTbtGrandTotalHour(bean.getTbtGrandTotalHour());
        setTbtTotalHour(bean.getTbtTotalHour());
        setTbtDay7Hour(bean.getTbtDay7Hour());
        setTbtDay6Hour(bean.getTbtDay6Hour());
        setTbtDay5Hour(bean.getTbtDay5Hour());
        setTbtDay4Hour(bean.getTbtDay4Hour());
        setTbtDay3Hour(bean.getTbtDay3Hour());
        setTbtDay2Hour(bean.getTbtDay2Hour());
        setTbtDay1Hour(bean.getTbtDay1Hour());
        setTbtStartOfWeek(bean.getTbtStartOfWeek());
        setTbtUpdateTime(bean.getTbtUpdateTime());
        setTbtId(bean.getTbtId());
        setTbpaPayable(bean.getTbpaPayable());
        setTbpaName(bean.getTbpaName());
        setTbpaId(bean.getTbpaId());
        setTbpagName(bean.getTbpagName());
        setTbpagProjectActivitiesGroupId(bean.getTbpagProjectActivitiesGroupId());
        setTbpagId(bean.getTbpagId());
        setTbpName(bean.getTbpName());
        setTbpProjectId(bean.getTbpProjectId());
        setTbpId(bean.getTbpId());
        setTbcCustomerId(bean.getTbcCustomerId());
        setTbcName(bean.getTbcName());
        setTbcId(bean.getTbcId());
        setTbeName(bean.getTbeName());
        setTbeId(bean.getTbeId());
    }

    /**
     * return a dictionnary of the object
     */
    public Map getDictionnary()
    {
        Map dictionnary = new HashMap();
        dictionnary.put("tbt_approval_status", getTbtApprovalStatus() == null ? "" : getTbtApprovalStatus().toString());
        dictionnary.put("tbt_grand_total_hour", getTbtGrandTotalHour() == null ? "" : getTbtGrandTotalHour().toString());
        dictionnary.put("tbt_total_hour", getTbtTotalHour() == null ? "" : getTbtTotalHour().toString());
        dictionnary.put("tbt_day_7_hour", getTbtDay7Hour() == null ? "" : getTbtDay7Hour().toString());
        dictionnary.put("tbt_day_6_hour", getTbtDay6Hour() == null ? "" : getTbtDay6Hour().toString());
        dictionnary.put("tbt_day_5_hour", getTbtDay5Hour() == null ? "" : getTbtDay5Hour().toString());
        dictionnary.put("tbt_day_4_hour", getTbtDay4Hour() == null ? "" : getTbtDay4Hour().toString());
        dictionnary.put("tbt_day_3_hour", getTbtDay3Hour() == null ? "" : getTbtDay3Hour().toString());
        dictionnary.put("tbt_day_2_hour", getTbtDay2Hour() == null ? "" : getTbtDay2Hour().toString());
        dictionnary.put("tbt_day_1_hour", getTbtDay1Hour() == null ? "" : getTbtDay1Hour().toString());
        dictionnary.put("tbt_start_of_week", getTbtStartOfWeek() == null ? "" : getTbtStartOfWeek().toString());
        dictionnary.put("tbt_update_time", getTbtUpdateTime() == null ? "" : getTbtUpdateTime().toString());
        dictionnary.put("tbt_id", getTbtId() == null ? "" : getTbtId().toString());
        dictionnary.put("tbpa_payable", getTbpaPayable() == null ? "" : getTbpaPayable().toString());
        dictionnary.put("tbpa_name", getTbpaName() == null ? "" : getTbpaName().toString());
        dictionnary.put("tbpa_id", getTbpaId() == null ? "" : getTbpaId().toString());
        dictionnary.put("tbpag_name", getTbpagName() == null ? "" : getTbpagName().toString());
        dictionnary.put("tbpag_project_activities_group_id", getTbpagProjectActivitiesGroupId() == null ? "" : getTbpagProjectActivitiesGroupId().toString());
        dictionnary.put("tbpag_id", getTbpagId() == null ? "" : getTbpagId().toString());
        dictionnary.put("tbp_name", getTbpName() == null ? "" : getTbpName().toString());
        dictionnary.put("tbp_project_id", getTbpProjectId() == null ? "" : getTbpProjectId().toString());
        dictionnary.put("tbp_id", getTbpId() == null ? "" : getTbpId().toString());
        dictionnary.put("tbc_customer_id", getTbcCustomerId() == null ? "" : getTbcCustomerId().toString());
        dictionnary.put("tbc_name", getTbcName() == null ? "" : getTbcName().toString());
        dictionnary.put("tbc_id", getTbcId() == null ? "" : getTbcId().toString());
        dictionnary.put("tbe_name", getTbeName() == null ? "" : getTbeName().toString());
        dictionnary.put("tbe_id", getTbeId() == null ? "" : getTbeId().toString());
        return dictionnary;
    }

    /**
     * return a dictionnary of the pk columns
     * no primary key, the regular dictionnary is returned
     */
    public Map getPkDictionnary()
    {
        return getDictionnary();
    }

    /**
     * return a the value string representation of the given field
     */
    public String getValue(String column)
    {
        if (null == column || "".equals(column)) {
            return "";
        } else if ("tbt_approval_status".equalsIgnoreCase(column) || "tbtApprovalStatus".equalsIgnoreCase(column)) {
            return getTbtApprovalStatus() == null ? "" : getTbtApprovalStatus().toString();
        } else if ("tbt_grand_total_hour".equalsIgnoreCase(column) || "tbtGrandTotalHour".equalsIgnoreCase(column)) {
            return getTbtGrandTotalHour() == null ? "" : getTbtGrandTotalHour().toString();
        } else if ("tbt_total_hour".equalsIgnoreCase(column) || "tbtTotalHour".equalsIgnoreCase(column)) {
            return getTbtTotalHour() == null ? "" : getTbtTotalHour().toString();
        } else if ("tbt_day_7_hour".equalsIgnoreCase(column) || "tbtDay7Hour".equalsIgnoreCase(column)) {
            return getTbtDay7Hour() == null ? "" : getTbtDay7Hour().toString();
        } else if ("tbt_day_6_hour".equalsIgnoreCase(column) || "tbtDay6Hour".equalsIgnoreCase(column)) {
            return getTbtDay6Hour() == null ? "" : getTbtDay6Hour().toString();
        } else if ("tbt_day_5_hour".equalsIgnoreCase(column) || "tbtDay5Hour".equalsIgnoreCase(column)) {
            return getTbtDay5Hour() == null ? "" : getTbtDay5Hour().toString();
        } else if ("tbt_day_4_hour".equalsIgnoreCase(column) || "tbtDay4Hour".equalsIgnoreCase(column)) {
            return getTbtDay4Hour() == null ? "" : getTbtDay4Hour().toString();
        } else if ("tbt_day_3_hour".equalsIgnoreCase(column) || "tbtDay3Hour".equalsIgnoreCase(column)) {
            return getTbtDay3Hour() == null ? "" : getTbtDay3Hour().toString();
        } else if ("tbt_day_2_hour".equalsIgnoreCase(column) || "tbtDay2Hour".equalsIgnoreCase(column)) {
            return getTbtDay2Hour() == null ? "" : getTbtDay2Hour().toString();
        } else if ("tbt_day_1_hour".equalsIgnoreCase(column) || "tbtDay1Hour".equalsIgnoreCase(column)) {
            return getTbtDay1Hour() == null ? "" : getTbtDay1Hour().toString();
        } else if ("tbt_start_of_week".equalsIgnoreCase(column) || "tbtStartOfWeek".equalsIgnoreCase(column)) {
            return getTbtStartOfWeek() == null ? "" : getTbtStartOfWeek().toString();
        } else if ("tbt_update_time".equalsIgnoreCase(column) || "tbtUpdateTime".equalsIgnoreCase(column)) {
            return getTbtUpdateTime() == null ? "" : getTbtUpdateTime().toString();
        } else if ("tbt_id".equalsIgnoreCase(column) || "tbtId".equalsIgnoreCase(column)) {
            return getTbtId() == null ? "" : getTbtId().toString();
        } else if ("tbpa_payable".equalsIgnoreCase(column) || "tbpaPayable".equalsIgnoreCase(column)) {
            return getTbpaPayable() == null ? "" : getTbpaPayable().toString();
        } else if ("tbpa_name".equalsIgnoreCase(column) || "tbpaName".equalsIgnoreCase(column)) {
            return getTbpaName() == null ? "" : getTbpaName().toString();
        } else if ("tbpa_id".equalsIgnoreCase(column) || "tbpaId".equalsIgnoreCase(column)) {
            return getTbpaId() == null ? "" : getTbpaId().toString();
        } else if ("tbpag_name".equalsIgnoreCase(column) || "tbpagName".equalsIgnoreCase(column)) {
            return getTbpagName() == null ? "" : getTbpagName().toString();
        } else if ("tbpag_project_activities_group_id".equalsIgnoreCase(column) || "tbpagProjectActivitiesGroupId".equalsIgnoreCase(column)) {
            return getTbpagProjectActivitiesGroupId() == null ? "" : getTbpagProjectActivitiesGroupId().toString();
        } else if ("tbpag_id".equalsIgnoreCase(column) || "tbpagId".equalsIgnoreCase(column)) {
            return getTbpagId() == null ? "" : getTbpagId().toString();
        } else if ("tbp_name".equalsIgnoreCase(column) || "tbpName".equalsIgnoreCase(column)) {
            return getTbpName() == null ? "" : getTbpName().toString();
        } else if ("tbp_project_id".equalsIgnoreCase(column) || "tbpProjectId".equalsIgnoreCase(column)) {
            return getTbpProjectId() == null ? "" : getTbpProjectId().toString();
        } else if ("tbp_id".equalsIgnoreCase(column) || "tbpId".equalsIgnoreCase(column)) {
            return getTbpId() == null ? "" : getTbpId().toString();
        } else if ("tbc_customer_id".equalsIgnoreCase(column) || "tbcCustomerId".equalsIgnoreCase(column)) {
            return getTbcCustomerId() == null ? "" : getTbcCustomerId().toString();
        } else if ("tbc_name".equalsIgnoreCase(column) || "tbcName".equalsIgnoreCase(column)) {
            return getTbcName() == null ? "" : getTbcName().toString();
        } else if ("tbc_id".equalsIgnoreCase(column) || "tbcId".equalsIgnoreCase(column)) {
            return getTbcId() == null ? "" : getTbcId().toString();
        } else if ("tbe_name".equalsIgnoreCase(column) || "tbeName".equalsIgnoreCase(column)) {
            return getTbeName() == null ? "" : getTbeName().toString();
        } else if ("tbe_id".equalsIgnoreCase(column) || "tbeId".equalsIgnoreCase(column)) {
            return getTbeId() == null ? "" : getTbeId().toString();
        }
        return "";
    }

    /**
     * @see java.lang.Object#equals(Object)
     */
    public boolean equals(Object object)
    {
        if (!(object instanceof ViewTimesheetBean)) {
            return false;
        }

		ViewTimesheetBean obj = (ViewTimesheetBean) object;
		return new EqualsBuilder()
            .append(getTbtApprovalStatus(), obj.getTbtApprovalStatus())
            .append(getTbtGrandTotalHour(), obj.getTbtGrandTotalHour())
            .append(getTbtTotalHour(), obj.getTbtTotalHour())
            .append(getTbtDay7Hour(), obj.getTbtDay7Hour())
            .append(getTbtDay6Hour(), obj.getTbtDay6Hour())
            .append(getTbtDay5Hour(), obj.getTbtDay5Hour())
            .append(getTbtDay4Hour(), obj.getTbtDay4Hour())
            .append(getTbtDay3Hour(), obj.getTbtDay3Hour())
            .append(getTbtDay2Hour(), obj.getTbtDay2Hour())
            .append(getTbtDay1Hour(), obj.getTbtDay1Hour())
            .append(getTbtStartOfWeek(), obj.getTbtStartOfWeek())
            .append(getTbtUpdateTime(), obj.getTbtUpdateTime())
            .append(getTbtId(), obj.getTbtId())
            .append(getTbpaPayable(), obj.getTbpaPayable())
            .append(getTbpaName(), obj.getTbpaName())
            .append(getTbpaId(), obj.getTbpaId())
            .append(getTbpagName(), obj.getTbpagName())
            .append(getTbpagProjectActivitiesGroupId(), obj.getTbpagProjectActivitiesGroupId())
            .append(getTbpagId(), obj.getTbpagId())
            .append(getTbpName(), obj.getTbpName())
            .append(getTbpProjectId(), obj.getTbpProjectId())
            .append(getTbpId(), obj.getTbpId())
            .append(getTbcCustomerId(), obj.getTbcCustomerId())
            .append(getTbcName(), obj.getTbcName())
            .append(getTbcId(), obj.getTbcId())
            .append(getTbeName(), obj.getTbeName())
            .append(getTbeId(), obj.getTbeId())
            .isEquals();
	}

	/**
	 * @see java.lang.Object#hashCode()
	 */
	public int hashCode()
	{
		return new HashCodeBuilder(-82280557, -700257973)
            .append(getTbtApprovalStatus())
            .append(getTbtGrandTotalHour())
            .append(getTbtTotalHour())
            .append(getTbtDay7Hour())
            .append(getTbtDay6Hour())
            .append(getTbtDay5Hour())
            .append(getTbtDay4Hour())
            .append(getTbtDay3Hour())
            .append(getTbtDay2Hour())
            .append(getTbtDay1Hour())
            .append(getTbtStartOfWeek())
            .append(getTbtUpdateTime())
            .append(getTbtId())
            .append(getTbpaPayable())
            .append(getTbpaName())
            .append(getTbpaId())
            .append(getTbpagName())
            .append(getTbpagProjectActivitiesGroupId())
            .append(getTbpagId())
            .append(getTbpName())
            .append(getTbpProjectId())
            .append(getTbpId())
            .append(getTbcCustomerId())
            .append(getTbcName())
            .append(getTbcId())
            .append(getTbeName())
            .append(getTbeId())
            .toHashCode();
	}

	/**
	 * @see java.lang.Object#toString()
	 */
	public String toString()
	{
	    return toString(ToStringStyle.MULTI_LINE_STYLE);
	}

	/**
	 * you can use the following styles:
	 * <li>ToStringStyle.DEFAULT_STYLE</li>
	 * <li>ToStringStyle.MULTI_LINE_STYLE</li>
     * <li>ToStringStyle.NO_FIELD_NAMES_STYLE</li>
     * <li>ToStringStyle.SHORT_PREFIX_STYLE</li>
     * <li>ToStringStyle.SIMPLE_STYLE</li>
	 */
	public String toString(ToStringStyle style) {
		return new ToStringBuilder(this, style)
            .append("tbt_approval_status", getTbtApprovalStatus())
            .append("tbt_grand_total_hour", getTbtGrandTotalHour())
            .append("tbt_total_hour", getTbtTotalHour())
            .append("tbt_day_7_hour", getTbtDay7Hour())
            .append("tbt_day_6_hour", getTbtDay6Hour())
            .append("tbt_day_5_hour", getTbtDay5Hour())
            .append("tbt_day_4_hour", getTbtDay4Hour())
            .append("tbt_day_3_hour", getTbtDay3Hour())
            .append("tbt_day_2_hour", getTbtDay2Hour())
            .append("tbt_day_1_hour", getTbtDay1Hour())
            .append("tbt_start_of_week", getTbtStartOfWeek())
            .append("tbt_update_time", getTbtUpdateTime())
            .append("tbt_id", getTbtId())
            .append("tbpa_payable", getTbpaPayable())
            .append("tbpa_name", getTbpaName())
            .append("tbpa_id", getTbpaId())
            .append("tbpag_name", getTbpagName())
            .append("tbpag_project_activities_group_id", getTbpagProjectActivitiesGroupId())
            .append("tbpag_id", getTbpagId())
            .append("tbp_name", getTbpName())
            .append("tbp_project_id", getTbpProjectId())
            .append("tbp_id", getTbpId())
            .append("tbc_customer_id", getTbcCustomerId())
            .append("tbc_name", getTbcName())
            .append("tbc_id", getTbcId())
            .append("tbe_name", getTbeName())
            .append("tbe_id", getTbeId())
            .toString();
	}


    public int compareTo(Object object)
    {
        ViewTimesheetBean obj = (ViewTimesheetBean) object;
        return new CompareToBuilder()
            .append(getTbtApprovalStatus(), obj.getTbtApprovalStatus())
            .append(getTbtGrandTotalHour(), obj.getTbtGrandTotalHour())
            .append(getTbtTotalHour(), obj.getTbtTotalHour())
            .append(getTbtDay7Hour(), obj.getTbtDay7Hour())
            .append(getTbtDay6Hour(), obj.getTbtDay6Hour())
            .append(getTbtDay5Hour(), obj.getTbtDay5Hour())
            .append(getTbtDay4Hour(), obj.getTbtDay4Hour())
            .append(getTbtDay3Hour(), obj.getTbtDay3Hour())
            .append(getTbtDay2Hour(), obj.getTbtDay2Hour())
            .append(getTbtDay1Hour(), obj.getTbtDay1Hour())
            .append(getTbtStartOfWeek(), obj.getTbtStartOfWeek())
            .append(getTbtUpdateTime(), obj.getTbtUpdateTime())
            .append(getTbtId(), obj.getTbtId())
            .append(getTbpaPayable(), obj.getTbpaPayable())
            .append(getTbpaName(), obj.getTbpaName())
            .append(getTbpaId(), obj.getTbpaId())
            .append(getTbpagName(), obj.getTbpagName())
            .append(getTbpagProjectActivitiesGroupId(), obj.getTbpagProjectActivitiesGroupId())
            .append(getTbpagId(), obj.getTbpagId())
            .append(getTbpName(), obj.getTbpName())
            .append(getTbpProjectId(), obj.getTbpProjectId())
            .append(getTbpId(), obj.getTbpId())
            .append(getTbcCustomerId(), obj.getTbcCustomerId())
            .append(getTbcName(), obj.getTbcName())
            .append(getTbcId(), obj.getTbcId())
            .append(getTbeName(), obj.getTbeName())
            .append(getTbeId(), obj.getTbeId())
            .toComparison();
   }
}
