// ______________________________________________________
// Generated by sql2java - http://sql2java.sourceforge.net/
// jdbc driver used at code generation time: com.mysql.jdbc.Driver
//
// Please help us improve this tool by reporting:
// - problems and suggestions to
//   http://sourceforge.net/tracker/?group_id=54687
// - feedbacks and ideas on
//   http://sourceforge.net/forum/forum.php?forum_id=182208
// ______________________________________________________

package com.gwt.hris.db;

import java.io.Serializable;
import java.util.HashMap;
import java.util.Map;

import org.apache.commons.lang.builder.CompareToBuilder;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.commons.lang.builder.ToStringStyle;

/**
 * TbEmploymentStatusBean is a mapping of tb_employment_status Table.
 * @author sql2java
*/
public class TbEmploymentStatusBean
    implements Serializable, GeneratedBean
{
	private static final long serialVersionUID = 7485064946440713757L;
	
    private String tbesName;

    private boolean tbesNameIsModified = false;
    private boolean tbesNameIsInitialized = false;

    private String tbesEmploymentStatusId;

    private boolean tbesEmploymentStatusIdIsModified = false;
    private boolean tbesEmploymentStatusIdIsInitialized = false;

    private Integer tbesId;

    private boolean tbesIdIsModified = false;
    private boolean tbesIdIsInitialized = false;

    private boolean _isNew = true;

    /**
     * Prefered methods to create a TbEmploymentStatusBean is via the createTbEmploymentStatusBean method in TbEmploymentStatusManager or
     * via the factory class TbEmploymentStatusFactory create method
     */
    protected TbEmploymentStatusBean()
    {
    }

    /**
     * Getter method for tbesName.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_employment_status.tbes_name</li>
     * <li>column size: 45</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbesName
     */
    public String getTbesName()
    {
        return tbesName;
    }

    /**
     * Setter method for tbesName.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbesName
     */
    public void setTbesName(String newVal)
    {
        if ((newVal != null && tbesName != null && (newVal.compareTo(tbesName) == 0)) ||
            (newVal == null && tbesName == null && tbesNameIsInitialized)) {
            return;
        }
        tbesName = newVal;
        tbesNameIsModified = true;
        tbesNameIsInitialized = true;
    }

    /**
     * Determines if the tbesName has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbesNameModified()
    {
        return tbesNameIsModified;
    }

    /**
     * Determines if the tbesName has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbesNameInitialized()
    {
        return tbesNameIsInitialized;
    }

    /**
     * Getter method for tbesEmploymentStatusId.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_employment_status.tbes_employment_status_id</li>
     * <li>column size: 45</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbesEmploymentStatusId
     */
    public String getTbesEmploymentStatusId()
    {
        return tbesEmploymentStatusId;
    }

    /**
     * Setter method for tbesEmploymentStatusId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbesEmploymentStatusId
     */
    public void setTbesEmploymentStatusId(String newVal)
    {
        if ((newVal != null && tbesEmploymentStatusId != null && (newVal.compareTo(tbesEmploymentStatusId) == 0)) ||
            (newVal == null && tbesEmploymentStatusId == null && tbesEmploymentStatusIdIsInitialized)) {
            return;
        }
        tbesEmploymentStatusId = newVal;
        tbesEmploymentStatusIdIsModified = true;
        tbesEmploymentStatusIdIsInitialized = true;
    }

    /**
     * Determines if the tbesEmploymentStatusId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbesEmploymentStatusIdModified()
    {
        return tbesEmploymentStatusIdIsModified;
    }

    /**
     * Determines if the tbesEmploymentStatusId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbesEmploymentStatusIdInitialized()
    {
        return tbesEmploymentStatusIdIsInitialized;
    }

    /**
     * Getter method for tbesId.
     * <br>
     * PRIMARY KEY.<br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_employment_status.tbes_id</li>
     * <li> imported key: tb_job.tbes_id</li>
     * <li> imported key: tb_job_employment_status.tbes_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbesId
     */
    public Integer getTbesId()
    {
        return tbesId;
    }

    /**
     * Setter method for tbesId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbesId
     */
    public void setTbesId(Integer newVal)
    {
        if ((newVal != null && tbesId != null && (newVal.compareTo(tbesId) == 0)) ||
            (newVal == null && tbesId == null && tbesIdIsInitialized)) {
            return;
        }
        tbesId = newVal;
        tbesIdIsModified = true;
        tbesIdIsInitialized = true;
    }

    /**
     * Setter method for tbesId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbesId
     */
    public void setTbesId(int newVal)
    {
        setTbesId(new Integer(newVal));
    }

    /**
     * Determines if the tbesId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbesIdModified()
    {
        return tbesIdIsModified;
    }

    /**
     * Determines if the tbesId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbesIdInitialized()
    {
        return tbesIdIsInitialized;
    }

    /**
     * Determines if the current object is new.
     *
     * @return true if the current object is new, false if the object is not new
     */
    public boolean isNew()
    {
        return _isNew;
    }

    /**
     * Specifies to the object if it has been set as new.
     *
     * @param isNew the boolean value to be assigned to the isNew field
     */
    public void isNew(boolean isNew)
    {
        this._isNew = isNew;
    }

    /**
     * Determines if the object has been modified since the last time this method was called.
     * <br>
     * We can also determine if this object has ever been modified since its creation.
     *
     * @return true if the object has been modified, false if the object has not been modified
     */
    public boolean isModified()
    {
        return tbesNameIsModified 		|| tbesEmploymentStatusIdIsModified  		|| tbesIdIsModified  ;
    }

    /**
     * Resets the object modification status to 'not modified'.
     */
    public void resetIsModified()
    {
        tbesNameIsModified = false;
        tbesEmploymentStatusIdIsModified = false;
        tbesIdIsModified = false;
    }

    /**
     * Copies the passed bean into the current bean.
     *
     * @param bean the bean to copy into the current bean
     */
    public void copy(TbEmploymentStatusBean bean)
    {
        setTbesName(bean.getTbesName());
        setTbesEmploymentStatusId(bean.getTbesEmploymentStatusId());
        setTbesId(bean.getTbesId());
    }

    /**
     * return a dictionnary of the object
     */
    public Map getDictionnary()
    {
        Map dictionnary = new HashMap();
        dictionnary.put("tbes_name", getTbesName() == null ? "" : getTbesName().toString());
        dictionnary.put("tbes_employment_status_id", getTbesEmploymentStatusId() == null ? "" : getTbesEmploymentStatusId().toString());
        dictionnary.put("tbes_id", getTbesId() == null ? "" : getTbesId().toString());
        return dictionnary;
    }

    /**
     * return a dictionnary of the pk columns
     */
    public Map getPkDictionnary()
    {
        Map dictionnary = new HashMap();
        dictionnary.put("tbes_id", getTbesId() == null ? "" : getTbesId().toString());
        return dictionnary;
    }

    /**
     * return a the value string representation of the given field
     */
    public String getValue(String column)
    {
        if (null == column || "".equals(column)) {
            return "";
        } else if ("tbes_name".equalsIgnoreCase(column) || "tbesName".equalsIgnoreCase(column)) {
            return getTbesName() == null ? "" : getTbesName().toString();
        } else if ("tbes_employment_status_id".equalsIgnoreCase(column) || "tbesEmploymentStatusId".equalsIgnoreCase(column)) {
            return getTbesEmploymentStatusId() == null ? "" : getTbesEmploymentStatusId().toString();
        } else if ("tbes_id".equalsIgnoreCase(column) || "tbesId".equalsIgnoreCase(column)) {
            return getTbesId() == null ? "" : getTbesId().toString();
        }
        return "";
    }

    /**
     * @see java.lang.Object#equals(Object)
     */
    public boolean equals(Object object)
    {
        if (!(object instanceof TbEmploymentStatusBean)) {
            return false;
        }

		TbEmploymentStatusBean obj = (TbEmploymentStatusBean) object;
		return new EqualsBuilder()
            .append(getTbesName(), obj.getTbesName())
            .append(getTbesEmploymentStatusId(), obj.getTbesEmploymentStatusId())
            .append(getTbesId(), obj.getTbesId())
            .isEquals();
	}

	/**
	 * @see java.lang.Object#hashCode()
	 */
	public int hashCode()
	{
		return new HashCodeBuilder(-82280557, -700257973)
            .append(getTbesName())
            .append(getTbesEmploymentStatusId())
            .append(getTbesId())
            .toHashCode();
	}

	/**
	 * @see java.lang.Object#toString()
	 */
	public String toString()
	{
	    return toString(ToStringStyle.MULTI_LINE_STYLE);
	}

	/**
	 * you can use the following styles:
	 * <li>ToStringStyle.DEFAULT_STYLE</li>
	 * <li>ToStringStyle.MULTI_LINE_STYLE</li>
     * <li>ToStringStyle.NO_FIELD_NAMES_STYLE</li>
     * <li>ToStringStyle.SHORT_PREFIX_STYLE</li>
     * <li>ToStringStyle.SIMPLE_STYLE</li>
	 */
	public String toString(ToStringStyle style) {
		return new ToStringBuilder(this, style)
            .append("tbes_name", getTbesName())
            .append("tbes_employment_status_id", getTbesEmploymentStatusId())
            .append("tbes_id", getTbesId())
            .toString();
	}


    public int compareTo(Object object)
    {
        TbEmploymentStatusBean obj = (TbEmploymentStatusBean) object;
        return new CompareToBuilder()
            .append(getTbesName(), obj.getTbesName())
            .append(getTbesEmploymentStatusId(), obj.getTbesEmploymentStatusId())
            .append(getTbesId(), obj.getTbesId())
            .toComparison();
   }
}
