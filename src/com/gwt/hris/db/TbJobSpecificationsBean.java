// ______________________________________________________
// Generated by sql2java - http://sql2java.sourceforge.net/
// jdbc driver used at code generation time: com.mysql.jdbc.Driver
//
// Please help us improve this tool by reporting:
// - problems and suggestions to
//   http://sourceforge.net/tracker/?group_id=54687
// - feedbacks and ideas on
//   http://sourceforge.net/forum/forum.php?forum_id=182208
// ______________________________________________________

package com.gwt.hris.db;

import java.io.Serializable;
import java.util.HashMap;
import java.util.Map;

import org.apache.commons.lang.builder.CompareToBuilder;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.commons.lang.builder.ToStringStyle;

/**
 * TbJobSpecificationsBean is a mapping of tb_job_specifications Table.
 * @author sql2java
*/
public class TbJobSpecificationsBean
    implements Serializable, GeneratedBean
{
	private static final long serialVersionUID = 7485064946440713757L;
	
    private String tbjsDuties;

    private boolean tbjsDutiesIsModified = false;
    private boolean tbjsDutiesIsInitialized = false;

    private String tbjsDescription;

    private boolean tbjsDescriptionIsModified = false;
    private boolean tbjsDescriptionIsInitialized = false;

    private String tbjsName;

    private boolean tbjsNameIsModified = false;
    private boolean tbjsNameIsInitialized = false;

    private Integer tbjsId;

    private boolean tbjsIdIsModified = false;
    private boolean tbjsIdIsInitialized = false;

    private boolean _isNew = true;

    /**
     * Prefered methods to create a TbJobSpecificationsBean is via the createTbJobSpecificationsBean method in TbJobSpecificationsManager or
     * via the factory class TbJobSpecificationsFactory create method
     */
    protected TbJobSpecificationsBean()
    {
    }

    /**
     * Getter method for tbjsDuties.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_job_specifications.tbjs_duties</li>
     * <li>column size: 500</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbjsDuties
     */
    public String getTbjsDuties()
    {
        return tbjsDuties;
    }

    /**
     * Setter method for tbjsDuties.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbjsDuties
     */
    public void setTbjsDuties(String newVal)
    {
        if ((newVal != null && tbjsDuties != null && (newVal.compareTo(tbjsDuties) == 0)) ||
            (newVal == null && tbjsDuties == null && tbjsDutiesIsInitialized)) {
            return;
        }
        tbjsDuties = newVal;
        tbjsDutiesIsModified = true;
        tbjsDutiesIsInitialized = true;
    }

    /**
     * Determines if the tbjsDuties has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbjsDutiesModified()
    {
        return tbjsDutiesIsModified;
    }

    /**
     * Determines if the tbjsDuties has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbjsDutiesInitialized()
    {
        return tbjsDutiesIsInitialized;
    }

    /**
     * Getter method for tbjsDescription.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_job_specifications.tbjs_description</li>
     * <li>column size: 500</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbjsDescription
     */
    public String getTbjsDescription()
    {
        return tbjsDescription;
    }

    /**
     * Setter method for tbjsDescription.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbjsDescription
     */
    public void setTbjsDescription(String newVal)
    {
        if ((newVal != null && tbjsDescription != null && (newVal.compareTo(tbjsDescription) == 0)) ||
            (newVal == null && tbjsDescription == null && tbjsDescriptionIsInitialized)) {
            return;
        }
        tbjsDescription = newVal;
        tbjsDescriptionIsModified = true;
        tbjsDescriptionIsInitialized = true;
    }

    /**
     * Determines if the tbjsDescription has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbjsDescriptionModified()
    {
        return tbjsDescriptionIsModified;
    }

    /**
     * Determines if the tbjsDescription has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbjsDescriptionInitialized()
    {
        return tbjsDescriptionIsInitialized;
    }

    /**
     * Getter method for tbjsName.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_job_specifications.tbjs_name</li>
     * <li>column size: 45</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbjsName
     */
    public String getTbjsName()
    {
        return tbjsName;
    }

    /**
     * Setter method for tbjsName.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbjsName
     */
    public void setTbjsName(String newVal)
    {
        if ((newVal != null && tbjsName != null && (newVal.compareTo(tbjsName) == 0)) ||
            (newVal == null && tbjsName == null && tbjsNameIsInitialized)) {
            return;
        }
        tbjsName = newVal;
        tbjsNameIsModified = true;
        tbjsNameIsInitialized = true;
    }

    /**
     * Determines if the tbjsName has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbjsNameModified()
    {
        return tbjsNameIsModified;
    }

    /**
     * Determines if the tbjsName has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbjsNameInitialized()
    {
        return tbjsNameIsInitialized;
    }

    /**
     * Getter method for tbjsId.
     * <br>
     * PRIMARY KEY.<br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_job_specifications.tbjs_id</li>
     * <li> imported key: tb_job_title.tbjs_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbjsId
     */
    public Integer getTbjsId()
    {
        return tbjsId;
    }

    /**
     * Setter method for tbjsId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbjsId
     */
    public void setTbjsId(Integer newVal)
    {
        if ((newVal != null && tbjsId != null && (newVal.compareTo(tbjsId) == 0)) ||
            (newVal == null && tbjsId == null && tbjsIdIsInitialized)) {
            return;
        }
        tbjsId = newVal;
        tbjsIdIsModified = true;
        tbjsIdIsInitialized = true;
    }

    /**
     * Setter method for tbjsId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbjsId
     */
    public void setTbjsId(int newVal)
    {
        setTbjsId(new Integer(newVal));
    }

    /**
     * Determines if the tbjsId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbjsIdModified()
    {
        return tbjsIdIsModified;
    }

    /**
     * Determines if the tbjsId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbjsIdInitialized()
    {
        return tbjsIdIsInitialized;
    }

    /**
     * Determines if the current object is new.
     *
     * @return true if the current object is new, false if the object is not new
     */
    public boolean isNew()
    {
        return _isNew;
    }

    /**
     * Specifies to the object if it has been set as new.
     *
     * @param isNew the boolean value to be assigned to the isNew field
     */
    public void isNew(boolean isNew)
    {
        this._isNew = isNew;
    }

    /**
     * Determines if the object has been modified since the last time this method was called.
     * <br>
     * We can also determine if this object has ever been modified since its creation.
     *
     * @return true if the object has been modified, false if the object has not been modified
     */
    public boolean isModified()
    {
        return tbjsDutiesIsModified 		|| tbjsDescriptionIsModified  		|| tbjsNameIsModified  		|| tbjsIdIsModified  ;
    }

    /**
     * Resets the object modification status to 'not modified'.
     */
    public void resetIsModified()
    {
        tbjsDutiesIsModified = false;
        tbjsDescriptionIsModified = false;
        tbjsNameIsModified = false;
        tbjsIdIsModified = false;
    }

    /**
     * Copies the passed bean into the current bean.
     *
     * @param bean the bean to copy into the current bean
     */
    public void copy(TbJobSpecificationsBean bean)
    {
        setTbjsDuties(bean.getTbjsDuties());
        setTbjsDescription(bean.getTbjsDescription());
        setTbjsName(bean.getTbjsName());
        setTbjsId(bean.getTbjsId());
    }

    /**
     * return a dictionnary of the object
     */
    public Map getDictionnary()
    {
        Map dictionnary = new HashMap();
        dictionnary.put("tbjs_duties", getTbjsDuties() == null ? "" : getTbjsDuties().toString());
        dictionnary.put("tbjs_description", getTbjsDescription() == null ? "" : getTbjsDescription().toString());
        dictionnary.put("tbjs_name", getTbjsName() == null ? "" : getTbjsName().toString());
        dictionnary.put("tbjs_id", getTbjsId() == null ? "" : getTbjsId().toString());
        return dictionnary;
    }

    /**
     * return a dictionnary of the pk columns
     */
    public Map getPkDictionnary()
    {
        Map dictionnary = new HashMap();
        dictionnary.put("tbjs_id", getTbjsId() == null ? "" : getTbjsId().toString());
        return dictionnary;
    }

    /**
     * return a the value string representation of the given field
     */
    public String getValue(String column)
    {
        if (null == column || "".equals(column)) {
            return "";
        } else if ("tbjs_duties".equalsIgnoreCase(column) || "tbjsDuties".equalsIgnoreCase(column)) {
            return getTbjsDuties() == null ? "" : getTbjsDuties().toString();
        } else if ("tbjs_description".equalsIgnoreCase(column) || "tbjsDescription".equalsIgnoreCase(column)) {
            return getTbjsDescription() == null ? "" : getTbjsDescription().toString();
        } else if ("tbjs_name".equalsIgnoreCase(column) || "tbjsName".equalsIgnoreCase(column)) {
            return getTbjsName() == null ? "" : getTbjsName().toString();
        } else if ("tbjs_id".equalsIgnoreCase(column) || "tbjsId".equalsIgnoreCase(column)) {
            return getTbjsId() == null ? "" : getTbjsId().toString();
        }
        return "";
    }

    /**
     * @see java.lang.Object#equals(Object)
     */
    public boolean equals(Object object)
    {
        if (!(object instanceof TbJobSpecificationsBean)) {
            return false;
        }

		TbJobSpecificationsBean obj = (TbJobSpecificationsBean) object;
		return new EqualsBuilder()
            .append(getTbjsDuties(), obj.getTbjsDuties())
            .append(getTbjsDescription(), obj.getTbjsDescription())
            .append(getTbjsName(), obj.getTbjsName())
            .append(getTbjsId(), obj.getTbjsId())
            .isEquals();
	}

	/**
	 * @see java.lang.Object#hashCode()
	 */
	public int hashCode()
	{
		return new HashCodeBuilder(-82280557, -700257973)
            .append(getTbjsDuties())
            .append(getTbjsDescription())
            .append(getTbjsName())
            .append(getTbjsId())
            .toHashCode();
	}

	/**
	 * @see java.lang.Object#toString()
	 */
	public String toString()
	{
	    return toString(ToStringStyle.MULTI_LINE_STYLE);
	}

	/**
	 * you can use the following styles:
	 * <li>ToStringStyle.DEFAULT_STYLE</li>
	 * <li>ToStringStyle.MULTI_LINE_STYLE</li>
     * <li>ToStringStyle.NO_FIELD_NAMES_STYLE</li>
     * <li>ToStringStyle.SHORT_PREFIX_STYLE</li>
     * <li>ToStringStyle.SIMPLE_STYLE</li>
	 */
	public String toString(ToStringStyle style) {
		return new ToStringBuilder(this, style)
            .append("tbjs_duties", getTbjsDuties())
            .append("tbjs_description", getTbjsDescription())
            .append("tbjs_name", getTbjsName())
            .append("tbjs_id", getTbjsId())
            .toString();
	}


    public int compareTo(Object object)
    {
        TbJobSpecificationsBean obj = (TbJobSpecificationsBean) object;
        return new CompareToBuilder()
            .append(getTbjsDuties(), obj.getTbjsDuties())
            .append(getTbjsDescription(), obj.getTbjsDescription())
            .append(getTbjsName(), obj.getTbjsName())
            .append(getTbjsId(), obj.getTbjsId())
            .toComparison();
   }
}
