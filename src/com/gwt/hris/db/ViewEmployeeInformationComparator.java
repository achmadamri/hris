// ______________________________________________________
// Generated by sql2java - http://sql2java.sourceforge.net/
// jdbc driver used at code generation time: com.mysql.jdbc.Driver
//
// Please help us improve this tool by reporting:
// - problems and suggestions to
//   http://sourceforge.net/tracker/?group_id=54687
// - feedbacks and ideas on
//   http://sourceforge.net/forum/forum.php?forum_id=182208
// ______________________________________________________

package com.gwt.hris.db;

import java.util.Comparator;


/**
 * Comparator class is used to sort the ViewEmployeeInformationBean objects.
 * @author sql2java
 */
public class ViewEmployeeInformationComparator implements Comparator
{
    /**
     * Holds the field on which the comparison is performed.
     */
    private int iType;
    /**
     * Value that will contain the information about the order of the sort: normal or reversal.
     */
    private boolean bReverse;

    /**
     * Constructor class for ViewEmployeeInformationComparator.
     * <br>
     * Example:
     * <br>
     * <code>Arrays.sort(pArray, new ViewEmployeeInformationComparator(ViewEmployeeInformationManager.ID_TBP_NAME, bReverse));<code>
     *
     * @param iType the field from which you want to sort
     * <br>
     * Possible values are:
     * <ul>
     *   <li>ViewEmployeeInformationManager.ID_TBP_NAME
     *   <li>ViewEmployeeInformationManager.ID_TBP_PERUSAHAAN_ID
     *   <li>ViewEmployeeInformationManager.ID_TBP_ID
     *   <li>ViewEmployeeInformationManager.ID_TBL_COMMENTS
     *   <li>ViewEmployeeInformationManager.ID_TBL_FAX
     *   <li>ViewEmployeeInformationManager.ID_TBL_PHONE
     *   <li>ViewEmployeeInformationManager.ID_TBL_ZIP_CODE
     *   <li>ViewEmployeeInformationManager.ID_TBL_ADDRESS
     *   <li>ViewEmployeeInformationManager.ID_TBL_CITY
     *   <li>ViewEmployeeInformationManager.ID_TBL_PROVINCE
     *   <li>ViewEmployeeInformationManager.ID_TBL_COUNTRY
     *   <li>ViewEmployeeInformationManager.ID_TBL_NAME
     *   <li>ViewEmployeeInformationManager.ID_TBL_LOCATION_ID
     *   <li>ViewEmployeeInformationManager.ID_TBL_ID
     *   <li>ViewEmployeeInformationManager.ID_TBO_NAMA
     *   <li>ViewEmployeeInformationManager.ID_TBO_PARENT_ID
     *   <li>ViewEmployeeInformationManager.ID_TBO_ID
     *   <li>ViewEmployeeInformationManager.ID_TBES_NAME
     *   <li>ViewEmployeeInformationManager.ID_TBES_EMPLOYMENT_STATUS_ID
     *   <li>ViewEmployeeInformationManager.ID_TBES_ID
     *   <li>ViewEmployeeInformationManager.ID_TBJ_JOINED_DATE
     *   <li>ViewEmployeeInformationManager.ID_TBJT_COMMENTS
     *   <li>ViewEmployeeInformationManager.ID_TBJT_DESCRIPTION
     *   <li>ViewEmployeeInformationManager.ID_TBJT_NAME
     *   <li>ViewEmployeeInformationManager.ID_TBJT_JOB_TITLE_ID
     *   <li>ViewEmployeeInformationManager.ID_TBJT_ID
     *   <li>ViewEmployeeInformationManager.ID_TBE_JOINED_DATE
     *   <li>ViewEmployeeInformationManager.ID_TBE_STATUS
     *   <li>ViewEmployeeInformationManager.ID_TBE_DRIVER_LICENSE_EXPIRY
     *   <li>ViewEmployeeInformationManager.ID_TBE_DRIVER_LICENSE_NO
     *   <li>ViewEmployeeInformationManager.ID_TBE_GENDER
     *   <li>ViewEmployeeInformationManager.ID_TBE_SMOKER
     *   <li>ViewEmployeeInformationManager.ID_TBE_MARITAL_STATUS
     *   <li>ViewEmployeeInformationManager.ID_TBE_DOB
     *   <li>ViewEmployeeInformationManager.ID_TBE_ID_NO
     *   <li>ViewEmployeeInformationManager.ID_TBE_PHOTO_FILE_NAME
     *   <li>ViewEmployeeInformationManager.ID_TBE_NAME
     *   <li>ViewEmployeeInformationManager.ID_TBE_NICK_NAME
     *   <li>ViewEmployeeInformationManager.ID_TBE_LAST_NAME
     *   <li>ViewEmployeeInformationManager.ID_TBE_MIDDLE_NAME
     *   <li>ViewEmployeeInformationManager.ID_TBE_FIRST_NAME
     *   <li>ViewEmployeeInformationManager.ID_TBE_EMPLOYEE_ID
     *   <li>ViewEmployeeInformationManager.ID_TBE_EMAIL
     *   <li>ViewEmployeeInformationManager.ID_TBE_ID
     * </ul>
     */
    public ViewEmployeeInformationComparator(int iType)
    {
        this(iType, false);
    }

    /**
     * Constructor class for ViewEmployeeInformationComparator.
     * <br>
     * Example:
     * <br>
     * <code>Arrays.sort(pArray, new ViewEmployeeInformationComparator(ViewEmployeeInformationManager.ID_TBP_NAME, bReverse));<code>
     *
     * @param iType the field from which you want to sort.
     * <br>
     * Possible values are:
     * <ul>
     *   <li>ViewEmployeeInformationManager.ID_TBP_NAME
     *   <li>ViewEmployeeInformationManager.ID_TBP_PERUSAHAAN_ID
     *   <li>ViewEmployeeInformationManager.ID_TBP_ID
     *   <li>ViewEmployeeInformationManager.ID_TBL_COMMENTS
     *   <li>ViewEmployeeInformationManager.ID_TBL_FAX
     *   <li>ViewEmployeeInformationManager.ID_TBL_PHONE
     *   <li>ViewEmployeeInformationManager.ID_TBL_ZIP_CODE
     *   <li>ViewEmployeeInformationManager.ID_TBL_ADDRESS
     *   <li>ViewEmployeeInformationManager.ID_TBL_CITY
     *   <li>ViewEmployeeInformationManager.ID_TBL_PROVINCE
     *   <li>ViewEmployeeInformationManager.ID_TBL_COUNTRY
     *   <li>ViewEmployeeInformationManager.ID_TBL_NAME
     *   <li>ViewEmployeeInformationManager.ID_TBL_LOCATION_ID
     *   <li>ViewEmployeeInformationManager.ID_TBL_ID
     *   <li>ViewEmployeeInformationManager.ID_TBO_NAMA
     *   <li>ViewEmployeeInformationManager.ID_TBO_PARENT_ID
     *   <li>ViewEmployeeInformationManager.ID_TBO_ID
     *   <li>ViewEmployeeInformationManager.ID_TBES_NAME
     *   <li>ViewEmployeeInformationManager.ID_TBES_EMPLOYMENT_STATUS_ID
     *   <li>ViewEmployeeInformationManager.ID_TBES_ID
     *   <li>ViewEmployeeInformationManager.ID_TBJ_JOINED_DATE
     *   <li>ViewEmployeeInformationManager.ID_TBJT_COMMENTS
     *   <li>ViewEmployeeInformationManager.ID_TBJT_DESCRIPTION
     *   <li>ViewEmployeeInformationManager.ID_TBJT_NAME
     *   <li>ViewEmployeeInformationManager.ID_TBJT_JOB_TITLE_ID
     *   <li>ViewEmployeeInformationManager.ID_TBJT_ID
     *   <li>ViewEmployeeInformationManager.ID_TBE_JOINED_DATE
     *   <li>ViewEmployeeInformationManager.ID_TBE_STATUS
     *   <li>ViewEmployeeInformationManager.ID_TBE_DRIVER_LICENSE_EXPIRY
     *   <li>ViewEmployeeInformationManager.ID_TBE_DRIVER_LICENSE_NO
     *   <li>ViewEmployeeInformationManager.ID_TBE_GENDER
     *   <li>ViewEmployeeInformationManager.ID_TBE_SMOKER
     *   <li>ViewEmployeeInformationManager.ID_TBE_MARITAL_STATUS
     *   <li>ViewEmployeeInformationManager.ID_TBE_DOB
     *   <li>ViewEmployeeInformationManager.ID_TBE_ID_NO
     *   <li>ViewEmployeeInformationManager.ID_TBE_PHOTO_FILE_NAME
     *   <li>ViewEmployeeInformationManager.ID_TBE_NAME
     *   <li>ViewEmployeeInformationManager.ID_TBE_NICK_NAME
     *   <li>ViewEmployeeInformationManager.ID_TBE_LAST_NAME
     *   <li>ViewEmployeeInformationManager.ID_TBE_MIDDLE_NAME
     *   <li>ViewEmployeeInformationManager.ID_TBE_FIRST_NAME
     *   <li>ViewEmployeeInformationManager.ID_TBE_EMPLOYEE_ID
     *   <li>ViewEmployeeInformationManager.ID_TBE_EMAIL
     *   <li>ViewEmployeeInformationManager.ID_TBE_ID
     * </ul>
     *
     * @param bReverse set this value to true, if you want to reverse the sorting results
     */
    public ViewEmployeeInformationComparator(int iType, boolean bReverse)
    {
        this.iType = iType;
        this.bReverse = bReverse;
    }

    /**
     * Implementation of the compare method.
     */
    public int compare(Object pObj1, Object pObj2)
    {
        ViewEmployeeInformationBean b1 = (ViewEmployeeInformationBean)pObj1;
        ViewEmployeeInformationBean b2 = (ViewEmployeeInformationBean)pObj2;
        int iReturn = 0;
        switch(iType)
        {
            case ViewEmployeeInformationManager.ID_TBP_NAME:
                if (b1.getTbpName() == null && b2.getTbpName() != null) {
                    iReturn = -1;
                } else if (b1.getTbpName() == null && b2.getTbpName() == null) {
                    iReturn = 0;
                } else if (b1.getTbpName() != null && b2.getTbpName() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbpName().compareTo(b2.getTbpName());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBP_PERUSAHAAN_ID:
                if (b1.getTbpPerusahaanId() == null && b2.getTbpPerusahaanId() != null) {
                    iReturn = -1;
                } else if (b1.getTbpPerusahaanId() == null && b2.getTbpPerusahaanId() == null) {
                    iReturn = 0;
                } else if (b1.getTbpPerusahaanId() != null && b2.getTbpPerusahaanId() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbpPerusahaanId().compareTo(b2.getTbpPerusahaanId());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBP_ID:
                if (b1.getTbpId() == null && b2.getTbpId() != null) {
                    iReturn = -1;
                } else if (b1.getTbpId() == null && b2.getTbpId() == null) {
                    iReturn = 0;
                } else if (b1.getTbpId() != null && b2.getTbpId() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbpId().compareTo(b2.getTbpId());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBL_COMMENTS:
                if (b1.getTblComments() == null && b2.getTblComments() != null) {
                    iReturn = -1;
                } else if (b1.getTblComments() == null && b2.getTblComments() == null) {
                    iReturn = 0;
                } else if (b1.getTblComments() != null && b2.getTblComments() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTblComments().compareTo(b2.getTblComments());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBL_FAX:
                if (b1.getTblFax() == null && b2.getTblFax() != null) {
                    iReturn = -1;
                } else if (b1.getTblFax() == null && b2.getTblFax() == null) {
                    iReturn = 0;
                } else if (b1.getTblFax() != null && b2.getTblFax() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTblFax().compareTo(b2.getTblFax());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBL_PHONE:
                if (b1.getTblPhone() == null && b2.getTblPhone() != null) {
                    iReturn = -1;
                } else if (b1.getTblPhone() == null && b2.getTblPhone() == null) {
                    iReturn = 0;
                } else if (b1.getTblPhone() != null && b2.getTblPhone() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTblPhone().compareTo(b2.getTblPhone());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBL_ZIP_CODE:
                if (b1.getTblZipCode() == null && b2.getTblZipCode() != null) {
                    iReturn = -1;
                } else if (b1.getTblZipCode() == null && b2.getTblZipCode() == null) {
                    iReturn = 0;
                } else if (b1.getTblZipCode() != null && b2.getTblZipCode() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTblZipCode().compareTo(b2.getTblZipCode());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBL_ADDRESS:
                if (b1.getTblAddress() == null && b2.getTblAddress() != null) {
                    iReturn = -1;
                } else if (b1.getTblAddress() == null && b2.getTblAddress() == null) {
                    iReturn = 0;
                } else if (b1.getTblAddress() != null && b2.getTblAddress() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTblAddress().compareTo(b2.getTblAddress());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBL_CITY:
                if (b1.getTblCity() == null && b2.getTblCity() != null) {
                    iReturn = -1;
                } else if (b1.getTblCity() == null && b2.getTblCity() == null) {
                    iReturn = 0;
                } else if (b1.getTblCity() != null && b2.getTblCity() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTblCity().compareTo(b2.getTblCity());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBL_PROVINCE:
                if (b1.getTblProvince() == null && b2.getTblProvince() != null) {
                    iReturn = -1;
                } else if (b1.getTblProvince() == null && b2.getTblProvince() == null) {
                    iReturn = 0;
                } else if (b1.getTblProvince() != null && b2.getTblProvince() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTblProvince().compareTo(b2.getTblProvince());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBL_COUNTRY:
                if (b1.getTblCountry() == null && b2.getTblCountry() != null) {
                    iReturn = -1;
                } else if (b1.getTblCountry() == null && b2.getTblCountry() == null) {
                    iReturn = 0;
                } else if (b1.getTblCountry() != null && b2.getTblCountry() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTblCountry().compareTo(b2.getTblCountry());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBL_NAME:
                if (b1.getTblName() == null && b2.getTblName() != null) {
                    iReturn = -1;
                } else if (b1.getTblName() == null && b2.getTblName() == null) {
                    iReturn = 0;
                } else if (b1.getTblName() != null && b2.getTblName() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTblName().compareTo(b2.getTblName());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBL_LOCATION_ID:
                if (b1.getTblLocationId() == null && b2.getTblLocationId() != null) {
                    iReturn = -1;
                } else if (b1.getTblLocationId() == null && b2.getTblLocationId() == null) {
                    iReturn = 0;
                } else if (b1.getTblLocationId() != null && b2.getTblLocationId() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTblLocationId().compareTo(b2.getTblLocationId());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBL_ID:
                if (b1.getTblId() == null && b2.getTblId() != null) {
                    iReturn = -1;
                } else if (b1.getTblId() == null && b2.getTblId() == null) {
                    iReturn = 0;
                } else if (b1.getTblId() != null && b2.getTblId() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTblId().compareTo(b2.getTblId());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBO_NAMA:
                if (b1.getTboNama() == null && b2.getTboNama() != null) {
                    iReturn = -1;
                } else if (b1.getTboNama() == null && b2.getTboNama() == null) {
                    iReturn = 0;
                } else if (b1.getTboNama() != null && b2.getTboNama() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTboNama().compareTo(b2.getTboNama());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBO_PARENT_ID:
                if (b1.getTboParentId() == null && b2.getTboParentId() != null) {
                    iReturn = -1;
                } else if (b1.getTboParentId() == null && b2.getTboParentId() == null) {
                    iReturn = 0;
                } else if (b1.getTboParentId() != null && b2.getTboParentId() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTboParentId().compareTo(b2.getTboParentId());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBO_ID:
                if (b1.getTboId() == null && b2.getTboId() != null) {
                    iReturn = -1;
                } else if (b1.getTboId() == null && b2.getTboId() == null) {
                    iReturn = 0;
                } else if (b1.getTboId() != null && b2.getTboId() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTboId().compareTo(b2.getTboId());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBES_NAME:
                if (b1.getTbesName() == null && b2.getTbesName() != null) {
                    iReturn = -1;
                } else if (b1.getTbesName() == null && b2.getTbesName() == null) {
                    iReturn = 0;
                } else if (b1.getTbesName() != null && b2.getTbesName() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbesName().compareTo(b2.getTbesName());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBES_EMPLOYMENT_STATUS_ID:
                if (b1.getTbesEmploymentStatusId() == null && b2.getTbesEmploymentStatusId() != null) {
                    iReturn = -1;
                } else if (b1.getTbesEmploymentStatusId() == null && b2.getTbesEmploymentStatusId() == null) {
                    iReturn = 0;
                } else if (b1.getTbesEmploymentStatusId() != null && b2.getTbesEmploymentStatusId() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbesEmploymentStatusId().compareTo(b2.getTbesEmploymentStatusId());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBES_ID:
                if (b1.getTbesId() == null && b2.getTbesId() != null) {
                    iReturn = -1;
                } else if (b1.getTbesId() == null && b2.getTbesId() == null) {
                    iReturn = 0;
                } else if (b1.getTbesId() != null && b2.getTbesId() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbesId().compareTo(b2.getTbesId());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBJ_JOINED_DATE:
                if (b1.getTbjJoinedDate() == null && b2.getTbjJoinedDate() != null) {
                    iReturn = -1;
                } else if (b1.getTbjJoinedDate() == null && b2.getTbjJoinedDate() == null) {
                    iReturn = 0;
                } else if (b1.getTbjJoinedDate() != null && b2.getTbjJoinedDate() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbjJoinedDate().compareTo(b2.getTbjJoinedDate());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBJT_COMMENTS:
                if (b1.getTbjtComments() == null && b2.getTbjtComments() != null) {
                    iReturn = -1;
                } else if (b1.getTbjtComments() == null && b2.getTbjtComments() == null) {
                    iReturn = 0;
                } else if (b1.getTbjtComments() != null && b2.getTbjtComments() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbjtComments().compareTo(b2.getTbjtComments());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBJT_DESCRIPTION:
                if (b1.getTbjtDescription() == null && b2.getTbjtDescription() != null) {
                    iReturn = -1;
                } else if (b1.getTbjtDescription() == null && b2.getTbjtDescription() == null) {
                    iReturn = 0;
                } else if (b1.getTbjtDescription() != null && b2.getTbjtDescription() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbjtDescription().compareTo(b2.getTbjtDescription());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBJT_NAME:
                if (b1.getTbjtName() == null && b2.getTbjtName() != null) {
                    iReturn = -1;
                } else if (b1.getTbjtName() == null && b2.getTbjtName() == null) {
                    iReturn = 0;
                } else if (b1.getTbjtName() != null && b2.getTbjtName() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbjtName().compareTo(b2.getTbjtName());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBJT_JOB_TITLE_ID:
                if (b1.getTbjtJobTitleId() == null && b2.getTbjtJobTitleId() != null) {
                    iReturn = -1;
                } else if (b1.getTbjtJobTitleId() == null && b2.getTbjtJobTitleId() == null) {
                    iReturn = 0;
                } else if (b1.getTbjtJobTitleId() != null && b2.getTbjtJobTitleId() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbjtJobTitleId().compareTo(b2.getTbjtJobTitleId());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBJT_ID:
                if (b1.getTbjtId() == null && b2.getTbjtId() != null) {
                    iReturn = -1;
                } else if (b1.getTbjtId() == null && b2.getTbjtId() == null) {
                    iReturn = 0;
                } else if (b1.getTbjtId() != null && b2.getTbjtId() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbjtId().compareTo(b2.getTbjtId());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBE_JOINED_DATE:
                if (b1.getTbeJoinedDate() == null && b2.getTbeJoinedDate() != null) {
                    iReturn = -1;
                } else if (b1.getTbeJoinedDate() == null && b2.getTbeJoinedDate() == null) {
                    iReturn = 0;
                } else if (b1.getTbeJoinedDate() != null && b2.getTbeJoinedDate() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbeJoinedDate().compareTo(b2.getTbeJoinedDate());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBE_STATUS:
                if (b1.getTbeStatus() == null && b2.getTbeStatus() != null) {
                    iReturn = -1;
                } else if (b1.getTbeStatus() == null && b2.getTbeStatus() == null) {
                    iReturn = 0;
                } else if (b1.getTbeStatus() != null && b2.getTbeStatus() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbeStatus().compareTo(b2.getTbeStatus());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBE_DRIVER_LICENSE_EXPIRY:
                if (b1.getTbeDriverLicenseExpiry() == null && b2.getTbeDriverLicenseExpiry() != null) {
                    iReturn = -1;
                } else if (b1.getTbeDriverLicenseExpiry() == null && b2.getTbeDriverLicenseExpiry() == null) {
                    iReturn = 0;
                } else if (b1.getTbeDriverLicenseExpiry() != null && b2.getTbeDriverLicenseExpiry() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbeDriverLicenseExpiry().compareTo(b2.getTbeDriverLicenseExpiry());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBE_DRIVER_LICENSE_NO:
                if (b1.getTbeDriverLicenseNo() == null && b2.getTbeDriverLicenseNo() != null) {
                    iReturn = -1;
                } else if (b1.getTbeDriverLicenseNo() == null && b2.getTbeDriverLicenseNo() == null) {
                    iReturn = 0;
                } else if (b1.getTbeDriverLicenseNo() != null && b2.getTbeDriverLicenseNo() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbeDriverLicenseNo().compareTo(b2.getTbeDriverLicenseNo());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBE_GENDER:
                if (b1.getTbeGender() == null && b2.getTbeGender() != null) {
                    iReturn = -1;
                } else if (b1.getTbeGender() == null && b2.getTbeGender() == null) {
                    iReturn = 0;
                } else if (b1.getTbeGender() != null && b2.getTbeGender() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbeGender().compareTo(b2.getTbeGender());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBE_SMOKER:
                if (b1.getTbeSmoker() == null && b2.getTbeSmoker() != null) {
                    iReturn = -1;
                } else if (b1.getTbeSmoker() == null && b2.getTbeSmoker() == null) {
                    iReturn = 0;
                } else if (b1.getTbeSmoker() != null && b2.getTbeSmoker() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbeSmoker().compareTo(b2.getTbeSmoker());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBE_MARITAL_STATUS:
                if (b1.getTbeMaritalStatus() == null && b2.getTbeMaritalStatus() != null) {
                    iReturn = -1;
                } else if (b1.getTbeMaritalStatus() == null && b2.getTbeMaritalStatus() == null) {
                    iReturn = 0;
                } else if (b1.getTbeMaritalStatus() != null && b2.getTbeMaritalStatus() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbeMaritalStatus().compareTo(b2.getTbeMaritalStatus());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBE_DOB:
                if (b1.getTbeDob() == null && b2.getTbeDob() != null) {
                    iReturn = -1;
                } else if (b1.getTbeDob() == null && b2.getTbeDob() == null) {
                    iReturn = 0;
                } else if (b1.getTbeDob() != null && b2.getTbeDob() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbeDob().compareTo(b2.getTbeDob());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBE_ID_NO:
                if (b1.getTbeIdNo() == null && b2.getTbeIdNo() != null) {
                    iReturn = -1;
                } else if (b1.getTbeIdNo() == null && b2.getTbeIdNo() == null) {
                    iReturn = 0;
                } else if (b1.getTbeIdNo() != null && b2.getTbeIdNo() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbeIdNo().compareTo(b2.getTbeIdNo());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBE_PHOTO_FILE_NAME:
                if (b1.getTbePhotoFileName() == null && b2.getTbePhotoFileName() != null) {
                    iReturn = -1;
                } else if (b1.getTbePhotoFileName() == null && b2.getTbePhotoFileName() == null) {
                    iReturn = 0;
                } else if (b1.getTbePhotoFileName() != null && b2.getTbePhotoFileName() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbePhotoFileName().compareTo(b2.getTbePhotoFileName());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBE_NAME:
                if (b1.getTbeName() == null && b2.getTbeName() != null) {
                    iReturn = -1;
                } else if (b1.getTbeName() == null && b2.getTbeName() == null) {
                    iReturn = 0;
                } else if (b1.getTbeName() != null && b2.getTbeName() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbeName().compareTo(b2.getTbeName());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBE_NICK_NAME:
                if (b1.getTbeNickName() == null && b2.getTbeNickName() != null) {
                    iReturn = -1;
                } else if (b1.getTbeNickName() == null && b2.getTbeNickName() == null) {
                    iReturn = 0;
                } else if (b1.getTbeNickName() != null && b2.getTbeNickName() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbeNickName().compareTo(b2.getTbeNickName());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBE_LAST_NAME:
                if (b1.getTbeLastName() == null && b2.getTbeLastName() != null) {
                    iReturn = -1;
                } else if (b1.getTbeLastName() == null && b2.getTbeLastName() == null) {
                    iReturn = 0;
                } else if (b1.getTbeLastName() != null && b2.getTbeLastName() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbeLastName().compareTo(b2.getTbeLastName());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBE_MIDDLE_NAME:
                if (b1.getTbeMiddleName() == null && b2.getTbeMiddleName() != null) {
                    iReturn = -1;
                } else if (b1.getTbeMiddleName() == null && b2.getTbeMiddleName() == null) {
                    iReturn = 0;
                } else if (b1.getTbeMiddleName() != null && b2.getTbeMiddleName() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbeMiddleName().compareTo(b2.getTbeMiddleName());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBE_FIRST_NAME:
                if (b1.getTbeFirstName() == null && b2.getTbeFirstName() != null) {
                    iReturn = -1;
                } else if (b1.getTbeFirstName() == null && b2.getTbeFirstName() == null) {
                    iReturn = 0;
                } else if (b1.getTbeFirstName() != null && b2.getTbeFirstName() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbeFirstName().compareTo(b2.getTbeFirstName());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBE_EMPLOYEE_ID:
                if (b1.getTbeEmployeeId() == null && b2.getTbeEmployeeId() != null) {
                    iReturn = -1;
                } else if (b1.getTbeEmployeeId() == null && b2.getTbeEmployeeId() == null) {
                    iReturn = 0;
                } else if (b1.getTbeEmployeeId() != null && b2.getTbeEmployeeId() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbeEmployeeId().compareTo(b2.getTbeEmployeeId());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBE_EMAIL:
                if (b1.getTbeEmail() == null && b2.getTbeEmail() != null) {
                    iReturn = -1;
                } else if (b1.getTbeEmail() == null && b2.getTbeEmail() == null) {
                    iReturn = 0;
                } else if (b1.getTbeEmail() != null && b2.getTbeEmail() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbeEmail().compareTo(b2.getTbeEmail());
                }
                break;
            case ViewEmployeeInformationManager.ID_TBE_ID:
                if (b1.getTbeId() == null && b2.getTbeId() != null) {
                    iReturn = -1;
                } else if (b1.getTbeId() == null && b2.getTbeId() == null) {
                    iReturn = 0;
                } else if (b1.getTbeId() != null && b2.getTbeId() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbeId().compareTo(b2.getTbeId());
                }
                break;
            default:
                throw new IllegalArgumentException("Type passed for the field is not supported");
        }

        return bReverse ? (-1 * iReturn) : iReturn;
    }}
