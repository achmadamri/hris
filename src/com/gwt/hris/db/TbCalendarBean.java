// ______________________________________________________
// Generated by sql2java - http://sql2java.sourceforge.net/
// jdbc driver used at code generation time: com.mysql.jdbc.Driver
//
// Please help us improve this tool by reporting:
// - problems and suggestions to
//   http://sourceforge.net/tracker/?group_id=54687
// - feedbacks and ideas on
//   http://sourceforge.net/forum/forum.php?forum_id=182208
// ______________________________________________________

package com.gwt.hris.db;

import java.io.Serializable;
import java.util.HashMap;
import java.util.Map;

import org.apache.commons.lang.builder.CompareToBuilder;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.commons.lang.builder.ToStringStyle;

/**
 * TbCalendarBean is a mapping of tb_calendar Table.
 * @author sql2java
*/
public class TbCalendarBean
    implements Serializable, GeneratedBean
{
	private static final long serialVersionUID = -6560103239556721976L;
	
    private String tbcDate;

    private boolean tbcDateIsModified = false;
    private boolean tbcDateIsInitialized = false;

    private boolean _isNew = true;

    /**
     * Prefered methods to create a TbCalendarBean is via the createTbCalendarBean method in TbCalendarManager or
     * via the factory class TbCalendarFactory create method
     */
    protected TbCalendarBean()
    {
    }

    /**
     * Getter method for tbcDate.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_calendar.tbc_date</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbcDate
     */
    public String getTbcDate()
    {
        return tbcDate;
    }

    /**
     * Setter method for tbcDate.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbcDate
     */
    public void setTbcDate(String newVal)
    {
        if ((newVal != null && tbcDate != null && (newVal.compareTo(tbcDate) == 0)) ||
            (newVal == null && tbcDate == null && tbcDateIsInitialized)) {
            return;
        }
        tbcDate = newVal;
        tbcDateIsModified = true;
        tbcDateIsInitialized = true;
    }

    /**
     * Determines if the tbcDate has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbcDateModified()
    {
        return tbcDateIsModified;
    }

    /**
     * Determines if the tbcDate has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbcDateInitialized()
    {
        return tbcDateIsInitialized;
    }

    /**
     * Determines if the current object is new.
     *
     * @return true if the current object is new, false if the object is not new
     */
    public boolean isNew()
    {
        return _isNew;
    }

    /**
     * Specifies to the object if it has been set as new.
     *
     * @param isNew the boolean value to be assigned to the isNew field
     */
    public void isNew(boolean isNew)
    {
        this._isNew = isNew;
    }

    /**
     * Determines if the object has been modified since the last time this method was called.
     * <br>
     * We can also determine if this object has ever been modified since its creation.
     *
     * @return true if the object has been modified, false if the object has not been modified
     */
    public boolean isModified()
    {
        return tbcDateIsModified ;
    }

    /**
     * Resets the object modification status to 'not modified'.
     */
    public void resetIsModified()
    {
        tbcDateIsModified = false;
    }

    /**
     * Copies the passed bean into the current bean.
     *
     * @param bean the bean to copy into the current bean
     */
    public void copy(TbCalendarBean bean)
    {
        setTbcDate(bean.getTbcDate());
    }

    /**
     * return a dictionnary of the object
     */
    public Map getDictionnary()
    {
        Map dictionnary = new HashMap();
        dictionnary.put("tbc_date", getTbcDate() == null ? "" : getTbcDate().toString());
        return dictionnary;
    }

    /**
     * return a dictionnary of the pk columns
     * no primary key, the regular dictionnary is returned
     */
    public Map getPkDictionnary()
    {
        return getDictionnary();
    }

    /**
     * return a the value string representation of the given field
     */
    public String getValue(String column)
    {
        if (null == column || "".equals(column)) {
            return "";
        } else if ("tbc_date".equalsIgnoreCase(column) || "tbcDate".equalsIgnoreCase(column)) {
            return getTbcDate() == null ? "" : getTbcDate().toString();
        }
        return "";
    }

    /**
     * @see java.lang.Object#equals(Object)
     */
    public boolean equals(Object object)
    {
        if (!(object instanceof TbCalendarBean)) {
            return false;
        }

		TbCalendarBean obj = (TbCalendarBean) object;
		return new EqualsBuilder()
            .append(getTbcDate(), obj.getTbcDate())
            .isEquals();
	}

	/**
	 * @see java.lang.Object#hashCode()
	 */
	public int hashCode()
	{
		return new HashCodeBuilder(-82280557, -700257973)
            .append(getTbcDate())
            .toHashCode();
	}

	/**
	 * @see java.lang.Object#toString()
	 */
	public String toString()
	{
	    return toString(ToStringStyle.MULTI_LINE_STYLE);
	}

	/**
	 * you can use the following styles:
	 * <li>ToStringStyle.DEFAULT_STYLE</li>
	 * <li>ToStringStyle.MULTI_LINE_STYLE</li>
     * <li>ToStringStyle.NO_FIELD_NAMES_STYLE</li>
     * <li>ToStringStyle.SHORT_PREFIX_STYLE</li>
     * <li>ToStringStyle.SIMPLE_STYLE</li>
	 */
	public String toString(ToStringStyle style) {
		return new ToStringBuilder(this, style)
            .append("tbc_date", getTbcDate())
            .toString();
	}


    public int compareTo(Object object)
    {
        TbCalendarBean obj = (TbCalendarBean) object;
        return new CompareToBuilder()
            .append(getTbcDate(), obj.getTbcDate())
            .toComparison();
   }
}
