// ______________________________________________________
// Generated by sql2java - http://sql2java.sourceforge.net/
// jdbc driver used at code generation time: com.mysql.jdbc.Driver
//
// Please help us improve this tool by reporting:
// - problems and suggestions to
//   http://sourceforge.net/tracker/?group_id=54687
// - feedbacks and ideas on
//   http://sourceforge.net/forum/forum.php?forum_id=182208
// ______________________________________________________

package com.gwt.hris.db;

import java.io.Serializable;
import java.util.HashMap;
import java.util.Map;

import org.apache.commons.lang.builder.CompareToBuilder;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.commons.lang.builder.ToStringStyle;

/**
 * ViewAssignedLoanBean is a mapping of view_assigned_loan Table.
 * @author sql2java
*/
public class ViewAssignedLoanBean
    implements Serializable, GeneratedBean
{
	private static final long serialVersionUID = -7515628594502863897L;
	
    private Double tbaloNominalTotalLeft;

    private boolean tbaloNominalTotalLeftIsModified = false;
    private boolean tbaloNominalTotalLeftIsInitialized = false;

    private Double tbcLocalCurrencyKurs;

    private boolean tbcLocalCurrencyKursIsModified = false;
    private boolean tbcLocalCurrencyKursIsInitialized = false;

    private String tbcName;

    private boolean tbcNameIsModified = false;
    private boolean tbcNameIsInitialized = false;

    private String tbcCurrencyId;

    private boolean tbcCurrencyIdIsModified = false;
    private boolean tbcCurrencyIdIsInitialized = false;

    private Integer tbaloStatus;

    private boolean tbaloStatusIsModified = false;
    private boolean tbaloStatusIsInitialized = false;

    private String tbaloComments;

    private boolean tbaloCommentsIsModified = false;
    private boolean tbaloCommentsIsInitialized = false;

    private Double tbaloMonthlyPayment;

    private boolean tbaloMonthlyPaymentIsModified = false;
    private boolean tbaloMonthlyPaymentIsInitialized = false;

    private Double tbaloNominalTotal;

    private boolean tbaloNominalTotalIsModified = false;
    private boolean tbaloNominalTotalIsInitialized = false;

    private Integer tbaloTenor;

    private boolean tbaloTenorIsModified = false;
    private boolean tbaloTenorIsInitialized = false;

    private Double tbaloInterest;

    private boolean tbaloInterestIsModified = false;
    private boolean tbaloInterestIsInitialized = false;

    private Double tbaloNominal;

    private boolean tbaloNominalIsModified = false;
    private boolean tbaloNominalIsInitialized = false;

    private String tbaloEndDate;

    private boolean tbaloEndDateIsModified = false;
    private boolean tbaloEndDateIsInitialized = false;

    private String tbaloStartDate;

    private boolean tbaloStartDateIsModified = false;
    private boolean tbaloStartDateIsInitialized = false;

    private java.sql.Timestamp tbaloUpdatedTime;

    private boolean tbaloUpdatedTimeIsModified = false;
    private boolean tbaloUpdatedTimeIsInitialized = false;

    private java.sql.Timestamp tbaloCreatedTime;

    private boolean tbaloCreatedTimeIsModified = false;
    private boolean tbaloCreatedTimeIsInitialized = false;

    private String tbaloName;

    private boolean tbaloNameIsModified = false;
    private boolean tbaloNameIsInitialized = false;

    private Integer tbcId;

    private boolean tbcIdIsModified = false;
    private boolean tbcIdIsInitialized = false;

    private Integer tbaloId;

    private boolean tbaloIdIsModified = false;
    private boolean tbaloIdIsInitialized = false;

    private String tbeName;

    private boolean tbeNameIsModified = false;
    private boolean tbeNameIsInitialized = false;

    private String tbeEmployeeId;

    private boolean tbeEmployeeIdIsModified = false;
    private boolean tbeEmployeeIdIsInitialized = false;

    private Integer tbeId;

    private boolean tbeIdIsModified = false;
    private boolean tbeIdIsInitialized = false;

    private boolean _isNew = true;

    /**
     * Prefered methods to create a ViewAssignedLoanBean is via the createViewAssignedLoanBean method in ViewAssignedLoanManager or
     * via the factory class ViewAssignedLoanFactory create method
     */
    protected ViewAssignedLoanBean()
    {
    }

    /**
     * Getter method for tbaloNominalTotalLeft.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_assigned_loan.tbalo_nominal_total_left</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbaloNominalTotalLeft
     */
    public Double getTbaloNominalTotalLeft()
    {
        return tbaloNominalTotalLeft;
    }

    /**
     * Setter method for tbaloNominalTotalLeft.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbaloNominalTotalLeft
     */
    public void setTbaloNominalTotalLeft(Double newVal)
    {
        if ((newVal != null && tbaloNominalTotalLeft != null && (newVal.compareTo(tbaloNominalTotalLeft) == 0)) ||
            (newVal == null && tbaloNominalTotalLeft == null && tbaloNominalTotalLeftIsInitialized)) {
            return;
        }
        tbaloNominalTotalLeft = newVal;
        tbaloNominalTotalLeftIsModified = true;
        tbaloNominalTotalLeftIsInitialized = true;
    }

    /**
     * Setter method for tbaloNominalTotalLeft.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbaloNominalTotalLeft
     */
    public void setTbaloNominalTotalLeft(double newVal)
    {
        setTbaloNominalTotalLeft(new Double(newVal));
    }

    /**
     * Determines if the tbaloNominalTotalLeft has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbaloNominalTotalLeftModified()
    {
        return tbaloNominalTotalLeftIsModified;
    }

    /**
     * Determines if the tbaloNominalTotalLeft has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbaloNominalTotalLeftInitialized()
    {
        return tbaloNominalTotalLeftIsInitialized;
    }

    /**
     * Getter method for tbcLocalCurrencyKurs.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_assigned_loan.tbc_local_currency_kurs</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbcLocalCurrencyKurs
     */
    public Double getTbcLocalCurrencyKurs()
    {
        return tbcLocalCurrencyKurs;
    }

    /**
     * Setter method for tbcLocalCurrencyKurs.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbcLocalCurrencyKurs
     */
    public void setTbcLocalCurrencyKurs(Double newVal)
    {
        if ((newVal != null && tbcLocalCurrencyKurs != null && (newVal.compareTo(tbcLocalCurrencyKurs) == 0)) ||
            (newVal == null && tbcLocalCurrencyKurs == null && tbcLocalCurrencyKursIsInitialized)) {
            return;
        }
        tbcLocalCurrencyKurs = newVal;
        tbcLocalCurrencyKursIsModified = true;
        tbcLocalCurrencyKursIsInitialized = true;
    }

    /**
     * Setter method for tbcLocalCurrencyKurs.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbcLocalCurrencyKurs
     */
    public void setTbcLocalCurrencyKurs(double newVal)
    {
        setTbcLocalCurrencyKurs(new Double(newVal));
    }

    /**
     * Determines if the tbcLocalCurrencyKurs has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbcLocalCurrencyKursModified()
    {
        return tbcLocalCurrencyKursIsModified;
    }

    /**
     * Determines if the tbcLocalCurrencyKurs has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbcLocalCurrencyKursInitialized()
    {
        return tbcLocalCurrencyKursIsInitialized;
    }

    /**
     * Getter method for tbcName.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_assigned_loan.tbc_name</li>
     * <li>column size: 45</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbcName
     */
    public String getTbcName()
    {
        return tbcName;
    }

    /**
     * Setter method for tbcName.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbcName
     */
    public void setTbcName(String newVal)
    {
        if ((newVal != null && tbcName != null && (newVal.compareTo(tbcName) == 0)) ||
            (newVal == null && tbcName == null && tbcNameIsInitialized)) {
            return;
        }
        tbcName = newVal;
        tbcNameIsModified = true;
        tbcNameIsInitialized = true;
    }

    /**
     * Determines if the tbcName has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbcNameModified()
    {
        return tbcNameIsModified;
    }

    /**
     * Determines if the tbcName has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbcNameInitialized()
    {
        return tbcNameIsInitialized;
    }

    /**
     * Getter method for tbcCurrencyId.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_assigned_loan.tbc_currency_id</li>
     * <li>comments: NAME+ID</li>
     * <li>column size: 45</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbcCurrencyId
     */
    public String getTbcCurrencyId()
    {
        return tbcCurrencyId;
    }

    /**
     * Setter method for tbcCurrencyId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbcCurrencyId
     */
    public void setTbcCurrencyId(String newVal)
    {
        if ((newVal != null && tbcCurrencyId != null && (newVal.compareTo(tbcCurrencyId) == 0)) ||
            (newVal == null && tbcCurrencyId == null && tbcCurrencyIdIsInitialized)) {
            return;
        }
        tbcCurrencyId = newVal;
        tbcCurrencyIdIsModified = true;
        tbcCurrencyIdIsInitialized = true;
    }

    /**
     * Determines if the tbcCurrencyId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbcCurrencyIdModified()
    {
        return tbcCurrencyIdIsModified;
    }

    /**
     * Determines if the tbcCurrencyId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbcCurrencyIdInitialized()
    {
        return tbcCurrencyIdIsInitialized;
    }

    /**
     * Getter method for tbaloStatus.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_assigned_loan.tbalo_status</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbaloStatus
     */
    public Integer getTbaloStatus()
    {
        return tbaloStatus;
    }

    /**
     * Setter method for tbaloStatus.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbaloStatus
     */
    public void setTbaloStatus(Integer newVal)
    {
        if ((newVal != null && tbaloStatus != null && (newVal.compareTo(tbaloStatus) == 0)) ||
            (newVal == null && tbaloStatus == null && tbaloStatusIsInitialized)) {
            return;
        }
        tbaloStatus = newVal;
        tbaloStatusIsModified = true;
        tbaloStatusIsInitialized = true;
    }

    /**
     * Setter method for tbaloStatus.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbaloStatus
     */
    public void setTbaloStatus(int newVal)
    {
        setTbaloStatus(new Integer(newVal));
    }

    /**
     * Determines if the tbaloStatus has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbaloStatusModified()
    {
        return tbaloStatusIsModified;
    }

    /**
     * Determines if the tbaloStatus has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbaloStatusInitialized()
    {
        return tbaloStatusIsInitialized;
    }

    /**
     * Getter method for tbaloComments.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_assigned_loan.tbalo_comments</li>
     * <li>column size: 500</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbaloComments
     */
    public String getTbaloComments()
    {
        return tbaloComments;
    }

    /**
     * Setter method for tbaloComments.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbaloComments
     */
    public void setTbaloComments(String newVal)
    {
        if ((newVal != null && tbaloComments != null && (newVal.compareTo(tbaloComments) == 0)) ||
            (newVal == null && tbaloComments == null && tbaloCommentsIsInitialized)) {
            return;
        }
        tbaloComments = newVal;
        tbaloCommentsIsModified = true;
        tbaloCommentsIsInitialized = true;
    }

    /**
     * Determines if the tbaloComments has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbaloCommentsModified()
    {
        return tbaloCommentsIsModified;
    }

    /**
     * Determines if the tbaloComments has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbaloCommentsInitialized()
    {
        return tbaloCommentsIsInitialized;
    }

    /**
     * Getter method for tbaloMonthlyPayment.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_assigned_loan.tbalo_monthly_payment</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbaloMonthlyPayment
     */
    public Double getTbaloMonthlyPayment()
    {
        return tbaloMonthlyPayment;
    }

    /**
     * Setter method for tbaloMonthlyPayment.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbaloMonthlyPayment
     */
    public void setTbaloMonthlyPayment(Double newVal)
    {
        if ((newVal != null && tbaloMonthlyPayment != null && (newVal.compareTo(tbaloMonthlyPayment) == 0)) ||
            (newVal == null && tbaloMonthlyPayment == null && tbaloMonthlyPaymentIsInitialized)) {
            return;
        }
        tbaloMonthlyPayment = newVal;
        tbaloMonthlyPaymentIsModified = true;
        tbaloMonthlyPaymentIsInitialized = true;
    }

    /**
     * Setter method for tbaloMonthlyPayment.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbaloMonthlyPayment
     */
    public void setTbaloMonthlyPayment(double newVal)
    {
        setTbaloMonthlyPayment(new Double(newVal));
    }

    /**
     * Determines if the tbaloMonthlyPayment has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbaloMonthlyPaymentModified()
    {
        return tbaloMonthlyPaymentIsModified;
    }

    /**
     * Determines if the tbaloMonthlyPayment has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbaloMonthlyPaymentInitialized()
    {
        return tbaloMonthlyPaymentIsInitialized;
    }

    /**
     * Getter method for tbaloNominalTotal.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_assigned_loan.tbalo_nominal_total</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbaloNominalTotal
     */
    public Double getTbaloNominalTotal()
    {
        return tbaloNominalTotal;
    }

    /**
     * Setter method for tbaloNominalTotal.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbaloNominalTotal
     */
    public void setTbaloNominalTotal(Double newVal)
    {
        if ((newVal != null && tbaloNominalTotal != null && (newVal.compareTo(tbaloNominalTotal) == 0)) ||
            (newVal == null && tbaloNominalTotal == null && tbaloNominalTotalIsInitialized)) {
            return;
        }
        tbaloNominalTotal = newVal;
        tbaloNominalTotalIsModified = true;
        tbaloNominalTotalIsInitialized = true;
    }

    /**
     * Setter method for tbaloNominalTotal.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbaloNominalTotal
     */
    public void setTbaloNominalTotal(double newVal)
    {
        setTbaloNominalTotal(new Double(newVal));
    }

    /**
     * Determines if the tbaloNominalTotal has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbaloNominalTotalModified()
    {
        return tbaloNominalTotalIsModified;
    }

    /**
     * Determines if the tbaloNominalTotal has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbaloNominalTotalInitialized()
    {
        return tbaloNominalTotalIsInitialized;
    }

    /**
     * Getter method for tbaloTenor.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_assigned_loan.tbalo_tenor</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbaloTenor
     */
    public Integer getTbaloTenor()
    {
        return tbaloTenor;
    }

    /**
     * Setter method for tbaloTenor.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbaloTenor
     */
    public void setTbaloTenor(Integer newVal)
    {
        if ((newVal != null && tbaloTenor != null && (newVal.compareTo(tbaloTenor) == 0)) ||
            (newVal == null && tbaloTenor == null && tbaloTenorIsInitialized)) {
            return;
        }
        tbaloTenor = newVal;
        tbaloTenorIsModified = true;
        tbaloTenorIsInitialized = true;
    }

    /**
     * Setter method for tbaloTenor.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbaloTenor
     */
    public void setTbaloTenor(int newVal)
    {
        setTbaloTenor(new Integer(newVal));
    }

    /**
     * Determines if the tbaloTenor has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbaloTenorModified()
    {
        return tbaloTenorIsModified;
    }

    /**
     * Determines if the tbaloTenor has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbaloTenorInitialized()
    {
        return tbaloTenorIsInitialized;
    }

    /**
     * Getter method for tbaloInterest.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_assigned_loan.tbalo_interest</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbaloInterest
     */
    public Double getTbaloInterest()
    {
        return tbaloInterest;
    }

    /**
     * Setter method for tbaloInterest.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbaloInterest
     */
    public void setTbaloInterest(Double newVal)
    {
        if ((newVal != null && tbaloInterest != null && (newVal.compareTo(tbaloInterest) == 0)) ||
            (newVal == null && tbaloInterest == null && tbaloInterestIsInitialized)) {
            return;
        }
        tbaloInterest = newVal;
        tbaloInterestIsModified = true;
        tbaloInterestIsInitialized = true;
    }

    /**
     * Setter method for tbaloInterest.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbaloInterest
     */
    public void setTbaloInterest(double newVal)
    {
        setTbaloInterest(new Double(newVal));
    }

    /**
     * Determines if the tbaloInterest has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbaloInterestModified()
    {
        return tbaloInterestIsModified;
    }

    /**
     * Determines if the tbaloInterest has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbaloInterestInitialized()
    {
        return tbaloInterestIsInitialized;
    }

    /**
     * Getter method for tbaloNominal.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_assigned_loan.tbalo_nominal</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbaloNominal
     */
    public Double getTbaloNominal()
    {
        return tbaloNominal;
    }

    /**
     * Setter method for tbaloNominal.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbaloNominal
     */
    public void setTbaloNominal(Double newVal)
    {
        if ((newVal != null && tbaloNominal != null && (newVal.compareTo(tbaloNominal) == 0)) ||
            (newVal == null && tbaloNominal == null && tbaloNominalIsInitialized)) {
            return;
        }
        tbaloNominal = newVal;
        tbaloNominalIsModified = true;
        tbaloNominalIsInitialized = true;
    }

    /**
     * Setter method for tbaloNominal.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbaloNominal
     */
    public void setTbaloNominal(double newVal)
    {
        setTbaloNominal(new Double(newVal));
    }

    /**
     * Determines if the tbaloNominal has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbaloNominalModified()
    {
        return tbaloNominalIsModified;
    }

    /**
     * Determines if the tbaloNominal has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbaloNominalInitialized()
    {
        return tbaloNominalIsInitialized;
    }

    /**
     * Getter method for tbaloEndDate.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_assigned_loan.tbalo_end_date</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbaloEndDate
     */
    public String getTbaloEndDate()
    {
        return tbaloEndDate;
    }

    /**
     * Setter method for tbaloEndDate.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbaloEndDate
     */
    public void setTbaloEndDate(String newVal)
    {
        if ((newVal != null && tbaloEndDate != null && (newVal.compareTo(tbaloEndDate) == 0)) ||
            (newVal == null && tbaloEndDate == null && tbaloEndDateIsInitialized)) {
            return;
        }
        tbaloEndDate = newVal;
        tbaloEndDateIsModified = true;
        tbaloEndDateIsInitialized = true;
    }

    /**
     * Determines if the tbaloEndDate has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbaloEndDateModified()
    {
        return tbaloEndDateIsModified;
    }

    /**
     * Determines if the tbaloEndDate has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbaloEndDateInitialized()
    {
        return tbaloEndDateIsInitialized;
    }

    /**
     * Getter method for tbaloStartDate.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_assigned_loan.tbalo_start_date</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbaloStartDate
     */
    public String getTbaloStartDate()
    {
        return tbaloStartDate;
    }

    /**
     * Setter method for tbaloStartDate.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbaloStartDate
     */
    public void setTbaloStartDate(String newVal)
    {
        if ((newVal != null && tbaloStartDate != null && (newVal.compareTo(tbaloStartDate) == 0)) ||
            (newVal == null && tbaloStartDate == null && tbaloStartDateIsInitialized)) {
            return;
        }
        tbaloStartDate = newVal;
        tbaloStartDateIsModified = true;
        tbaloStartDateIsInitialized = true;
    }

    /**
     * Determines if the tbaloStartDate has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbaloStartDateModified()
    {
        return tbaloStartDateIsModified;
    }

    /**
     * Determines if the tbaloStartDate has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbaloStartDateInitialized()
    {
        return tbaloStartDateIsInitialized;
    }

    /**
     * Getter method for tbaloUpdatedTime.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_assigned_loan.tbalo_updated_time</li>
     * <li>column size: 19</li>
     * <li>jdbc type returned by the driver: Types.TIMESTAMP</li>
     * </ul>
     *
     * @return the value of tbaloUpdatedTime
     */
    public java.sql.Timestamp getTbaloUpdatedTime()
    {
        return tbaloUpdatedTime;
    }

    /**
     * Setter method for tbaloUpdatedTime.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbaloUpdatedTime
     */
    public void setTbaloUpdatedTime(java.sql.Timestamp newVal)
    {
        if ((newVal != null && tbaloUpdatedTime != null && (newVal.compareTo(tbaloUpdatedTime) == 0)) ||
            (newVal == null && tbaloUpdatedTime == null && tbaloUpdatedTimeIsInitialized)) {
            return;
        }
        tbaloUpdatedTime = newVal;
        tbaloUpdatedTimeIsModified = true;
        tbaloUpdatedTimeIsInitialized = true;
    }

    /**
     * Setter method for tbaloUpdatedTime.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbaloUpdatedTime
     */
    public void setTbaloUpdatedTime(long newVal)
    {
        setTbaloUpdatedTime(new java.sql.Timestamp(newVal));
    }

    /**
     * Determines if the tbaloUpdatedTime has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbaloUpdatedTimeModified()
    {
        return tbaloUpdatedTimeIsModified;
    }

    /**
     * Determines if the tbaloUpdatedTime has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbaloUpdatedTimeInitialized()
    {
        return tbaloUpdatedTimeIsInitialized;
    }

    /**
     * Getter method for tbaloCreatedTime.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_assigned_loan.tbalo_created_time</li>
     * <li>column size: 19</li>
     * <li>jdbc type returned by the driver: Types.TIMESTAMP</li>
     * </ul>
     *
     * @return the value of tbaloCreatedTime
     */
    public java.sql.Timestamp getTbaloCreatedTime()
    {
        return tbaloCreatedTime;
    }

    /**
     * Setter method for tbaloCreatedTime.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbaloCreatedTime
     */
    public void setTbaloCreatedTime(java.sql.Timestamp newVal)
    {
        if ((newVal != null && tbaloCreatedTime != null && (newVal.compareTo(tbaloCreatedTime) == 0)) ||
            (newVal == null && tbaloCreatedTime == null && tbaloCreatedTimeIsInitialized)) {
            return;
        }
        tbaloCreatedTime = newVal;
        tbaloCreatedTimeIsModified = true;
        tbaloCreatedTimeIsInitialized = true;
    }

    /**
     * Setter method for tbaloCreatedTime.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbaloCreatedTime
     */
    public void setTbaloCreatedTime(long newVal)
    {
        setTbaloCreatedTime(new java.sql.Timestamp(newVal));
    }

    /**
     * Determines if the tbaloCreatedTime has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbaloCreatedTimeModified()
    {
        return tbaloCreatedTimeIsModified;
    }

    /**
     * Determines if the tbaloCreatedTime has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbaloCreatedTimeInitialized()
    {
        return tbaloCreatedTimeIsInitialized;
    }

    /**
     * Getter method for tbaloName.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_assigned_loan.tbalo_name</li>
     * <li>column size: 45</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbaloName
     */
    public String getTbaloName()
    {
        return tbaloName;
    }

    /**
     * Setter method for tbaloName.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbaloName
     */
    public void setTbaloName(String newVal)
    {
        if ((newVal != null && tbaloName != null && (newVal.compareTo(tbaloName) == 0)) ||
            (newVal == null && tbaloName == null && tbaloNameIsInitialized)) {
            return;
        }
        tbaloName = newVal;
        tbaloNameIsModified = true;
        tbaloNameIsInitialized = true;
    }

    /**
     * Determines if the tbaloName has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbaloNameModified()
    {
        return tbaloNameIsModified;
    }

    /**
     * Determines if the tbaloName has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbaloNameInitialized()
    {
        return tbaloNameIsInitialized;
    }

    /**
     * Getter method for tbcId.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_assigned_loan.tbc_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbcId
     */
    public Integer getTbcId()
    {
        return tbcId;
    }

    /**
     * Setter method for tbcId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbcId
     */
    public void setTbcId(Integer newVal)
    {
        if ((newVal != null && tbcId != null && (newVal.compareTo(tbcId) == 0)) ||
            (newVal == null && tbcId == null && tbcIdIsInitialized)) {
            return;
        }
        tbcId = newVal;
        tbcIdIsModified = true;
        tbcIdIsInitialized = true;
    }

    /**
     * Setter method for tbcId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbcId
     */
    public void setTbcId(int newVal)
    {
        setTbcId(new Integer(newVal));
    }

    /**
     * Determines if the tbcId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbcIdModified()
    {
        return tbcIdIsModified;
    }

    /**
     * Determines if the tbcId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbcIdInitialized()
    {
        return tbcIdIsInitialized;
    }

    /**
     * Getter method for tbaloId.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_assigned_loan.tbalo_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbaloId
     */
    public Integer getTbaloId()
    {
        return tbaloId;
    }

    /**
     * Setter method for tbaloId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbaloId
     */
    public void setTbaloId(Integer newVal)
    {
        if ((newVal != null && tbaloId != null && (newVal.compareTo(tbaloId) == 0)) ||
            (newVal == null && tbaloId == null && tbaloIdIsInitialized)) {
            return;
        }
        tbaloId = newVal;
        tbaloIdIsModified = true;
        tbaloIdIsInitialized = true;
    }

    /**
     * Setter method for tbaloId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbaloId
     */
    public void setTbaloId(int newVal)
    {
        setTbaloId(new Integer(newVal));
    }

    /**
     * Determines if the tbaloId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbaloIdModified()
    {
        return tbaloIdIsModified;
    }

    /**
     * Determines if the tbaloId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbaloIdInitialized()
    {
        return tbaloIdIsInitialized;
    }

    /**
     * Getter method for tbeName.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_assigned_loan.tbe_name</li>
     * <li>column size: 100</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbeName
     */
    public String getTbeName()
    {
        return tbeName;
    }

    /**
     * Setter method for tbeName.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbeName
     */
    public void setTbeName(String newVal)
    {
        if ((newVal != null && tbeName != null && (newVal.compareTo(tbeName) == 0)) ||
            (newVal == null && tbeName == null && tbeNameIsInitialized)) {
            return;
        }
        tbeName = newVal;
        tbeNameIsModified = true;
        tbeNameIsInitialized = true;
    }

    /**
     * Determines if the tbeName has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbeNameModified()
    {
        return tbeNameIsModified;
    }

    /**
     * Determines if the tbeName has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbeNameInitialized()
    {
        return tbeNameIsInitialized;
    }

    /**
     * Getter method for tbeEmployeeId.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_assigned_loan.tbe_employee_id</li>
     * <li>column size: 45</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbeEmployeeId
     */
    public String getTbeEmployeeId()
    {
        return tbeEmployeeId;
    }

    /**
     * Setter method for tbeEmployeeId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbeEmployeeId
     */
    public void setTbeEmployeeId(String newVal)
    {
        if ((newVal != null && tbeEmployeeId != null && (newVal.compareTo(tbeEmployeeId) == 0)) ||
            (newVal == null && tbeEmployeeId == null && tbeEmployeeIdIsInitialized)) {
            return;
        }
        tbeEmployeeId = newVal;
        tbeEmployeeIdIsModified = true;
        tbeEmployeeIdIsInitialized = true;
    }

    /**
     * Determines if the tbeEmployeeId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbeEmployeeIdModified()
    {
        return tbeEmployeeIdIsModified;
    }

    /**
     * Determines if the tbeEmployeeId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbeEmployeeIdInitialized()
    {
        return tbeEmployeeIdIsInitialized;
    }

    /**
     * Getter method for tbeId.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_assigned_loan.tbe_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbeId
     */
    public Integer getTbeId()
    {
        return tbeId;
    }

    /**
     * Setter method for tbeId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbeId
     */
    public void setTbeId(Integer newVal)
    {
        if ((newVal != null && tbeId != null && (newVal.compareTo(tbeId) == 0)) ||
            (newVal == null && tbeId == null && tbeIdIsInitialized)) {
            return;
        }
        tbeId = newVal;
        tbeIdIsModified = true;
        tbeIdIsInitialized = true;
    }

    /**
     * Setter method for tbeId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbeId
     */
    public void setTbeId(int newVal)
    {
        setTbeId(new Integer(newVal));
    }

    /**
     * Determines if the tbeId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbeIdModified()
    {
        return tbeIdIsModified;
    }

    /**
     * Determines if the tbeId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbeIdInitialized()
    {
        return tbeIdIsInitialized;
    }

    /**
     * Determines if the current object is new.
     *
     * @return true if the current object is new, false if the object is not new
     */
    public boolean isNew()
    {
        return _isNew;
    }

    /**
     * Specifies to the object if it has been set as new.
     *
     * @param isNew the boolean value to be assigned to the isNew field
     */
    public void isNew(boolean isNew)
    {
        this._isNew = isNew;
    }

    /**
     * Determines if the object has been modified since the last time this method was called.
     * <br>
     * We can also determine if this object has ever been modified since its creation.
     *
     * @return true if the object has been modified, false if the object has not been modified
     */
    public boolean isModified()
    {
        return tbaloNominalTotalLeftIsModified 		|| tbcLocalCurrencyKursIsModified  		|| tbcNameIsModified  		|| tbcCurrencyIdIsModified  		|| tbaloStatusIsModified  		|| tbaloCommentsIsModified  		|| tbaloMonthlyPaymentIsModified  		|| tbaloNominalTotalIsModified  		|| tbaloTenorIsModified  		|| tbaloInterestIsModified  		|| tbaloNominalIsModified  		|| tbaloEndDateIsModified  		|| tbaloStartDateIsModified  		|| tbaloUpdatedTimeIsModified  		|| tbaloCreatedTimeIsModified  		|| tbaloNameIsModified  		|| tbcIdIsModified  		|| tbaloIdIsModified  		|| tbeNameIsModified  		|| tbeEmployeeIdIsModified  		|| tbeIdIsModified  ;
    }

    /**
     * Resets the object modification status to 'not modified'.
     */
    public void resetIsModified()
    {
        tbaloNominalTotalLeftIsModified = false;
        tbcLocalCurrencyKursIsModified = false;
        tbcNameIsModified = false;
        tbcCurrencyIdIsModified = false;
        tbaloStatusIsModified = false;
        tbaloCommentsIsModified = false;
        tbaloMonthlyPaymentIsModified = false;
        tbaloNominalTotalIsModified = false;
        tbaloTenorIsModified = false;
        tbaloInterestIsModified = false;
        tbaloNominalIsModified = false;
        tbaloEndDateIsModified = false;
        tbaloStartDateIsModified = false;
        tbaloUpdatedTimeIsModified = false;
        tbaloCreatedTimeIsModified = false;
        tbaloNameIsModified = false;
        tbcIdIsModified = false;
        tbaloIdIsModified = false;
        tbeNameIsModified = false;
        tbeEmployeeIdIsModified = false;
        tbeIdIsModified = false;
    }

    /**
     * Copies the passed bean into the current bean.
     *
     * @param bean the bean to copy into the current bean
     */
    public void copy(ViewAssignedLoanBean bean)
    {
        setTbaloNominalTotalLeft(bean.getTbaloNominalTotalLeft());
        setTbcLocalCurrencyKurs(bean.getTbcLocalCurrencyKurs());
        setTbcName(bean.getTbcName());
        setTbcCurrencyId(bean.getTbcCurrencyId());
        setTbaloStatus(bean.getTbaloStatus());
        setTbaloComments(bean.getTbaloComments());
        setTbaloMonthlyPayment(bean.getTbaloMonthlyPayment());
        setTbaloNominalTotal(bean.getTbaloNominalTotal());
        setTbaloTenor(bean.getTbaloTenor());
        setTbaloInterest(bean.getTbaloInterest());
        setTbaloNominal(bean.getTbaloNominal());
        setTbaloEndDate(bean.getTbaloEndDate());
        setTbaloStartDate(bean.getTbaloStartDate());
        setTbaloUpdatedTime(bean.getTbaloUpdatedTime());
        setTbaloCreatedTime(bean.getTbaloCreatedTime());
        setTbaloName(bean.getTbaloName());
        setTbcId(bean.getTbcId());
        setTbaloId(bean.getTbaloId());
        setTbeName(bean.getTbeName());
        setTbeEmployeeId(bean.getTbeEmployeeId());
        setTbeId(bean.getTbeId());
    }

    /**
     * return a dictionnary of the object
     */
    public Map getDictionnary()
    {
        Map dictionnary = new HashMap();
        dictionnary.put("tbalo_nominal_total_left", getTbaloNominalTotalLeft() == null ? "" : getTbaloNominalTotalLeft().toString());
        dictionnary.put("tbc_local_currency_kurs", getTbcLocalCurrencyKurs() == null ? "" : getTbcLocalCurrencyKurs().toString());
        dictionnary.put("tbc_name", getTbcName() == null ? "" : getTbcName().toString());
        dictionnary.put("tbc_currency_id", getTbcCurrencyId() == null ? "" : getTbcCurrencyId().toString());
        dictionnary.put("tbalo_status", getTbaloStatus() == null ? "" : getTbaloStatus().toString());
        dictionnary.put("tbalo_comments", getTbaloComments() == null ? "" : getTbaloComments().toString());
        dictionnary.put("tbalo_monthly_payment", getTbaloMonthlyPayment() == null ? "" : getTbaloMonthlyPayment().toString());
        dictionnary.put("tbalo_nominal_total", getTbaloNominalTotal() == null ? "" : getTbaloNominalTotal().toString());
        dictionnary.put("tbalo_tenor", getTbaloTenor() == null ? "" : getTbaloTenor().toString());
        dictionnary.put("tbalo_interest", getTbaloInterest() == null ? "" : getTbaloInterest().toString());
        dictionnary.put("tbalo_nominal", getTbaloNominal() == null ? "" : getTbaloNominal().toString());
        dictionnary.put("tbalo_end_date", getTbaloEndDate() == null ? "" : getTbaloEndDate().toString());
        dictionnary.put("tbalo_start_date", getTbaloStartDate() == null ? "" : getTbaloStartDate().toString());
        dictionnary.put("tbalo_updated_time", getTbaloUpdatedTime() == null ? "" : getTbaloUpdatedTime().toString());
        dictionnary.put("tbalo_created_time", getTbaloCreatedTime() == null ? "" : getTbaloCreatedTime().toString());
        dictionnary.put("tbalo_name", getTbaloName() == null ? "" : getTbaloName().toString());
        dictionnary.put("tbc_id", getTbcId() == null ? "" : getTbcId().toString());
        dictionnary.put("tbalo_id", getTbaloId() == null ? "" : getTbaloId().toString());
        dictionnary.put("tbe_name", getTbeName() == null ? "" : getTbeName().toString());
        dictionnary.put("tbe_employee_id", getTbeEmployeeId() == null ? "" : getTbeEmployeeId().toString());
        dictionnary.put("tbe_id", getTbeId() == null ? "" : getTbeId().toString());
        return dictionnary;
    }

    /**
     * return a dictionnary of the pk columns
     * no primary key, the regular dictionnary is returned
     */
    public Map getPkDictionnary()
    {
        return getDictionnary();
    }

    /**
     * return a the value string representation of the given field
     */
    public String getValue(String column)
    {
        if (null == column || "".equals(column)) {
            return "";
        } else if ("tbalo_nominal_total_left".equalsIgnoreCase(column) || "tbaloNominalTotalLeft".equalsIgnoreCase(column)) {
            return getTbaloNominalTotalLeft() == null ? "" : getTbaloNominalTotalLeft().toString();
        } else if ("tbc_local_currency_kurs".equalsIgnoreCase(column) || "tbcLocalCurrencyKurs".equalsIgnoreCase(column)) {
            return getTbcLocalCurrencyKurs() == null ? "" : getTbcLocalCurrencyKurs().toString();
        } else if ("tbc_name".equalsIgnoreCase(column) || "tbcName".equalsIgnoreCase(column)) {
            return getTbcName() == null ? "" : getTbcName().toString();
        } else if ("tbc_currency_id".equalsIgnoreCase(column) || "tbcCurrencyId".equalsIgnoreCase(column)) {
            return getTbcCurrencyId() == null ? "" : getTbcCurrencyId().toString();
        } else if ("tbalo_status".equalsIgnoreCase(column) || "tbaloStatus".equalsIgnoreCase(column)) {
            return getTbaloStatus() == null ? "" : getTbaloStatus().toString();
        } else if ("tbalo_comments".equalsIgnoreCase(column) || "tbaloComments".equalsIgnoreCase(column)) {
            return getTbaloComments() == null ? "" : getTbaloComments().toString();
        } else if ("tbalo_monthly_payment".equalsIgnoreCase(column) || "tbaloMonthlyPayment".equalsIgnoreCase(column)) {
            return getTbaloMonthlyPayment() == null ? "" : getTbaloMonthlyPayment().toString();
        } else if ("tbalo_nominal_total".equalsIgnoreCase(column) || "tbaloNominalTotal".equalsIgnoreCase(column)) {
            return getTbaloNominalTotal() == null ? "" : getTbaloNominalTotal().toString();
        } else if ("tbalo_tenor".equalsIgnoreCase(column) || "tbaloTenor".equalsIgnoreCase(column)) {
            return getTbaloTenor() == null ? "" : getTbaloTenor().toString();
        } else if ("tbalo_interest".equalsIgnoreCase(column) || "tbaloInterest".equalsIgnoreCase(column)) {
            return getTbaloInterest() == null ? "" : getTbaloInterest().toString();
        } else if ("tbalo_nominal".equalsIgnoreCase(column) || "tbaloNominal".equalsIgnoreCase(column)) {
            return getTbaloNominal() == null ? "" : getTbaloNominal().toString();
        } else if ("tbalo_end_date".equalsIgnoreCase(column) || "tbaloEndDate".equalsIgnoreCase(column)) {
            return getTbaloEndDate() == null ? "" : getTbaloEndDate().toString();
        } else if ("tbalo_start_date".equalsIgnoreCase(column) || "tbaloStartDate".equalsIgnoreCase(column)) {
            return getTbaloStartDate() == null ? "" : getTbaloStartDate().toString();
        } else if ("tbalo_updated_time".equalsIgnoreCase(column) || "tbaloUpdatedTime".equalsIgnoreCase(column)) {
            return getTbaloUpdatedTime() == null ? "" : getTbaloUpdatedTime().toString();
        } else if ("tbalo_created_time".equalsIgnoreCase(column) || "tbaloCreatedTime".equalsIgnoreCase(column)) {
            return getTbaloCreatedTime() == null ? "" : getTbaloCreatedTime().toString();
        } else if ("tbalo_name".equalsIgnoreCase(column) || "tbaloName".equalsIgnoreCase(column)) {
            return getTbaloName() == null ? "" : getTbaloName().toString();
        } else if ("tbc_id".equalsIgnoreCase(column) || "tbcId".equalsIgnoreCase(column)) {
            return getTbcId() == null ? "" : getTbcId().toString();
        } else if ("tbalo_id".equalsIgnoreCase(column) || "tbaloId".equalsIgnoreCase(column)) {
            return getTbaloId() == null ? "" : getTbaloId().toString();
        } else if ("tbe_name".equalsIgnoreCase(column) || "tbeName".equalsIgnoreCase(column)) {
            return getTbeName() == null ? "" : getTbeName().toString();
        } else if ("tbe_employee_id".equalsIgnoreCase(column) || "tbeEmployeeId".equalsIgnoreCase(column)) {
            return getTbeEmployeeId() == null ? "" : getTbeEmployeeId().toString();
        } else if ("tbe_id".equalsIgnoreCase(column) || "tbeId".equalsIgnoreCase(column)) {
            return getTbeId() == null ? "" : getTbeId().toString();
        }
        return "";
    }

    /**
     * @see java.lang.Object#equals(Object)
     */
    public boolean equals(Object object)
    {
        if (!(object instanceof ViewAssignedLoanBean)) {
            return false;
        }

		ViewAssignedLoanBean obj = (ViewAssignedLoanBean) object;
		return new EqualsBuilder()
            .append(getTbaloNominalTotalLeft(), obj.getTbaloNominalTotalLeft())
            .append(getTbcLocalCurrencyKurs(), obj.getTbcLocalCurrencyKurs())
            .append(getTbcName(), obj.getTbcName())
            .append(getTbcCurrencyId(), obj.getTbcCurrencyId())
            .append(getTbaloStatus(), obj.getTbaloStatus())
            .append(getTbaloComments(), obj.getTbaloComments())
            .append(getTbaloMonthlyPayment(), obj.getTbaloMonthlyPayment())
            .append(getTbaloNominalTotal(), obj.getTbaloNominalTotal())
            .append(getTbaloTenor(), obj.getTbaloTenor())
            .append(getTbaloInterest(), obj.getTbaloInterest())
            .append(getTbaloNominal(), obj.getTbaloNominal())
            .append(getTbaloEndDate(), obj.getTbaloEndDate())
            .append(getTbaloStartDate(), obj.getTbaloStartDate())
            .append(getTbaloUpdatedTime(), obj.getTbaloUpdatedTime())
            .append(getTbaloCreatedTime(), obj.getTbaloCreatedTime())
            .append(getTbaloName(), obj.getTbaloName())
            .append(getTbcId(), obj.getTbcId())
            .append(getTbaloId(), obj.getTbaloId())
            .append(getTbeName(), obj.getTbeName())
            .append(getTbeEmployeeId(), obj.getTbeEmployeeId())
            .append(getTbeId(), obj.getTbeId())
            .isEquals();
	}

	/**
	 * @see java.lang.Object#hashCode()
	 */
	public int hashCode()
	{
		return new HashCodeBuilder(-82280557, -700257973)
            .append(getTbaloNominalTotalLeft())
            .append(getTbcLocalCurrencyKurs())
            .append(getTbcName())
            .append(getTbcCurrencyId())
            .append(getTbaloStatus())
            .append(getTbaloComments())
            .append(getTbaloMonthlyPayment())
            .append(getTbaloNominalTotal())
            .append(getTbaloTenor())
            .append(getTbaloInterest())
            .append(getTbaloNominal())
            .append(getTbaloEndDate())
            .append(getTbaloStartDate())
            .append(getTbaloUpdatedTime())
            .append(getTbaloCreatedTime())
            .append(getTbaloName())
            .append(getTbcId())
            .append(getTbaloId())
            .append(getTbeName())
            .append(getTbeEmployeeId())
            .append(getTbeId())
            .toHashCode();
	}

	/**
	 * @see java.lang.Object#toString()
	 */
	public String toString()
	{
	    return toString(ToStringStyle.MULTI_LINE_STYLE);
	}

	/**
	 * you can use the following styles:
	 * <li>ToStringStyle.DEFAULT_STYLE</li>
	 * <li>ToStringStyle.MULTI_LINE_STYLE</li>
     * <li>ToStringStyle.NO_FIELD_NAMES_STYLE</li>
     * <li>ToStringStyle.SHORT_PREFIX_STYLE</li>
     * <li>ToStringStyle.SIMPLE_STYLE</li>
	 */
	public String toString(ToStringStyle style) {
		return new ToStringBuilder(this, style)
            .append("tbalo_nominal_total_left", getTbaloNominalTotalLeft())
            .append("tbc_local_currency_kurs", getTbcLocalCurrencyKurs())
            .append("tbc_name", getTbcName())
            .append("tbc_currency_id", getTbcCurrencyId())
            .append("tbalo_status", getTbaloStatus())
            .append("tbalo_comments", getTbaloComments())
            .append("tbalo_monthly_payment", getTbaloMonthlyPayment())
            .append("tbalo_nominal_total", getTbaloNominalTotal())
            .append("tbalo_tenor", getTbaloTenor())
            .append("tbalo_interest", getTbaloInterest())
            .append("tbalo_nominal", getTbaloNominal())
            .append("tbalo_end_date", getTbaloEndDate())
            .append("tbalo_start_date", getTbaloStartDate())
            .append("tbalo_updated_time", getTbaloUpdatedTime())
            .append("tbalo_created_time", getTbaloCreatedTime())
            .append("tbalo_name", getTbaloName())
            .append("tbc_id", getTbcId())
            .append("tbalo_id", getTbaloId())
            .append("tbe_name", getTbeName())
            .append("tbe_employee_id", getTbeEmployeeId())
            .append("tbe_id", getTbeId())
            .toString();
	}


    public int compareTo(Object object)
    {
        ViewAssignedLoanBean obj = (ViewAssignedLoanBean) object;
        return new CompareToBuilder()
            .append(getTbaloNominalTotalLeft(), obj.getTbaloNominalTotalLeft())
            .append(getTbcLocalCurrencyKurs(), obj.getTbcLocalCurrencyKurs())
            .append(getTbcName(), obj.getTbcName())
            .append(getTbcCurrencyId(), obj.getTbcCurrencyId())
            .append(getTbaloStatus(), obj.getTbaloStatus())
            .append(getTbaloComments(), obj.getTbaloComments())
            .append(getTbaloMonthlyPayment(), obj.getTbaloMonthlyPayment())
            .append(getTbaloNominalTotal(), obj.getTbaloNominalTotal())
            .append(getTbaloTenor(), obj.getTbaloTenor())
            .append(getTbaloInterest(), obj.getTbaloInterest())
            .append(getTbaloNominal(), obj.getTbaloNominal())
            .append(getTbaloEndDate(), obj.getTbaloEndDate())
            .append(getTbaloStartDate(), obj.getTbaloStartDate())
            .append(getTbaloUpdatedTime(), obj.getTbaloUpdatedTime())
            .append(getTbaloCreatedTime(), obj.getTbaloCreatedTime())
            .append(getTbaloName(), obj.getTbaloName())
            .append(getTbcId(), obj.getTbcId())
            .append(getTbaloId(), obj.getTbaloId())
            .append(getTbeName(), obj.getTbeName())
            .append(getTbeEmployeeId(), obj.getTbeEmployeeId())
            .append(getTbeId(), obj.getTbeId())
            .toComparison();
   }
}
