// ______________________________________________________
// Generated by sql2java - http://sql2java.sourceforge.net/
// jdbc driver used at code generation time: com.mysql.jdbc.Driver
//
// Please help us improve this tool by reporting:
// - problems and suggestions to
//   http://sourceforge.net/tracker/?group_id=54687
// - feedbacks and ideas on
//   http://sourceforge.net/forum/forum.php?forum_id=182208
// ______________________________________________________

package com.gwt.hris.db;

import java.io.Serializable;
import java.util.HashMap;
import java.util.Map;

import org.apache.commons.lang.builder.CompareToBuilder;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.commons.lang.builder.ToStringStyle;

/**
 * TbJobRenumerationBean is a mapping of tb_job_renumeration Table.
 * @author sql2java
*/
public class TbJobRenumerationBean
    implements Serializable, GeneratedBean
{
	private static final long serialVersionUID = 7485064946440713757L;
	
    private Integer tbrId;

    private boolean tbrIdIsModified = false;
    private boolean tbrIdIsInitialized = false;

    private Integer tbjtId;

    private boolean tbjtIdIsModified = false;
    private boolean tbjtIdIsInitialized = false;

    private Integer tbjrId;

    private boolean tbjrIdIsModified = false;
    private boolean tbjrIdIsInitialized = false;

    private boolean _isNew = true;

    /**
     * Prefered methods to create a TbJobRenumerationBean is via the createTbJobRenumerationBean method in TbJobRenumerationManager or
     * via the factory class TbJobRenumerationFactory create method
     */
    protected TbJobRenumerationBean()
    {
    }

    /**
     * Getter method for tbrId.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_job_renumeration.tbr_id</li>
     * <li> foreign key: tb_renumeration.tbr_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbrId
     */
    public Integer getTbrId()
    {
        return tbrId;
    }

    /**
     * Setter method for tbrId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbrId
     */
    public void setTbrId(Integer newVal)
    {
        if ((newVal != null && tbrId != null && (newVal.compareTo(tbrId) == 0)) ||
            (newVal == null && tbrId == null && tbrIdIsInitialized)) {
            return;
        }
        tbrId = newVal;
        tbrIdIsModified = true;
        tbrIdIsInitialized = true;
    }

    /**
     * Setter method for tbrId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbrId
     */
    public void setTbrId(int newVal)
    {
        setTbrId(new Integer(newVal));
    }

    /**
     * Determines if the tbrId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbrIdModified()
    {
        return tbrIdIsModified;
    }

    /**
     * Determines if the tbrId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbrIdInitialized()
    {
        return tbrIdIsInitialized;
    }

    /**
     * Getter method for tbjtId.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_job_renumeration.tbjt_id</li>
     * <li> foreign key: tb_job_title.tbjt_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbjtId
     */
    public Integer getTbjtId()
    {
        return tbjtId;
    }

    /**
     * Setter method for tbjtId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbjtId
     */
    public void setTbjtId(Integer newVal)
    {
        if ((newVal != null && tbjtId != null && (newVal.compareTo(tbjtId) == 0)) ||
            (newVal == null && tbjtId == null && tbjtIdIsInitialized)) {
            return;
        }
        tbjtId = newVal;
        tbjtIdIsModified = true;
        tbjtIdIsInitialized = true;
    }

    /**
     * Setter method for tbjtId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbjtId
     */
    public void setTbjtId(int newVal)
    {
        setTbjtId(new Integer(newVal));
    }

    /**
     * Determines if the tbjtId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbjtIdModified()
    {
        return tbjtIdIsModified;
    }

    /**
     * Determines if the tbjtId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbjtIdInitialized()
    {
        return tbjtIdIsInitialized;
    }

    /**
     * Getter method for tbjrId.
     * <br>
     * PRIMARY KEY.<br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_job_renumeration.tbjr_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbjrId
     */
    public Integer getTbjrId()
    {
        return tbjrId;
    }

    /**
     * Setter method for tbjrId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbjrId
     */
    public void setTbjrId(Integer newVal)
    {
        if ((newVal != null && tbjrId != null && (newVal.compareTo(tbjrId) == 0)) ||
            (newVal == null && tbjrId == null && tbjrIdIsInitialized)) {
            return;
        }
        tbjrId = newVal;
        tbjrIdIsModified = true;
        tbjrIdIsInitialized = true;
    }

    /**
     * Setter method for tbjrId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbjrId
     */
    public void setTbjrId(int newVal)
    {
        setTbjrId(new Integer(newVal));
    }

    /**
     * Determines if the tbjrId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbjrIdModified()
    {
        return tbjrIdIsModified;
    }

    /**
     * Determines if the tbjrId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbjrIdInitialized()
    {
        return tbjrIdIsInitialized;
    }

    /** The TbJobTitle referenced by this bean. */
    private TbJobTitleBean referencedTbJobTitle;
    /** Getter method for TbJobTitleBean. */
    public TbJobTitleBean getTbJobTitleBean() {
        return this.referencedTbJobTitle;
    }
    /** Setter method for TbJobTitleBean. */
    public void setTbJobTitleBean(TbJobTitleBean reference) {
        this.referencedTbJobTitle = reference;
    }
    
    /** The TbRenumeration referenced by this bean. */
    private TbRenumerationBean referencedTbRenumeration;
    /** Getter method for TbRenumerationBean. */
    public TbRenumerationBean getTbRenumerationBean() {
        return this.referencedTbRenumeration;
    }
    /** Setter method for TbRenumerationBean. */
    public void setTbRenumerationBean(TbRenumerationBean reference) {
        this.referencedTbRenumeration = reference;
    }
    
    /**
     * Determines if the current object is new.
     *
     * @return true if the current object is new, false if the object is not new
     */
    public boolean isNew()
    {
        return _isNew;
    }

    /**
     * Specifies to the object if it has been set as new.
     *
     * @param isNew the boolean value to be assigned to the isNew field
     */
    public void isNew(boolean isNew)
    {
        this._isNew = isNew;
    }

    /**
     * Determines if the object has been modified since the last time this method was called.
     * <br>
     * We can also determine if this object has ever been modified since its creation.
     *
     * @return true if the object has been modified, false if the object has not been modified
     */
    public boolean isModified()
    {
        return tbrIdIsModified 		|| tbjtIdIsModified  		|| tbjrIdIsModified  ;
    }

    /**
     * Resets the object modification status to 'not modified'.
     */
    public void resetIsModified()
    {
        tbrIdIsModified = false;
        tbjtIdIsModified = false;
        tbjrIdIsModified = false;
    }

    /**
     * Copies the passed bean into the current bean.
     *
     * @param bean the bean to copy into the current bean
     */
    public void copy(TbJobRenumerationBean bean)
    {
        setTbrId(bean.getTbrId());
        setTbjtId(bean.getTbjtId());
        setTbjrId(bean.getTbjrId());
    }

    /**
     * return a dictionnary of the object
     */
    public Map getDictionnary()
    {
        Map dictionnary = new HashMap();
        dictionnary.put("tbr_id", getTbrId() == null ? "" : getTbrId().toString());
        dictionnary.put("tbjt_id", getTbjtId() == null ? "" : getTbjtId().toString());
        dictionnary.put("tbjr_id", getTbjrId() == null ? "" : getTbjrId().toString());
        return dictionnary;
    }

    /**
     * return a dictionnary of the pk columns
     */
    public Map getPkDictionnary()
    {
        Map dictionnary = new HashMap();
        dictionnary.put("tbjr_id", getTbjrId() == null ? "" : getTbjrId().toString());
        return dictionnary;
    }

    /**
     * return a the value string representation of the given field
     */
    public String getValue(String column)
    {
        if (null == column || "".equals(column)) {
            return "";
        } else if ("tbr_id".equalsIgnoreCase(column) || "tbrId".equalsIgnoreCase(column)) {
            return getTbrId() == null ? "" : getTbrId().toString();
        } else if ("tbjt_id".equalsIgnoreCase(column) || "tbjtId".equalsIgnoreCase(column)) {
            return getTbjtId() == null ? "" : getTbjtId().toString();
        } else if ("tbjr_id".equalsIgnoreCase(column) || "tbjrId".equalsIgnoreCase(column)) {
            return getTbjrId() == null ? "" : getTbjrId().toString();
        }
        return "";
    }

    /**
     * @see java.lang.Object#equals(Object)
     */
    public boolean equals(Object object)
    {
        if (!(object instanceof TbJobRenumerationBean)) {
            return false;
        }

		TbJobRenumerationBean obj = (TbJobRenumerationBean) object;
		return new EqualsBuilder()
            .append(getTbrId(), obj.getTbrId())
            .append(getTbjtId(), obj.getTbjtId())
            .append(getTbjrId(), obj.getTbjrId())
            .isEquals();
	}

	/**
	 * @see java.lang.Object#hashCode()
	 */
	public int hashCode()
	{
		return new HashCodeBuilder(-82280557, -700257973)
            .append(getTbrId())
            .append(getTbjtId())
            .append(getTbjrId())
            .toHashCode();
	}

	/**
	 * @see java.lang.Object#toString()
	 */
	public String toString()
	{
	    return toString(ToStringStyle.MULTI_LINE_STYLE);
	}

	/**
	 * you can use the following styles:
	 * <li>ToStringStyle.DEFAULT_STYLE</li>
	 * <li>ToStringStyle.MULTI_LINE_STYLE</li>
     * <li>ToStringStyle.NO_FIELD_NAMES_STYLE</li>
     * <li>ToStringStyle.SHORT_PREFIX_STYLE</li>
     * <li>ToStringStyle.SIMPLE_STYLE</li>
	 */
	public String toString(ToStringStyle style) {
		return new ToStringBuilder(this, style)
            .append("tbr_id", getTbrId())
            .append("tbjt_id", getTbjtId())
            .append("tbjr_id", getTbjrId())
            .toString();
	}


    public int compareTo(Object object)
    {
        TbJobRenumerationBean obj = (TbJobRenumerationBean) object;
        return new CompareToBuilder()
            .append(getTbrId(), obj.getTbrId())
            .append(getTbjtId(), obj.getTbjtId())
            .append(getTbjrId(), obj.getTbjrId())
            .toComparison();
   }
}
