// ______________________________________________________
// Generated by sql2java - http://sql2java.sourceforge.net/
// jdbc driver used at code generation time: com.mysql.jdbc.Driver
//
// Please help us improve this tool by reporting:
// - problems and suggestions to
//   http://sourceforge.net/tracker/?group_id=54687
// - feedbacks and ideas on
//   http://sourceforge.net/forum/forum.php?forum_id=182208
// ______________________________________________________

package com.gwt.hris.db;

import java.util.Comparator;


/**
 * Comparator class is used to sort the ViewNotificationBean objects.
 * @author sql2java
 */
public class ViewNotificationComparator implements Comparator
{
    /**
     * Holds the field on which the comparison is performed.
     */
    private int iType;
    /**
     * Value that will contain the information about the order of the sort: normal or reversal.
     */
    private boolean bReverse;

    /**
     * Constructor class for ViewNotificationComparator.
     * <br>
     * Example:
     * <br>
     * <code>Arrays.sort(pArray, new ViewNotificationComparator(ViewNotificationManager.ID_TBN_CREATE_DATE, bReverse));<code>
     *
     * @param iType the field from which you want to sort
     * <br>
     * Possible values are:
     * <ul>
     *   <li>ViewNotificationManager.ID_TBN_CREATE_DATE
     *   <li>ViewNotificationManager.ID_TBN_READ_DATE
     *   <li>ViewNotificationManager.ID_TBN_SENT_DATE
     *   <li>ViewNotificationManager.ID_TBN_DATA
     *   <li>ViewNotificationManager.ID_TBCD_OTHER_EMAIL_TO
     *   <li>ViewNotificationManager.ID_TBE_EMAIL_TO
     *   <li>ViewNotificationManager.ID_TBE_NAME_TO
     *   <li>ViewNotificationManager.ID_TBE_ID_TO
     *   <li>ViewNotificationManager.ID_TBCD_OTHER_EMAIL_FROM
     *   <li>ViewNotificationManager.ID_TBE_EMAIL_FROM
     *   <li>ViewNotificationManager.ID_TBE_NAME_FROM
     *   <li>ViewNotificationManager.ID_TBE_ID_FROM
     *   <li>ViewNotificationManager.ID_TBNU_NAME
     *   <li>ViewNotificationManager.ID_TBNU_ID
     *   <li>ViewNotificationManager.ID_TBNT_SUBJECT
     *   <li>ViewNotificationManager.ID_TBNT_ID
     *   <li>ViewNotificationManager.ID_TBNC_NAME
     *   <li>ViewNotificationManager.ID_TBNC_ID
     *   <li>ViewNotificationManager.ID_TBN_ID
     * </ul>
     */
    public ViewNotificationComparator(int iType)
    {
        this(iType, false);
    }

    /**
     * Constructor class for ViewNotificationComparator.
     * <br>
     * Example:
     * <br>
     * <code>Arrays.sort(pArray, new ViewNotificationComparator(ViewNotificationManager.ID_TBN_CREATE_DATE, bReverse));<code>
     *
     * @param iType the field from which you want to sort.
     * <br>
     * Possible values are:
     * <ul>
     *   <li>ViewNotificationManager.ID_TBN_CREATE_DATE
     *   <li>ViewNotificationManager.ID_TBN_READ_DATE
     *   <li>ViewNotificationManager.ID_TBN_SENT_DATE
     *   <li>ViewNotificationManager.ID_TBN_DATA
     *   <li>ViewNotificationManager.ID_TBCD_OTHER_EMAIL_TO
     *   <li>ViewNotificationManager.ID_TBE_EMAIL_TO
     *   <li>ViewNotificationManager.ID_TBE_NAME_TO
     *   <li>ViewNotificationManager.ID_TBE_ID_TO
     *   <li>ViewNotificationManager.ID_TBCD_OTHER_EMAIL_FROM
     *   <li>ViewNotificationManager.ID_TBE_EMAIL_FROM
     *   <li>ViewNotificationManager.ID_TBE_NAME_FROM
     *   <li>ViewNotificationManager.ID_TBE_ID_FROM
     *   <li>ViewNotificationManager.ID_TBNU_NAME
     *   <li>ViewNotificationManager.ID_TBNU_ID
     *   <li>ViewNotificationManager.ID_TBNT_SUBJECT
     *   <li>ViewNotificationManager.ID_TBNT_ID
     *   <li>ViewNotificationManager.ID_TBNC_NAME
     *   <li>ViewNotificationManager.ID_TBNC_ID
     *   <li>ViewNotificationManager.ID_TBN_ID
     * </ul>
     *
     * @param bReverse set this value to true, if you want to reverse the sorting results
     */
    public ViewNotificationComparator(int iType, boolean bReverse)
    {
        this.iType = iType;
        this.bReverse = bReverse;
    }

    /**
     * Implementation of the compare method.
     */
    public int compare(Object pObj1, Object pObj2)
    {
        ViewNotificationBean b1 = (ViewNotificationBean)pObj1;
        ViewNotificationBean b2 = (ViewNotificationBean)pObj2;
        int iReturn = 0;
        switch(iType)
        {
            case ViewNotificationManager.ID_TBN_CREATE_DATE:
                if (b1.getTbnCreateDate() == null && b2.getTbnCreateDate() != null) {
                    iReturn = -1;
                } else if (b1.getTbnCreateDate() == null && b2.getTbnCreateDate() == null) {
                    iReturn = 0;
                } else if (b1.getTbnCreateDate() != null && b2.getTbnCreateDate() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbnCreateDate().compareTo(b2.getTbnCreateDate());
                }
                break;
            case ViewNotificationManager.ID_TBN_READ_DATE:
                if (b1.getTbnReadDate() == null && b2.getTbnReadDate() != null) {
                    iReturn = -1;
                } else if (b1.getTbnReadDate() == null && b2.getTbnReadDate() == null) {
                    iReturn = 0;
                } else if (b1.getTbnReadDate() != null && b2.getTbnReadDate() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbnReadDate().compareTo(b2.getTbnReadDate());
                }
                break;
            case ViewNotificationManager.ID_TBN_SENT_DATE:
                if (b1.getTbnSentDate() == null && b2.getTbnSentDate() != null) {
                    iReturn = -1;
                } else if (b1.getTbnSentDate() == null && b2.getTbnSentDate() == null) {
                    iReturn = 0;
                } else if (b1.getTbnSentDate() != null && b2.getTbnSentDate() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbnSentDate().compareTo(b2.getTbnSentDate());
                }
                break;
            case ViewNotificationManager.ID_TBN_DATA:
                if (b1.getTbnData() == null && b2.getTbnData() != null) {
                    iReturn = -1;
                } else if (b1.getTbnData() == null && b2.getTbnData() == null) {
                    iReturn = 0;
                } else if (b1.getTbnData() != null && b2.getTbnData() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbnData().compareTo(b2.getTbnData());
                }
                break;
            case ViewNotificationManager.ID_TBCD_OTHER_EMAIL_TO:
                if (b1.getTbcdOtherEmailTo() == null && b2.getTbcdOtherEmailTo() != null) {
                    iReturn = -1;
                } else if (b1.getTbcdOtherEmailTo() == null && b2.getTbcdOtherEmailTo() == null) {
                    iReturn = 0;
                } else if (b1.getTbcdOtherEmailTo() != null && b2.getTbcdOtherEmailTo() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbcdOtherEmailTo().compareTo(b2.getTbcdOtherEmailTo());
                }
                break;
            case ViewNotificationManager.ID_TBE_EMAIL_TO:
                if (b1.getTbeEmailTo() == null && b2.getTbeEmailTo() != null) {
                    iReturn = -1;
                } else if (b1.getTbeEmailTo() == null && b2.getTbeEmailTo() == null) {
                    iReturn = 0;
                } else if (b1.getTbeEmailTo() != null && b2.getTbeEmailTo() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbeEmailTo().compareTo(b2.getTbeEmailTo());
                }
                break;
            case ViewNotificationManager.ID_TBE_NAME_TO:
                if (b1.getTbeNameTo() == null && b2.getTbeNameTo() != null) {
                    iReturn = -1;
                } else if (b1.getTbeNameTo() == null && b2.getTbeNameTo() == null) {
                    iReturn = 0;
                } else if (b1.getTbeNameTo() != null && b2.getTbeNameTo() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbeNameTo().compareTo(b2.getTbeNameTo());
                }
                break;
            case ViewNotificationManager.ID_TBE_ID_TO:
                if (b1.getTbeIdTo() == null && b2.getTbeIdTo() != null) {
                    iReturn = -1;
                } else if (b1.getTbeIdTo() == null && b2.getTbeIdTo() == null) {
                    iReturn = 0;
                } else if (b1.getTbeIdTo() != null && b2.getTbeIdTo() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbeIdTo().compareTo(b2.getTbeIdTo());
                }
                break;
            case ViewNotificationManager.ID_TBCD_OTHER_EMAIL_FROM:
                if (b1.getTbcdOtherEmailFrom() == null && b2.getTbcdOtherEmailFrom() != null) {
                    iReturn = -1;
                } else if (b1.getTbcdOtherEmailFrom() == null && b2.getTbcdOtherEmailFrom() == null) {
                    iReturn = 0;
                } else if (b1.getTbcdOtherEmailFrom() != null && b2.getTbcdOtherEmailFrom() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbcdOtherEmailFrom().compareTo(b2.getTbcdOtherEmailFrom());
                }
                break;
            case ViewNotificationManager.ID_TBE_EMAIL_FROM:
                if (b1.getTbeEmailFrom() == null && b2.getTbeEmailFrom() != null) {
                    iReturn = -1;
                } else if (b1.getTbeEmailFrom() == null && b2.getTbeEmailFrom() == null) {
                    iReturn = 0;
                } else if (b1.getTbeEmailFrom() != null && b2.getTbeEmailFrom() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbeEmailFrom().compareTo(b2.getTbeEmailFrom());
                }
                break;
            case ViewNotificationManager.ID_TBE_NAME_FROM:
                if (b1.getTbeNameFrom() == null && b2.getTbeNameFrom() != null) {
                    iReturn = -1;
                } else if (b1.getTbeNameFrom() == null && b2.getTbeNameFrom() == null) {
                    iReturn = 0;
                } else if (b1.getTbeNameFrom() != null && b2.getTbeNameFrom() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbeNameFrom().compareTo(b2.getTbeNameFrom());
                }
                break;
            case ViewNotificationManager.ID_TBE_ID_FROM:
                if (b1.getTbeIdFrom() == null && b2.getTbeIdFrom() != null) {
                    iReturn = -1;
                } else if (b1.getTbeIdFrom() == null && b2.getTbeIdFrom() == null) {
                    iReturn = 0;
                } else if (b1.getTbeIdFrom() != null && b2.getTbeIdFrom() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbeIdFrom().compareTo(b2.getTbeIdFrom());
                }
                break;
            case ViewNotificationManager.ID_TBNU_NAME:
                if (b1.getTbnuName() == null && b2.getTbnuName() != null) {
                    iReturn = -1;
                } else if (b1.getTbnuName() == null && b2.getTbnuName() == null) {
                    iReturn = 0;
                } else if (b1.getTbnuName() != null && b2.getTbnuName() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbnuName().compareTo(b2.getTbnuName());
                }
                break;
            case ViewNotificationManager.ID_TBNU_ID:
                if (b1.getTbnuId() == null && b2.getTbnuId() != null) {
                    iReturn = -1;
                } else if (b1.getTbnuId() == null && b2.getTbnuId() == null) {
                    iReturn = 0;
                } else if (b1.getTbnuId() != null && b2.getTbnuId() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbnuId().compareTo(b2.getTbnuId());
                }
                break;
            case ViewNotificationManager.ID_TBNT_SUBJECT:
                if (b1.getTbntSubject() == null && b2.getTbntSubject() != null) {
                    iReturn = -1;
                } else if (b1.getTbntSubject() == null && b2.getTbntSubject() == null) {
                    iReturn = 0;
                } else if (b1.getTbntSubject() != null && b2.getTbntSubject() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbntSubject().compareTo(b2.getTbntSubject());
                }
                break;
            case ViewNotificationManager.ID_TBNT_ID:
                if (b1.getTbntId() == null && b2.getTbntId() != null) {
                    iReturn = -1;
                } else if (b1.getTbntId() == null && b2.getTbntId() == null) {
                    iReturn = 0;
                } else if (b1.getTbntId() != null && b2.getTbntId() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbntId().compareTo(b2.getTbntId());
                }
                break;
            case ViewNotificationManager.ID_TBNC_NAME:
                if (b1.getTbncName() == null && b2.getTbncName() != null) {
                    iReturn = -1;
                } else if (b1.getTbncName() == null && b2.getTbncName() == null) {
                    iReturn = 0;
                } else if (b1.getTbncName() != null && b2.getTbncName() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbncName().compareTo(b2.getTbncName());
                }
                break;
            case ViewNotificationManager.ID_TBNC_ID:
                if (b1.getTbncId() == null && b2.getTbncId() != null) {
                    iReturn = -1;
                } else if (b1.getTbncId() == null && b2.getTbncId() == null) {
                    iReturn = 0;
                } else if (b1.getTbncId() != null && b2.getTbncId() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbncId().compareTo(b2.getTbncId());
                }
                break;
            case ViewNotificationManager.ID_TBN_ID:
                if (b1.getTbnId() == null && b2.getTbnId() != null) {
                    iReturn = -1;
                } else if (b1.getTbnId() == null && b2.getTbnId() == null) {
                    iReturn = 0;
                } else if (b1.getTbnId() != null && b2.getTbnId() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbnId().compareTo(b2.getTbnId());
                }
                break;
            default:
                throw new IllegalArgumentException("Type passed for the field is not supported");
        }

        return bReverse ? (-1 * iReturn) : iReturn;
    }}
