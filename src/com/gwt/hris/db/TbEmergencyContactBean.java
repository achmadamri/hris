// ______________________________________________________
// Generated by sql2java - http://sql2java.sourceforge.net/
// jdbc driver used at code generation time: com.mysql.jdbc.Driver
//
// Please help us improve this tool by reporting:
// - problems and suggestions to
//   http://sourceforge.net/tracker/?group_id=54687
// - feedbacks and ideas on
//   http://sourceforge.net/forum/forum.php?forum_id=182208
// ______________________________________________________

package com.gwt.hris.db;

import java.io.Serializable;
import java.util.HashMap;
import java.util.Map;

import org.apache.commons.lang.builder.CompareToBuilder;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.commons.lang.builder.ToStringStyle;

/**
 * TbEmergencyContactBean is a mapping of tb_emergency_contact Table.
 * @author sql2java
*/
public class TbEmergencyContactBean
    implements Serializable, GeneratedBean
{
	private static final long serialVersionUID = 4357522861028486474L;
	
    private String tbecWorkPhone;

    private boolean tbecWorkPhoneIsModified = false;
    private boolean tbecWorkPhoneIsInitialized = false;

    private String tbecMobilePhone;

    private boolean tbecMobilePhoneIsModified = false;
    private boolean tbecMobilePhoneIsInitialized = false;

    private String tbecHomePhone;

    private boolean tbecHomePhoneIsModified = false;
    private boolean tbecHomePhoneIsInitialized = false;

    private String tbecRelationship;

    private boolean tbecRelationshipIsModified = false;
    private boolean tbecRelationshipIsInitialized = false;

    private String tbecName;

    private boolean tbecNameIsModified = false;
    private boolean tbecNameIsInitialized = false;

    private Integer tbeId;

    private boolean tbeIdIsModified = false;
    private boolean tbeIdIsInitialized = false;

    private Integer tbecId;

    private boolean tbecIdIsModified = false;
    private boolean tbecIdIsInitialized = false;

    private boolean _isNew = true;

    /**
     * Prefered methods to create a TbEmergencyContactBean is via the createTbEmergencyContactBean method in TbEmergencyContactManager or
     * via the factory class TbEmergencyContactFactory create method
     */
    protected TbEmergencyContactBean()
    {
    }

    /**
     * Getter method for tbecWorkPhone.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_emergency_contact.tbec_work_phone</li>
     * <li>column size: 45</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbecWorkPhone
     */
    public String getTbecWorkPhone()
    {
        return tbecWorkPhone;
    }

    /**
     * Setter method for tbecWorkPhone.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbecWorkPhone
     */
    public void setTbecWorkPhone(String newVal)
    {
        if ((newVal != null && tbecWorkPhone != null && (newVal.compareTo(tbecWorkPhone) == 0)) ||
            (newVal == null && tbecWorkPhone == null && tbecWorkPhoneIsInitialized)) {
            return;
        }
        tbecWorkPhone = newVal;
        tbecWorkPhoneIsModified = true;
        tbecWorkPhoneIsInitialized = true;
    }

    /**
     * Determines if the tbecWorkPhone has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbecWorkPhoneModified()
    {
        return tbecWorkPhoneIsModified;
    }

    /**
     * Determines if the tbecWorkPhone has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbecWorkPhoneInitialized()
    {
        return tbecWorkPhoneIsInitialized;
    }

    /**
     * Getter method for tbecMobilePhone.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_emergency_contact.tbec_mobile_phone</li>
     * <li>column size: 45</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbecMobilePhone
     */
    public String getTbecMobilePhone()
    {
        return tbecMobilePhone;
    }

    /**
     * Setter method for tbecMobilePhone.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbecMobilePhone
     */
    public void setTbecMobilePhone(String newVal)
    {
        if ((newVal != null && tbecMobilePhone != null && (newVal.compareTo(tbecMobilePhone) == 0)) ||
            (newVal == null && tbecMobilePhone == null && tbecMobilePhoneIsInitialized)) {
            return;
        }
        tbecMobilePhone = newVal;
        tbecMobilePhoneIsModified = true;
        tbecMobilePhoneIsInitialized = true;
    }

    /**
     * Determines if the tbecMobilePhone has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbecMobilePhoneModified()
    {
        return tbecMobilePhoneIsModified;
    }

    /**
     * Determines if the tbecMobilePhone has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbecMobilePhoneInitialized()
    {
        return tbecMobilePhoneIsInitialized;
    }

    /**
     * Getter method for tbecHomePhone.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_emergency_contact.tbec_home_phone</li>
     * <li>column size: 45</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbecHomePhone
     */
    public String getTbecHomePhone()
    {
        return tbecHomePhone;
    }

    /**
     * Setter method for tbecHomePhone.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbecHomePhone
     */
    public void setTbecHomePhone(String newVal)
    {
        if ((newVal != null && tbecHomePhone != null && (newVal.compareTo(tbecHomePhone) == 0)) ||
            (newVal == null && tbecHomePhone == null && tbecHomePhoneIsInitialized)) {
            return;
        }
        tbecHomePhone = newVal;
        tbecHomePhoneIsModified = true;
        tbecHomePhoneIsInitialized = true;
    }

    /**
     * Determines if the tbecHomePhone has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbecHomePhoneModified()
    {
        return tbecHomePhoneIsModified;
    }

    /**
     * Determines if the tbecHomePhone has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbecHomePhoneInitialized()
    {
        return tbecHomePhoneIsInitialized;
    }

    /**
     * Getter method for tbecRelationship.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_emergency_contact.tbec_relationship</li>
     * <li>column size: 45</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbecRelationship
     */
    public String getTbecRelationship()
    {
        return tbecRelationship;
    }

    /**
     * Setter method for tbecRelationship.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbecRelationship
     */
    public void setTbecRelationship(String newVal)
    {
        if ((newVal != null && tbecRelationship != null && (newVal.compareTo(tbecRelationship) == 0)) ||
            (newVal == null && tbecRelationship == null && tbecRelationshipIsInitialized)) {
            return;
        }
        tbecRelationship = newVal;
        tbecRelationshipIsModified = true;
        tbecRelationshipIsInitialized = true;
    }

    /**
     * Determines if the tbecRelationship has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbecRelationshipModified()
    {
        return tbecRelationshipIsModified;
    }

    /**
     * Determines if the tbecRelationship has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbecRelationshipInitialized()
    {
        return tbecRelationshipIsInitialized;
    }

    /**
     * Getter method for tbecName.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_emergency_contact.tbec_name</li>
     * <li>column size: 45</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbecName
     */
    public String getTbecName()
    {
        return tbecName;
    }

    /**
     * Setter method for tbecName.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbecName
     */
    public void setTbecName(String newVal)
    {
        if ((newVal != null && tbecName != null && (newVal.compareTo(tbecName) == 0)) ||
            (newVal == null && tbecName == null && tbecNameIsInitialized)) {
            return;
        }
        tbecName = newVal;
        tbecNameIsModified = true;
        tbecNameIsInitialized = true;
    }

    /**
     * Determines if the tbecName has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbecNameModified()
    {
        return tbecNameIsModified;
    }

    /**
     * Determines if the tbecName has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbecNameInitialized()
    {
        return tbecNameIsInitialized;
    }

    /**
     * Getter method for tbeId.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_emergency_contact.tbe_id</li>
     * <li> foreign key: tb_employee.tbe_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbeId
     */
    public Integer getTbeId()
    {
        return tbeId;
    }

    /**
     * Setter method for tbeId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbeId
     */
    public void setTbeId(Integer newVal)
    {
        if ((newVal != null && tbeId != null && (newVal.compareTo(tbeId) == 0)) ||
            (newVal == null && tbeId == null && tbeIdIsInitialized)) {
            return;
        }
        tbeId = newVal;
        tbeIdIsModified = true;
        tbeIdIsInitialized = true;
    }

    /**
     * Setter method for tbeId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbeId
     */
    public void setTbeId(int newVal)
    {
        setTbeId(new Integer(newVal));
    }

    /**
     * Determines if the tbeId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbeIdModified()
    {
        return tbeIdIsModified;
    }

    /**
     * Determines if the tbeId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbeIdInitialized()
    {
        return tbeIdIsInitialized;
    }

    /**
     * Getter method for tbecId.
     * <br>
     * PRIMARY KEY.<br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_emergency_contact.tbec_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbecId
     */
    public Integer getTbecId()
    {
        return tbecId;
    }

    /**
     * Setter method for tbecId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbecId
     */
    public void setTbecId(Integer newVal)
    {
        if ((newVal != null && tbecId != null && (newVal.compareTo(tbecId) == 0)) ||
            (newVal == null && tbecId == null && tbecIdIsInitialized)) {
            return;
        }
        tbecId = newVal;
        tbecIdIsModified = true;
        tbecIdIsInitialized = true;
    }

    /**
     * Setter method for tbecId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbecId
     */
    public void setTbecId(int newVal)
    {
        setTbecId(new Integer(newVal));
    }

    /**
     * Determines if the tbecId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbecIdModified()
    {
        return tbecIdIsModified;
    }

    /**
     * Determines if the tbecId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbecIdInitialized()
    {
        return tbecIdIsInitialized;
    }

    /** The TbEmployee referenced by this bean. */
    private TbEmployeeBean referencedTbEmployee;
    /** Getter method for TbEmployeeBean. */
    public TbEmployeeBean getTbEmployeeBean() {
        return this.referencedTbEmployee;
    }
    /** Setter method for TbEmployeeBean. */
    public void setTbEmployeeBean(TbEmployeeBean reference) {
        this.referencedTbEmployee = reference;
    }
    
    /**
     * Determines if the current object is new.
     *
     * @return true if the current object is new, false if the object is not new
     */
    public boolean isNew()
    {
        return _isNew;
    }

    /**
     * Specifies to the object if it has been set as new.
     *
     * @param isNew the boolean value to be assigned to the isNew field
     */
    public void isNew(boolean isNew)
    {
        this._isNew = isNew;
    }

    /**
     * Determines if the object has been modified since the last time this method was called.
     * <br>
     * We can also determine if this object has ever been modified since its creation.
     *
     * @return true if the object has been modified, false if the object has not been modified
     */
    public boolean isModified()
    {
        return tbecWorkPhoneIsModified 		|| tbecMobilePhoneIsModified  		|| tbecHomePhoneIsModified  		|| tbecRelationshipIsModified  		|| tbecNameIsModified  		|| tbeIdIsModified  		|| tbecIdIsModified  ;
    }

    /**
     * Resets the object modification status to 'not modified'.
     */
    public void resetIsModified()
    {
        tbecWorkPhoneIsModified = false;
        tbecMobilePhoneIsModified = false;
        tbecHomePhoneIsModified = false;
        tbecRelationshipIsModified = false;
        tbecNameIsModified = false;
        tbeIdIsModified = false;
        tbecIdIsModified = false;
    }

    /**
     * Copies the passed bean into the current bean.
     *
     * @param bean the bean to copy into the current bean
     */
    public void copy(TbEmergencyContactBean bean)
    {
        setTbecWorkPhone(bean.getTbecWorkPhone());
        setTbecMobilePhone(bean.getTbecMobilePhone());
        setTbecHomePhone(bean.getTbecHomePhone());
        setTbecRelationship(bean.getTbecRelationship());
        setTbecName(bean.getTbecName());
        setTbeId(bean.getTbeId());
        setTbecId(bean.getTbecId());
    }

    /**
     * return a dictionnary of the object
     */
    public Map getDictionnary()
    {
        Map dictionnary = new HashMap();
        dictionnary.put("tbec_work_phone", getTbecWorkPhone() == null ? "" : getTbecWorkPhone().toString());
        dictionnary.put("tbec_mobile_phone", getTbecMobilePhone() == null ? "" : getTbecMobilePhone().toString());
        dictionnary.put("tbec_home_phone", getTbecHomePhone() == null ? "" : getTbecHomePhone().toString());
        dictionnary.put("tbec_relationship", getTbecRelationship() == null ? "" : getTbecRelationship().toString());
        dictionnary.put("tbec_name", getTbecName() == null ? "" : getTbecName().toString());
        dictionnary.put("tbe_id", getTbeId() == null ? "" : getTbeId().toString());
        dictionnary.put("tbec_id", getTbecId() == null ? "" : getTbecId().toString());
        return dictionnary;
    }

    /**
     * return a dictionnary of the pk columns
     */
    public Map getPkDictionnary()
    {
        Map dictionnary = new HashMap();
        dictionnary.put("tbec_id", getTbecId() == null ? "" : getTbecId().toString());
        return dictionnary;
    }

    /**
     * return a the value string representation of the given field
     */
    public String getValue(String column)
    {
        if (null == column || "".equals(column)) {
            return "";
        } else if ("tbec_work_phone".equalsIgnoreCase(column) || "tbecWorkPhone".equalsIgnoreCase(column)) {
            return getTbecWorkPhone() == null ? "" : getTbecWorkPhone().toString();
        } else if ("tbec_mobile_phone".equalsIgnoreCase(column) || "tbecMobilePhone".equalsIgnoreCase(column)) {
            return getTbecMobilePhone() == null ? "" : getTbecMobilePhone().toString();
        } else if ("tbec_home_phone".equalsIgnoreCase(column) || "tbecHomePhone".equalsIgnoreCase(column)) {
            return getTbecHomePhone() == null ? "" : getTbecHomePhone().toString();
        } else if ("tbec_relationship".equalsIgnoreCase(column) || "tbecRelationship".equalsIgnoreCase(column)) {
            return getTbecRelationship() == null ? "" : getTbecRelationship().toString();
        } else if ("tbec_name".equalsIgnoreCase(column) || "tbecName".equalsIgnoreCase(column)) {
            return getTbecName() == null ? "" : getTbecName().toString();
        } else if ("tbe_id".equalsIgnoreCase(column) || "tbeId".equalsIgnoreCase(column)) {
            return getTbeId() == null ? "" : getTbeId().toString();
        } else if ("tbec_id".equalsIgnoreCase(column) || "tbecId".equalsIgnoreCase(column)) {
            return getTbecId() == null ? "" : getTbecId().toString();
        }
        return "";
    }

    /**
     * @see java.lang.Object#equals(Object)
     */
    public boolean equals(Object object)
    {
        if (!(object instanceof TbEmergencyContactBean)) {
            return false;
        }

		TbEmergencyContactBean obj = (TbEmergencyContactBean) object;
		return new EqualsBuilder()
            .append(getTbecWorkPhone(), obj.getTbecWorkPhone())
            .append(getTbecMobilePhone(), obj.getTbecMobilePhone())
            .append(getTbecHomePhone(), obj.getTbecHomePhone())
            .append(getTbecRelationship(), obj.getTbecRelationship())
            .append(getTbecName(), obj.getTbecName())
            .append(getTbeId(), obj.getTbeId())
            .append(getTbecId(), obj.getTbecId())
            .isEquals();
	}

	/**
	 * @see java.lang.Object#hashCode()
	 */
	public int hashCode()
	{
		return new HashCodeBuilder(-82280557, -700257973)
            .append(getTbecWorkPhone())
            .append(getTbecMobilePhone())
            .append(getTbecHomePhone())
            .append(getTbecRelationship())
            .append(getTbecName())
            .append(getTbeId())
            .append(getTbecId())
            .toHashCode();
	}

	/**
	 * @see java.lang.Object#toString()
	 */
	public String toString()
	{
	    return toString(ToStringStyle.MULTI_LINE_STYLE);
	}

	/**
	 * you can use the following styles:
	 * <li>ToStringStyle.DEFAULT_STYLE</li>
	 * <li>ToStringStyle.MULTI_LINE_STYLE</li>
     * <li>ToStringStyle.NO_FIELD_NAMES_STYLE</li>
     * <li>ToStringStyle.SHORT_PREFIX_STYLE</li>
     * <li>ToStringStyle.SIMPLE_STYLE</li>
	 */
	public String toString(ToStringStyle style) {
		return new ToStringBuilder(this, style)
            .append("tbec_work_phone", getTbecWorkPhone())
            .append("tbec_mobile_phone", getTbecMobilePhone())
            .append("tbec_home_phone", getTbecHomePhone())
            .append("tbec_relationship", getTbecRelationship())
            .append("tbec_name", getTbecName())
            .append("tbe_id", getTbeId())
            .append("tbec_id", getTbecId())
            .toString();
	}


    public int compareTo(Object object)
    {
        TbEmergencyContactBean obj = (TbEmergencyContactBean) object;
        return new CompareToBuilder()
            .append(getTbecWorkPhone(), obj.getTbecWorkPhone())
            .append(getTbecMobilePhone(), obj.getTbecMobilePhone())
            .append(getTbecHomePhone(), obj.getTbecHomePhone())
            .append(getTbecRelationship(), obj.getTbecRelationship())
            .append(getTbecName(), obj.getTbecName())
            .append(getTbeId(), obj.getTbeId())
            .append(getTbecId(), obj.getTbecId())
            .toComparison();
   }
}
