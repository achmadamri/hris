// ______________________________________________________
// Generated by sql2java - http://sql2java.sourceforge.net/
// jdbc driver used at code generation time: com.mysql.jdbc.Driver
//
// Please help us improve this tool by reporting:
// - problems and suggestions to
//   http://sourceforge.net/tracker/?group_id=54687
// - feedbacks and ideas on
//   http://sourceforge.net/forum/forum.php?forum_id=182208
// ______________________________________________________

package com.gwt.hris.db;

import java.io.Serializable;
import java.util.HashMap;
import java.util.Map;

import org.apache.commons.lang.builder.CompareToBuilder;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.commons.lang.builder.ToStringStyle;

/**
 * ViewReportEmployeePphBean is a mapping of view_report_employee_pph Table.
 * @author sql2java
*/
public class ViewReportEmployeePphBean
    implements Serializable, GeneratedBean
{
	private static final long serialVersionUID = 6905590457038329080L;
	
    private String tbjtName;

    private boolean tbjtNameIsModified = false;
    private boolean tbjtNameIsInitialized = false;

    private Integer tbjtId;

    private boolean tbjtIdIsModified = false;
    private boolean tbjtIdIsInitialized = false;

    private String tboNama;

    private boolean tboNamaIsModified = false;
    private boolean tboNamaIsInitialized = false;

    private Integer tboId;

    private boolean tboIdIsModified = false;
    private boolean tboIdIsInitialized = false;

    private Integer tbpphDummy;

    private boolean tbpphDummyIsModified = false;
    private boolean tbpphDummyIsInitialized = false;

    private String tbpphPeriode;

    private boolean tbpphPeriodeIsModified = false;
    private boolean tbpphPeriodeIsInitialized = false;

    private Double tbpphTotalTakeHomePayKurs;

    private boolean tbpphTotalTakeHomePayKursIsModified = false;
    private boolean tbpphTotalTakeHomePayKursIsInitialized = false;

    private Integer tbcId;

    private boolean tbcIdIsModified = false;
    private boolean tbcIdIsInitialized = false;

    private Double tbpphTotalTakeHomePay;

    private boolean tbpphTotalTakeHomePayIsModified = false;
    private boolean tbpphTotalTakeHomePayIsInitialized = false;

    private Double tbpphLoan;

    private boolean tbpphLoanIsModified = false;
    private boolean tbpphLoanIsInitialized = false;

    private Double tbpphTakeHomePayUtkPendIrreguler;

    private boolean tbpphTakeHomePayUtkPendIrregulerIsModified = false;
    private boolean tbpphTakeHomePayUtkPendIrregulerIsInitialized = false;

    private Double tbpphPajakKomisi;

    private boolean tbpphPajakKomisiIsModified = false;
    private boolean tbpphPajakKomisiIsInitialized = false;

    private Double tbpphPajakTotSethnUtkKaryTdkBerNpwp;

    private boolean tbpphPajakTotSethnUtkKaryTdkBerNpwpIsModified = false;
    private boolean tbpphPajakTotSethnUtkKaryTdkBerNpwpIsInitialized = false;

    private Double tbpphPajakTotSethnUtkKaryBerNpwp;

    private boolean tbpphPajakTotSethnUtkKaryBerNpwpIsModified = false;
    private boolean tbpphPajakTotSethnUtkKaryBerNpwpIsInitialized = false;

    private Double tbpphPendDisetahunkanPlusKomisi;

    private boolean tbpphPendDisetahunkanPlusKomisiIsModified = false;
    private boolean tbpphPendDisetahunkanPlusKomisiIsInitialized = false;

    private Double tbpphPajakSdhDisetorUtkPendTdkTtpYtd;

    private boolean tbpphPajakSdhDisetorUtkPendTdkTtpYtdIsModified = false;
    private boolean tbpphPajakSdhDisetorUtkPendTdkTtpYtdIsInitialized = false;

    private Double tbpphPendapatanTidakTetapYtd;

    private boolean tbpphPendapatanTidakTetapYtdIsModified = false;
    private boolean tbpphPendapatanTidakTetapYtdIsInitialized = false;

    private Double tbpphPendapatanTidakTetap;

    private boolean tbpphPendapatanTidakTetapIsModified = false;
    private boolean tbpphPendapatanTidakTetapIsInitialized = false;

    private Double tbpphTakeHomePay;

    private boolean tbpphTakeHomePayIsModified = false;
    private boolean tbpphTakeHomePayIsInitialized = false;

    private Double tbpphPajakBlnIni;

    private boolean tbpphPajakBlnIniIsModified = false;
    private boolean tbpphPajakBlnIniIsInitialized = false;

    private Double tbpphPajakTerutangSmpBlnIni;

    private boolean tbpphPajakTerutangSmpBlnIniIsModified = false;
    private boolean tbpphPajakTerutangSmpBlnIniIsInitialized = false;

    private Double tbpphPajakSetahunUtkKaryTdkBerNpwp;

    private boolean tbpphPajakSetahunUtkKaryTdkBerNpwpIsModified = false;
    private boolean tbpphPajakSetahunUtkKaryTdkBerNpwpIsInitialized = false;

    private Double tbpphPajakSetahunUtkKaryBerNpwp;

    private boolean tbpphPajakSetahunUtkKaryBerNpwpIsModified = false;
    private boolean tbpphPajakSetahunUtkKaryBerNpwpIsInitialized = false;

    private Double tbpphPendapatanKenaPajak;

    private boolean tbpphPendapatanKenaPajakIsModified = false;
    private boolean tbpphPendapatanKenaPajakIsInitialized = false;

    private Double tbpphPendapatanDisetahunkan;

    private boolean tbpphPendapatanDisetahunkanIsModified = false;
    private boolean tbpphPendapatanDisetahunkanIsInitialized = false;

    private Double tbpphFaktorPengaliUtkDisetahunkan;

    private boolean tbpphFaktorPengaliUtkDisetahunkanIsModified = false;
    private boolean tbpphFaktorPengaliUtkDisetahunkanIsInitialized = false;

    private Double tbpphPajakDisetorYtdSmpBlnLalu;

    private boolean tbpphPajakDisetorYtdSmpBlnLaluIsModified = false;
    private boolean tbpphPajakDisetorYtdSmpBlnLaluIsInitialized = false;

    private Double tbpphPendYtdSblmPajakSmpBlnLalu;

    private boolean tbpphPendYtdSblmPajakSmpBlnLaluIsModified = false;
    private boolean tbpphPendYtdSblmPajakSmpBlnLaluIsInitialized = false;

    private Double tbpphPendSblnSblmPajak;

    private boolean tbpphPendSblnSblmPajakIsModified = false;
    private boolean tbpphPendSblnSblmPajakIsInitialized = false;

    private Double tbpphBiayaJabatan;

    private boolean tbpphBiayaJabatanIsModified = false;
    private boolean tbpphBiayaJabatanIsInitialized = false;

    private Double tbpphIuranJhtJamsostek;

    private boolean tbpphIuranJhtJamsostekIsModified = false;
    private boolean tbpphIuranJhtJamsostekIsInitialized = false;

    private Double tbpphTotalGross;

    private boolean tbpphTotalGrossIsModified = false;
    private boolean tbpphTotalGrossIsInitialized = false;

    private Double tbpphTunjanganJamsostekJkkjkm;

    private boolean tbpphTunjanganJamsostekJkkjkmIsModified = false;
    private boolean tbpphTunjanganJamsostekJkkjkmIsInitialized = false;

    private Double tbpphTunjanganTetap;

    private boolean tbpphTunjanganTetapIsModified = false;
    private boolean tbpphTunjanganTetapIsInitialized = false;

    private Double tbpphGajiPokokGross;

    private boolean tbpphGajiPokokGrossIsModified = false;
    private boolean tbpphGajiPokokGrossIsInitialized = false;

    private Integer tbpphNpwpAwalTahun;

    private boolean tbpphNpwpAwalTahunIsModified = false;
    private boolean tbpphNpwpAwalTahunIsInitialized = false;

    private Double tbpphJkkjkm;

    private boolean tbpphJkkjkmIsModified = false;
    private boolean tbpphJkkjkmIsInitialized = false;

    private Double tbpphSalary;

    private boolean tbpphSalaryIsModified = false;
    private boolean tbpphSalaryIsInitialized = false;

    private Double tbpphPtkp;

    private boolean tbpphPtkpIsModified = false;
    private boolean tbpphPtkpIsInitialized = false;

    private java.sql.Timestamp tbpphDate;

    private boolean tbpphDateIsModified = false;
    private boolean tbpphDateIsInitialized = false;

    private Integer tbpphId;

    private boolean tbpphIdIsModified = false;
    private boolean tbpphIdIsInitialized = false;

    private Double tbptkpJumlah;

    private boolean tbptkpJumlahIsModified = false;
    private boolean tbptkpJumlahIsInitialized = false;

    private String tbptkpStatus;

    private boolean tbptkpStatusIsModified = false;
    private boolean tbptkpStatusIsInitialized = false;

    private String tbeName;

    private boolean tbeNameIsModified = false;
    private boolean tbeNameIsInitialized = false;

    private String tbeEmployeeId;

    private boolean tbeEmployeeIdIsModified = false;
    private boolean tbeEmployeeIdIsInitialized = false;

    private Integer tbeId;

    private boolean tbeIdIsModified = false;
    private boolean tbeIdIsInitialized = false;

    private boolean _isNew = true;

    /**
     * Prefered methods to create a ViewReportEmployeePphBean is via the createViewReportEmployeePphBean method in ViewReportEmployeePphManager or
     * via the factory class ViewReportEmployeePphFactory create method
     */
    protected ViewReportEmployeePphBean()
    {
    }

    /**
     * Getter method for tbjtName.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbjt_name</li>
     * <li>column size: 45</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbjtName
     */
    public String getTbjtName()
    {
        return tbjtName;
    }

    /**
     * Setter method for tbjtName.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbjtName
     */
    public void setTbjtName(String newVal)
    {
        if ((newVal != null && tbjtName != null && (newVal.compareTo(tbjtName) == 0)) ||
            (newVal == null && tbjtName == null && tbjtNameIsInitialized)) {
            return;
        }
        tbjtName = newVal;
        tbjtNameIsModified = true;
        tbjtNameIsInitialized = true;
    }

    /**
     * Determines if the tbjtName has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbjtNameModified()
    {
        return tbjtNameIsModified;
    }

    /**
     * Determines if the tbjtName has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbjtNameInitialized()
    {
        return tbjtNameIsInitialized;
    }

    /**
     * Getter method for tbjtId.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbjt_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbjtId
     */
    public Integer getTbjtId()
    {
        return tbjtId;
    }

    /**
     * Setter method for tbjtId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbjtId
     */
    public void setTbjtId(Integer newVal)
    {
        if ((newVal != null && tbjtId != null && (newVal.compareTo(tbjtId) == 0)) ||
            (newVal == null && tbjtId == null && tbjtIdIsInitialized)) {
            return;
        }
        tbjtId = newVal;
        tbjtIdIsModified = true;
        tbjtIdIsInitialized = true;
    }

    /**
     * Setter method for tbjtId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbjtId
     */
    public void setTbjtId(int newVal)
    {
        setTbjtId(new Integer(newVal));
    }

    /**
     * Determines if the tbjtId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbjtIdModified()
    {
        return tbjtIdIsModified;
    }

    /**
     * Determines if the tbjtId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbjtIdInitialized()
    {
        return tbjtIdIsInitialized;
    }

    /**
     * Getter method for tboNama.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbo_nama</li>
     * <li>column size: 45</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tboNama
     */
    public String getTboNama()
    {
        return tboNama;
    }

    /**
     * Setter method for tboNama.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tboNama
     */
    public void setTboNama(String newVal)
    {
        if ((newVal != null && tboNama != null && (newVal.compareTo(tboNama) == 0)) ||
            (newVal == null && tboNama == null && tboNamaIsInitialized)) {
            return;
        }
        tboNama = newVal;
        tboNamaIsModified = true;
        tboNamaIsInitialized = true;
    }

    /**
     * Determines if the tboNama has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTboNamaModified()
    {
        return tboNamaIsModified;
    }

    /**
     * Determines if the tboNama has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTboNamaInitialized()
    {
        return tboNamaIsInitialized;
    }

    /**
     * Getter method for tboId.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbo_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tboId
     */
    public Integer getTboId()
    {
        return tboId;
    }

    /**
     * Setter method for tboId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tboId
     */
    public void setTboId(Integer newVal)
    {
        if ((newVal != null && tboId != null && (newVal.compareTo(tboId) == 0)) ||
            (newVal == null && tboId == null && tboIdIsInitialized)) {
            return;
        }
        tboId = newVal;
        tboIdIsModified = true;
        tboIdIsInitialized = true;
    }

    /**
     * Setter method for tboId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tboId
     */
    public void setTboId(int newVal)
    {
        setTboId(new Integer(newVal));
    }

    /**
     * Determines if the tboId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTboIdModified()
    {
        return tboIdIsModified;
    }

    /**
     * Determines if the tboId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTboIdInitialized()
    {
        return tboIdIsInitialized;
    }

    /**
     * Getter method for tbpphDummy.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_dummy</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbpphDummy
     */
    public Integer getTbpphDummy()
    {
        return tbpphDummy;
    }

    /**
     * Setter method for tbpphDummy.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphDummy
     */
    public void setTbpphDummy(Integer newVal)
    {
        if ((newVal != null && tbpphDummy != null && (newVal.compareTo(tbpphDummy) == 0)) ||
            (newVal == null && tbpphDummy == null && tbpphDummyIsInitialized)) {
            return;
        }
        tbpphDummy = newVal;
        tbpphDummyIsModified = true;
        tbpphDummyIsInitialized = true;
    }

    /**
     * Setter method for tbpphDummy.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpphDummy
     */
    public void setTbpphDummy(int newVal)
    {
        setTbpphDummy(new Integer(newVal));
    }

    /**
     * Determines if the tbpphDummy has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphDummyModified()
    {
        return tbpphDummyIsModified;
    }

    /**
     * Determines if the tbpphDummy has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphDummyInitialized()
    {
        return tbpphDummyIsInitialized;
    }

    /**
     * Getter method for tbpphPeriode.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_periode</li>
     * <li>column size: 45</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbpphPeriode
     */
    public String getTbpphPeriode()
    {
        return tbpphPeriode;
    }

    /**
     * Setter method for tbpphPeriode.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphPeriode
     */
    public void setTbpphPeriode(String newVal)
    {
        if ((newVal != null && tbpphPeriode != null && (newVal.compareTo(tbpphPeriode) == 0)) ||
            (newVal == null && tbpphPeriode == null && tbpphPeriodeIsInitialized)) {
            return;
        }
        tbpphPeriode = newVal;
        tbpphPeriodeIsModified = true;
        tbpphPeriodeIsInitialized = true;
    }

    /**
     * Determines if the tbpphPeriode has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphPeriodeModified()
    {
        return tbpphPeriodeIsModified;
    }

    /**
     * Determines if the tbpphPeriode has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphPeriodeInitialized()
    {
        return tbpphPeriodeIsInitialized;
    }

    /**
     * Getter method for tbpphTotalTakeHomePayKurs.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_total_take_home_pay_kurs</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbpphTotalTakeHomePayKurs
     */
    public Double getTbpphTotalTakeHomePayKurs()
    {
        return tbpphTotalTakeHomePayKurs;
    }

    /**
     * Setter method for tbpphTotalTakeHomePayKurs.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphTotalTakeHomePayKurs
     */
    public void setTbpphTotalTakeHomePayKurs(Double newVal)
    {
        if ((newVal != null && tbpphTotalTakeHomePayKurs != null && (newVal.compareTo(tbpphTotalTakeHomePayKurs) == 0)) ||
            (newVal == null && tbpphTotalTakeHomePayKurs == null && tbpphTotalTakeHomePayKursIsInitialized)) {
            return;
        }
        tbpphTotalTakeHomePayKurs = newVal;
        tbpphTotalTakeHomePayKursIsModified = true;
        tbpphTotalTakeHomePayKursIsInitialized = true;
    }

    /**
     * Setter method for tbpphTotalTakeHomePayKurs.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpphTotalTakeHomePayKurs
     */
    public void setTbpphTotalTakeHomePayKurs(double newVal)
    {
        setTbpphTotalTakeHomePayKurs(new Double(newVal));
    }

    /**
     * Determines if the tbpphTotalTakeHomePayKurs has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphTotalTakeHomePayKursModified()
    {
        return tbpphTotalTakeHomePayKursIsModified;
    }

    /**
     * Determines if the tbpphTotalTakeHomePayKurs has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphTotalTakeHomePayKursInitialized()
    {
        return tbpphTotalTakeHomePayKursIsInitialized;
    }

    /**
     * Getter method for tbcId.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbc_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbcId
     */
    public Integer getTbcId()
    {
        return tbcId;
    }

    /**
     * Setter method for tbcId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbcId
     */
    public void setTbcId(Integer newVal)
    {
        if ((newVal != null && tbcId != null && (newVal.compareTo(tbcId) == 0)) ||
            (newVal == null && tbcId == null && tbcIdIsInitialized)) {
            return;
        }
        tbcId = newVal;
        tbcIdIsModified = true;
        tbcIdIsInitialized = true;
    }

    /**
     * Setter method for tbcId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbcId
     */
    public void setTbcId(int newVal)
    {
        setTbcId(new Integer(newVal));
    }

    /**
     * Determines if the tbcId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbcIdModified()
    {
        return tbcIdIsModified;
    }

    /**
     * Determines if the tbcId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbcIdInitialized()
    {
        return tbcIdIsInitialized;
    }

    /**
     * Getter method for tbpphTotalTakeHomePay.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_total_take_home_pay</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbpphTotalTakeHomePay
     */
    public Double getTbpphTotalTakeHomePay()
    {
        return tbpphTotalTakeHomePay;
    }

    /**
     * Setter method for tbpphTotalTakeHomePay.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphTotalTakeHomePay
     */
    public void setTbpphTotalTakeHomePay(Double newVal)
    {
        if ((newVal != null && tbpphTotalTakeHomePay != null && (newVal.compareTo(tbpphTotalTakeHomePay) == 0)) ||
            (newVal == null && tbpphTotalTakeHomePay == null && tbpphTotalTakeHomePayIsInitialized)) {
            return;
        }
        tbpphTotalTakeHomePay = newVal;
        tbpphTotalTakeHomePayIsModified = true;
        tbpphTotalTakeHomePayIsInitialized = true;
    }

    /**
     * Setter method for tbpphTotalTakeHomePay.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpphTotalTakeHomePay
     */
    public void setTbpphTotalTakeHomePay(double newVal)
    {
        setTbpphTotalTakeHomePay(new Double(newVal));
    }

    /**
     * Determines if the tbpphTotalTakeHomePay has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphTotalTakeHomePayModified()
    {
        return tbpphTotalTakeHomePayIsModified;
    }

    /**
     * Determines if the tbpphTotalTakeHomePay has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphTotalTakeHomePayInitialized()
    {
        return tbpphTotalTakeHomePayIsInitialized;
    }

    /**
     * Getter method for tbpphLoan.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_loan</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbpphLoan
     */
    public Double getTbpphLoan()
    {
        return tbpphLoan;
    }

    /**
     * Setter method for tbpphLoan.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphLoan
     */
    public void setTbpphLoan(Double newVal)
    {
        if ((newVal != null && tbpphLoan != null && (newVal.compareTo(tbpphLoan) == 0)) ||
            (newVal == null && tbpphLoan == null && tbpphLoanIsInitialized)) {
            return;
        }
        tbpphLoan = newVal;
        tbpphLoanIsModified = true;
        tbpphLoanIsInitialized = true;
    }

    /**
     * Setter method for tbpphLoan.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpphLoan
     */
    public void setTbpphLoan(double newVal)
    {
        setTbpphLoan(new Double(newVal));
    }

    /**
     * Determines if the tbpphLoan has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphLoanModified()
    {
        return tbpphLoanIsModified;
    }

    /**
     * Determines if the tbpphLoan has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphLoanInitialized()
    {
        return tbpphLoanIsInitialized;
    }

    /**
     * Getter method for tbpphTakeHomePayUtkPendIrreguler.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_take_home_pay_utk_pend_irreguler</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbpphTakeHomePayUtkPendIrreguler
     */
    public Double getTbpphTakeHomePayUtkPendIrreguler()
    {
        return tbpphTakeHomePayUtkPendIrreguler;
    }

    /**
     * Setter method for tbpphTakeHomePayUtkPendIrreguler.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphTakeHomePayUtkPendIrreguler
     */
    public void setTbpphTakeHomePayUtkPendIrreguler(Double newVal)
    {
        if ((newVal != null && tbpphTakeHomePayUtkPendIrreguler != null && (newVal.compareTo(tbpphTakeHomePayUtkPendIrreguler) == 0)) ||
            (newVal == null && tbpphTakeHomePayUtkPendIrreguler == null && tbpphTakeHomePayUtkPendIrregulerIsInitialized)) {
            return;
        }
        tbpphTakeHomePayUtkPendIrreguler = newVal;
        tbpphTakeHomePayUtkPendIrregulerIsModified = true;
        tbpphTakeHomePayUtkPendIrregulerIsInitialized = true;
    }

    /**
     * Setter method for tbpphTakeHomePayUtkPendIrreguler.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpphTakeHomePayUtkPendIrreguler
     */
    public void setTbpphTakeHomePayUtkPendIrreguler(double newVal)
    {
        setTbpphTakeHomePayUtkPendIrreguler(new Double(newVal));
    }

    /**
     * Determines if the tbpphTakeHomePayUtkPendIrreguler has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphTakeHomePayUtkPendIrregulerModified()
    {
        return tbpphTakeHomePayUtkPendIrregulerIsModified;
    }

    /**
     * Determines if the tbpphTakeHomePayUtkPendIrreguler has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphTakeHomePayUtkPendIrregulerInitialized()
    {
        return tbpphTakeHomePayUtkPendIrregulerIsInitialized;
    }

    /**
     * Getter method for tbpphPajakKomisi.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_pajak_komisi</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbpphPajakKomisi
     */
    public Double getTbpphPajakKomisi()
    {
        return tbpphPajakKomisi;
    }

    /**
     * Setter method for tbpphPajakKomisi.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphPajakKomisi
     */
    public void setTbpphPajakKomisi(Double newVal)
    {
        if ((newVal != null && tbpphPajakKomisi != null && (newVal.compareTo(tbpphPajakKomisi) == 0)) ||
            (newVal == null && tbpphPajakKomisi == null && tbpphPajakKomisiIsInitialized)) {
            return;
        }
        tbpphPajakKomisi = newVal;
        tbpphPajakKomisiIsModified = true;
        tbpphPajakKomisiIsInitialized = true;
    }

    /**
     * Setter method for tbpphPajakKomisi.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpphPajakKomisi
     */
    public void setTbpphPajakKomisi(double newVal)
    {
        setTbpphPajakKomisi(new Double(newVal));
    }

    /**
     * Determines if the tbpphPajakKomisi has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphPajakKomisiModified()
    {
        return tbpphPajakKomisiIsModified;
    }

    /**
     * Determines if the tbpphPajakKomisi has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphPajakKomisiInitialized()
    {
        return tbpphPajakKomisiIsInitialized;
    }

    /**
     * Getter method for tbpphPajakTotSethnUtkKaryTdkBerNpwp.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_pajak_tot_sethn_utk_kary_tdk_ber_npwp</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbpphPajakTotSethnUtkKaryTdkBerNpwp
     */
    public Double getTbpphPajakTotSethnUtkKaryTdkBerNpwp()
    {
        return tbpphPajakTotSethnUtkKaryTdkBerNpwp;
    }

    /**
     * Setter method for tbpphPajakTotSethnUtkKaryTdkBerNpwp.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphPajakTotSethnUtkKaryTdkBerNpwp
     */
    public void setTbpphPajakTotSethnUtkKaryTdkBerNpwp(Double newVal)
    {
        if ((newVal != null && tbpphPajakTotSethnUtkKaryTdkBerNpwp != null && (newVal.compareTo(tbpphPajakTotSethnUtkKaryTdkBerNpwp) == 0)) ||
            (newVal == null && tbpphPajakTotSethnUtkKaryTdkBerNpwp == null && tbpphPajakTotSethnUtkKaryTdkBerNpwpIsInitialized)) {
            return;
        }
        tbpphPajakTotSethnUtkKaryTdkBerNpwp = newVal;
        tbpphPajakTotSethnUtkKaryTdkBerNpwpIsModified = true;
        tbpphPajakTotSethnUtkKaryTdkBerNpwpIsInitialized = true;
    }

    /**
     * Setter method for tbpphPajakTotSethnUtkKaryTdkBerNpwp.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpphPajakTotSethnUtkKaryTdkBerNpwp
     */
    public void setTbpphPajakTotSethnUtkKaryTdkBerNpwp(double newVal)
    {
        setTbpphPajakTotSethnUtkKaryTdkBerNpwp(new Double(newVal));
    }

    /**
     * Determines if the tbpphPajakTotSethnUtkKaryTdkBerNpwp has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphPajakTotSethnUtkKaryTdkBerNpwpModified()
    {
        return tbpphPajakTotSethnUtkKaryTdkBerNpwpIsModified;
    }

    /**
     * Determines if the tbpphPajakTotSethnUtkKaryTdkBerNpwp has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphPajakTotSethnUtkKaryTdkBerNpwpInitialized()
    {
        return tbpphPajakTotSethnUtkKaryTdkBerNpwpIsInitialized;
    }

    /**
     * Getter method for tbpphPajakTotSethnUtkKaryBerNpwp.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_pajak_tot_sethn_utk_kary_ber_npwp</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbpphPajakTotSethnUtkKaryBerNpwp
     */
    public Double getTbpphPajakTotSethnUtkKaryBerNpwp()
    {
        return tbpphPajakTotSethnUtkKaryBerNpwp;
    }

    /**
     * Setter method for tbpphPajakTotSethnUtkKaryBerNpwp.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphPajakTotSethnUtkKaryBerNpwp
     */
    public void setTbpphPajakTotSethnUtkKaryBerNpwp(Double newVal)
    {
        if ((newVal != null && tbpphPajakTotSethnUtkKaryBerNpwp != null && (newVal.compareTo(tbpphPajakTotSethnUtkKaryBerNpwp) == 0)) ||
            (newVal == null && tbpphPajakTotSethnUtkKaryBerNpwp == null && tbpphPajakTotSethnUtkKaryBerNpwpIsInitialized)) {
            return;
        }
        tbpphPajakTotSethnUtkKaryBerNpwp = newVal;
        tbpphPajakTotSethnUtkKaryBerNpwpIsModified = true;
        tbpphPajakTotSethnUtkKaryBerNpwpIsInitialized = true;
    }

    /**
     * Setter method for tbpphPajakTotSethnUtkKaryBerNpwp.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpphPajakTotSethnUtkKaryBerNpwp
     */
    public void setTbpphPajakTotSethnUtkKaryBerNpwp(double newVal)
    {
        setTbpphPajakTotSethnUtkKaryBerNpwp(new Double(newVal));
    }

    /**
     * Determines if the tbpphPajakTotSethnUtkKaryBerNpwp has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphPajakTotSethnUtkKaryBerNpwpModified()
    {
        return tbpphPajakTotSethnUtkKaryBerNpwpIsModified;
    }

    /**
     * Determines if the tbpphPajakTotSethnUtkKaryBerNpwp has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphPajakTotSethnUtkKaryBerNpwpInitialized()
    {
        return tbpphPajakTotSethnUtkKaryBerNpwpIsInitialized;
    }

    /**
     * Getter method for tbpphPendDisetahunkanPlusKomisi.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_pend_disetahunkan_plus_komisi</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbpphPendDisetahunkanPlusKomisi
     */
    public Double getTbpphPendDisetahunkanPlusKomisi()
    {
        return tbpphPendDisetahunkanPlusKomisi;
    }

    /**
     * Setter method for tbpphPendDisetahunkanPlusKomisi.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphPendDisetahunkanPlusKomisi
     */
    public void setTbpphPendDisetahunkanPlusKomisi(Double newVal)
    {
        if ((newVal != null && tbpphPendDisetahunkanPlusKomisi != null && (newVal.compareTo(tbpphPendDisetahunkanPlusKomisi) == 0)) ||
            (newVal == null && tbpphPendDisetahunkanPlusKomisi == null && tbpphPendDisetahunkanPlusKomisiIsInitialized)) {
            return;
        }
        tbpphPendDisetahunkanPlusKomisi = newVal;
        tbpphPendDisetahunkanPlusKomisiIsModified = true;
        tbpphPendDisetahunkanPlusKomisiIsInitialized = true;
    }

    /**
     * Setter method for tbpphPendDisetahunkanPlusKomisi.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpphPendDisetahunkanPlusKomisi
     */
    public void setTbpphPendDisetahunkanPlusKomisi(double newVal)
    {
        setTbpphPendDisetahunkanPlusKomisi(new Double(newVal));
    }

    /**
     * Determines if the tbpphPendDisetahunkanPlusKomisi has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphPendDisetahunkanPlusKomisiModified()
    {
        return tbpphPendDisetahunkanPlusKomisiIsModified;
    }

    /**
     * Determines if the tbpphPendDisetahunkanPlusKomisi has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphPendDisetahunkanPlusKomisiInitialized()
    {
        return tbpphPendDisetahunkanPlusKomisiIsInitialized;
    }

    /**
     * Getter method for tbpphPajakSdhDisetorUtkPendTdkTtpYtd.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_pajak_sdh_disetor_utk_pend_tdk_ttp_ytd</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbpphPajakSdhDisetorUtkPendTdkTtpYtd
     */
    public Double getTbpphPajakSdhDisetorUtkPendTdkTtpYtd()
    {
        return tbpphPajakSdhDisetorUtkPendTdkTtpYtd;
    }

    /**
     * Setter method for tbpphPajakSdhDisetorUtkPendTdkTtpYtd.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphPajakSdhDisetorUtkPendTdkTtpYtd
     */
    public void setTbpphPajakSdhDisetorUtkPendTdkTtpYtd(Double newVal)
    {
        if ((newVal != null && tbpphPajakSdhDisetorUtkPendTdkTtpYtd != null && (newVal.compareTo(tbpphPajakSdhDisetorUtkPendTdkTtpYtd) == 0)) ||
            (newVal == null && tbpphPajakSdhDisetorUtkPendTdkTtpYtd == null && tbpphPajakSdhDisetorUtkPendTdkTtpYtdIsInitialized)) {
            return;
        }
        tbpphPajakSdhDisetorUtkPendTdkTtpYtd = newVal;
        tbpphPajakSdhDisetorUtkPendTdkTtpYtdIsModified = true;
        tbpphPajakSdhDisetorUtkPendTdkTtpYtdIsInitialized = true;
    }

    /**
     * Setter method for tbpphPajakSdhDisetorUtkPendTdkTtpYtd.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpphPajakSdhDisetorUtkPendTdkTtpYtd
     */
    public void setTbpphPajakSdhDisetorUtkPendTdkTtpYtd(double newVal)
    {
        setTbpphPajakSdhDisetorUtkPendTdkTtpYtd(new Double(newVal));
    }

    /**
     * Determines if the tbpphPajakSdhDisetorUtkPendTdkTtpYtd has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphPajakSdhDisetorUtkPendTdkTtpYtdModified()
    {
        return tbpphPajakSdhDisetorUtkPendTdkTtpYtdIsModified;
    }

    /**
     * Determines if the tbpphPajakSdhDisetorUtkPendTdkTtpYtd has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphPajakSdhDisetorUtkPendTdkTtpYtdInitialized()
    {
        return tbpphPajakSdhDisetorUtkPendTdkTtpYtdIsInitialized;
    }

    /**
     * Getter method for tbpphPendapatanTidakTetapYtd.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_pendapatan_tidak_tetap_ytd</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbpphPendapatanTidakTetapYtd
     */
    public Double getTbpphPendapatanTidakTetapYtd()
    {
        return tbpphPendapatanTidakTetapYtd;
    }

    /**
     * Setter method for tbpphPendapatanTidakTetapYtd.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphPendapatanTidakTetapYtd
     */
    public void setTbpphPendapatanTidakTetapYtd(Double newVal)
    {
        if ((newVal != null && tbpphPendapatanTidakTetapYtd != null && (newVal.compareTo(tbpphPendapatanTidakTetapYtd) == 0)) ||
            (newVal == null && tbpphPendapatanTidakTetapYtd == null && tbpphPendapatanTidakTetapYtdIsInitialized)) {
            return;
        }
        tbpphPendapatanTidakTetapYtd = newVal;
        tbpphPendapatanTidakTetapYtdIsModified = true;
        tbpphPendapatanTidakTetapYtdIsInitialized = true;
    }

    /**
     * Setter method for tbpphPendapatanTidakTetapYtd.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpphPendapatanTidakTetapYtd
     */
    public void setTbpphPendapatanTidakTetapYtd(double newVal)
    {
        setTbpphPendapatanTidakTetapYtd(new Double(newVal));
    }

    /**
     * Determines if the tbpphPendapatanTidakTetapYtd has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphPendapatanTidakTetapYtdModified()
    {
        return tbpphPendapatanTidakTetapYtdIsModified;
    }

    /**
     * Determines if the tbpphPendapatanTidakTetapYtd has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphPendapatanTidakTetapYtdInitialized()
    {
        return tbpphPendapatanTidakTetapYtdIsInitialized;
    }

    /**
     * Getter method for tbpphPendapatanTidakTetap.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_pendapatan_tidak_tetap</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbpphPendapatanTidakTetap
     */
    public Double getTbpphPendapatanTidakTetap()
    {
        return tbpphPendapatanTidakTetap;
    }

    /**
     * Setter method for tbpphPendapatanTidakTetap.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphPendapatanTidakTetap
     */
    public void setTbpphPendapatanTidakTetap(Double newVal)
    {
        if ((newVal != null && tbpphPendapatanTidakTetap != null && (newVal.compareTo(tbpphPendapatanTidakTetap) == 0)) ||
            (newVal == null && tbpphPendapatanTidakTetap == null && tbpphPendapatanTidakTetapIsInitialized)) {
            return;
        }
        tbpphPendapatanTidakTetap = newVal;
        tbpphPendapatanTidakTetapIsModified = true;
        tbpphPendapatanTidakTetapIsInitialized = true;
    }

    /**
     * Setter method for tbpphPendapatanTidakTetap.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpphPendapatanTidakTetap
     */
    public void setTbpphPendapatanTidakTetap(double newVal)
    {
        setTbpphPendapatanTidakTetap(new Double(newVal));
    }

    /**
     * Determines if the tbpphPendapatanTidakTetap has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphPendapatanTidakTetapModified()
    {
        return tbpphPendapatanTidakTetapIsModified;
    }

    /**
     * Determines if the tbpphPendapatanTidakTetap has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphPendapatanTidakTetapInitialized()
    {
        return tbpphPendapatanTidakTetapIsInitialized;
    }

    /**
     * Getter method for tbpphTakeHomePay.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_take_home_pay</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbpphTakeHomePay
     */
    public Double getTbpphTakeHomePay()
    {
        return tbpphTakeHomePay;
    }

    /**
     * Setter method for tbpphTakeHomePay.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphTakeHomePay
     */
    public void setTbpphTakeHomePay(Double newVal)
    {
        if ((newVal != null && tbpphTakeHomePay != null && (newVal.compareTo(tbpphTakeHomePay) == 0)) ||
            (newVal == null && tbpphTakeHomePay == null && tbpphTakeHomePayIsInitialized)) {
            return;
        }
        tbpphTakeHomePay = newVal;
        tbpphTakeHomePayIsModified = true;
        tbpphTakeHomePayIsInitialized = true;
    }

    /**
     * Setter method for tbpphTakeHomePay.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpphTakeHomePay
     */
    public void setTbpphTakeHomePay(double newVal)
    {
        setTbpphTakeHomePay(new Double(newVal));
    }

    /**
     * Determines if the tbpphTakeHomePay has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphTakeHomePayModified()
    {
        return tbpphTakeHomePayIsModified;
    }

    /**
     * Determines if the tbpphTakeHomePay has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphTakeHomePayInitialized()
    {
        return tbpphTakeHomePayIsInitialized;
    }

    /**
     * Getter method for tbpphPajakBlnIni.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_pajak_bln_ini</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbpphPajakBlnIni
     */
    public Double getTbpphPajakBlnIni()
    {
        return tbpphPajakBlnIni;
    }

    /**
     * Setter method for tbpphPajakBlnIni.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphPajakBlnIni
     */
    public void setTbpphPajakBlnIni(Double newVal)
    {
        if ((newVal != null && tbpphPajakBlnIni != null && (newVal.compareTo(tbpphPajakBlnIni) == 0)) ||
            (newVal == null && tbpphPajakBlnIni == null && tbpphPajakBlnIniIsInitialized)) {
            return;
        }
        tbpphPajakBlnIni = newVal;
        tbpphPajakBlnIniIsModified = true;
        tbpphPajakBlnIniIsInitialized = true;
    }

    /**
     * Setter method for tbpphPajakBlnIni.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpphPajakBlnIni
     */
    public void setTbpphPajakBlnIni(double newVal)
    {
        setTbpphPajakBlnIni(new Double(newVal));
    }

    /**
     * Determines if the tbpphPajakBlnIni has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphPajakBlnIniModified()
    {
        return tbpphPajakBlnIniIsModified;
    }

    /**
     * Determines if the tbpphPajakBlnIni has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphPajakBlnIniInitialized()
    {
        return tbpphPajakBlnIniIsInitialized;
    }

    /**
     * Getter method for tbpphPajakTerutangSmpBlnIni.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_pajak_terutang_smp_bln_ini</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbpphPajakTerutangSmpBlnIni
     */
    public Double getTbpphPajakTerutangSmpBlnIni()
    {
        return tbpphPajakTerutangSmpBlnIni;
    }

    /**
     * Setter method for tbpphPajakTerutangSmpBlnIni.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphPajakTerutangSmpBlnIni
     */
    public void setTbpphPajakTerutangSmpBlnIni(Double newVal)
    {
        if ((newVal != null && tbpphPajakTerutangSmpBlnIni != null && (newVal.compareTo(tbpphPajakTerutangSmpBlnIni) == 0)) ||
            (newVal == null && tbpphPajakTerutangSmpBlnIni == null && tbpphPajakTerutangSmpBlnIniIsInitialized)) {
            return;
        }
        tbpphPajakTerutangSmpBlnIni = newVal;
        tbpphPajakTerutangSmpBlnIniIsModified = true;
        tbpphPajakTerutangSmpBlnIniIsInitialized = true;
    }

    /**
     * Setter method for tbpphPajakTerutangSmpBlnIni.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpphPajakTerutangSmpBlnIni
     */
    public void setTbpphPajakTerutangSmpBlnIni(double newVal)
    {
        setTbpphPajakTerutangSmpBlnIni(new Double(newVal));
    }

    /**
     * Determines if the tbpphPajakTerutangSmpBlnIni has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphPajakTerutangSmpBlnIniModified()
    {
        return tbpphPajakTerutangSmpBlnIniIsModified;
    }

    /**
     * Determines if the tbpphPajakTerutangSmpBlnIni has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphPajakTerutangSmpBlnIniInitialized()
    {
        return tbpphPajakTerutangSmpBlnIniIsInitialized;
    }

    /**
     * Getter method for tbpphPajakSetahunUtkKaryTdkBerNpwp.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_pajak_setahun_utk_kary_tdk_ber_npwp</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbpphPajakSetahunUtkKaryTdkBerNpwp
     */
    public Double getTbpphPajakSetahunUtkKaryTdkBerNpwp()
    {
        return tbpphPajakSetahunUtkKaryTdkBerNpwp;
    }

    /**
     * Setter method for tbpphPajakSetahunUtkKaryTdkBerNpwp.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphPajakSetahunUtkKaryTdkBerNpwp
     */
    public void setTbpphPajakSetahunUtkKaryTdkBerNpwp(Double newVal)
    {
        if ((newVal != null && tbpphPajakSetahunUtkKaryTdkBerNpwp != null && (newVal.compareTo(tbpphPajakSetahunUtkKaryTdkBerNpwp) == 0)) ||
            (newVal == null && tbpphPajakSetahunUtkKaryTdkBerNpwp == null && tbpphPajakSetahunUtkKaryTdkBerNpwpIsInitialized)) {
            return;
        }
        tbpphPajakSetahunUtkKaryTdkBerNpwp = newVal;
        tbpphPajakSetahunUtkKaryTdkBerNpwpIsModified = true;
        tbpphPajakSetahunUtkKaryTdkBerNpwpIsInitialized = true;
    }

    /**
     * Setter method for tbpphPajakSetahunUtkKaryTdkBerNpwp.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpphPajakSetahunUtkKaryTdkBerNpwp
     */
    public void setTbpphPajakSetahunUtkKaryTdkBerNpwp(double newVal)
    {
        setTbpphPajakSetahunUtkKaryTdkBerNpwp(new Double(newVal));
    }

    /**
     * Determines if the tbpphPajakSetahunUtkKaryTdkBerNpwp has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphPajakSetahunUtkKaryTdkBerNpwpModified()
    {
        return tbpphPajakSetahunUtkKaryTdkBerNpwpIsModified;
    }

    /**
     * Determines if the tbpphPajakSetahunUtkKaryTdkBerNpwp has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphPajakSetahunUtkKaryTdkBerNpwpInitialized()
    {
        return tbpphPajakSetahunUtkKaryTdkBerNpwpIsInitialized;
    }

    /**
     * Getter method for tbpphPajakSetahunUtkKaryBerNpwp.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_pajak_setahun_utk_kary_ber_npwp</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbpphPajakSetahunUtkKaryBerNpwp
     */
    public Double getTbpphPajakSetahunUtkKaryBerNpwp()
    {
        return tbpphPajakSetahunUtkKaryBerNpwp;
    }

    /**
     * Setter method for tbpphPajakSetahunUtkKaryBerNpwp.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphPajakSetahunUtkKaryBerNpwp
     */
    public void setTbpphPajakSetahunUtkKaryBerNpwp(Double newVal)
    {
        if ((newVal != null && tbpphPajakSetahunUtkKaryBerNpwp != null && (newVal.compareTo(tbpphPajakSetahunUtkKaryBerNpwp) == 0)) ||
            (newVal == null && tbpphPajakSetahunUtkKaryBerNpwp == null && tbpphPajakSetahunUtkKaryBerNpwpIsInitialized)) {
            return;
        }
        tbpphPajakSetahunUtkKaryBerNpwp = newVal;
        tbpphPajakSetahunUtkKaryBerNpwpIsModified = true;
        tbpphPajakSetahunUtkKaryBerNpwpIsInitialized = true;
    }

    /**
     * Setter method for tbpphPajakSetahunUtkKaryBerNpwp.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpphPajakSetahunUtkKaryBerNpwp
     */
    public void setTbpphPajakSetahunUtkKaryBerNpwp(double newVal)
    {
        setTbpphPajakSetahunUtkKaryBerNpwp(new Double(newVal));
    }

    /**
     * Determines if the tbpphPajakSetahunUtkKaryBerNpwp has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphPajakSetahunUtkKaryBerNpwpModified()
    {
        return tbpphPajakSetahunUtkKaryBerNpwpIsModified;
    }

    /**
     * Determines if the tbpphPajakSetahunUtkKaryBerNpwp has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphPajakSetahunUtkKaryBerNpwpInitialized()
    {
        return tbpphPajakSetahunUtkKaryBerNpwpIsInitialized;
    }

    /**
     * Getter method for tbpphPendapatanKenaPajak.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_pendapatan_kena_pajak</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbpphPendapatanKenaPajak
     */
    public Double getTbpphPendapatanKenaPajak()
    {
        return tbpphPendapatanKenaPajak;
    }

    /**
     * Setter method for tbpphPendapatanKenaPajak.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphPendapatanKenaPajak
     */
    public void setTbpphPendapatanKenaPajak(Double newVal)
    {
        if ((newVal != null && tbpphPendapatanKenaPajak != null && (newVal.compareTo(tbpphPendapatanKenaPajak) == 0)) ||
            (newVal == null && tbpphPendapatanKenaPajak == null && tbpphPendapatanKenaPajakIsInitialized)) {
            return;
        }
        tbpphPendapatanKenaPajak = newVal;
        tbpphPendapatanKenaPajakIsModified = true;
        tbpphPendapatanKenaPajakIsInitialized = true;
    }

    /**
     * Setter method for tbpphPendapatanKenaPajak.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpphPendapatanKenaPajak
     */
    public void setTbpphPendapatanKenaPajak(double newVal)
    {
        setTbpphPendapatanKenaPajak(new Double(newVal));
    }

    /**
     * Determines if the tbpphPendapatanKenaPajak has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphPendapatanKenaPajakModified()
    {
        return tbpphPendapatanKenaPajakIsModified;
    }

    /**
     * Determines if the tbpphPendapatanKenaPajak has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphPendapatanKenaPajakInitialized()
    {
        return tbpphPendapatanKenaPajakIsInitialized;
    }

    /**
     * Getter method for tbpphPendapatanDisetahunkan.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_pendapatan_disetahunkan</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbpphPendapatanDisetahunkan
     */
    public Double getTbpphPendapatanDisetahunkan()
    {
        return tbpphPendapatanDisetahunkan;
    }

    /**
     * Setter method for tbpphPendapatanDisetahunkan.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphPendapatanDisetahunkan
     */
    public void setTbpphPendapatanDisetahunkan(Double newVal)
    {
        if ((newVal != null && tbpphPendapatanDisetahunkan != null && (newVal.compareTo(tbpphPendapatanDisetahunkan) == 0)) ||
            (newVal == null && tbpphPendapatanDisetahunkan == null && tbpphPendapatanDisetahunkanIsInitialized)) {
            return;
        }
        tbpphPendapatanDisetahunkan = newVal;
        tbpphPendapatanDisetahunkanIsModified = true;
        tbpphPendapatanDisetahunkanIsInitialized = true;
    }

    /**
     * Setter method for tbpphPendapatanDisetahunkan.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpphPendapatanDisetahunkan
     */
    public void setTbpphPendapatanDisetahunkan(double newVal)
    {
        setTbpphPendapatanDisetahunkan(new Double(newVal));
    }

    /**
     * Determines if the tbpphPendapatanDisetahunkan has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphPendapatanDisetahunkanModified()
    {
        return tbpphPendapatanDisetahunkanIsModified;
    }

    /**
     * Determines if the tbpphPendapatanDisetahunkan has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphPendapatanDisetahunkanInitialized()
    {
        return tbpphPendapatanDisetahunkanIsInitialized;
    }

    /**
     * Getter method for tbpphFaktorPengaliUtkDisetahunkan.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_faktor_pengali_utk_disetahunkan</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbpphFaktorPengaliUtkDisetahunkan
     */
    public Double getTbpphFaktorPengaliUtkDisetahunkan()
    {
        return tbpphFaktorPengaliUtkDisetahunkan;
    }

    /**
     * Setter method for tbpphFaktorPengaliUtkDisetahunkan.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphFaktorPengaliUtkDisetahunkan
     */
    public void setTbpphFaktorPengaliUtkDisetahunkan(Double newVal)
    {
        if ((newVal != null && tbpphFaktorPengaliUtkDisetahunkan != null && (newVal.compareTo(tbpphFaktorPengaliUtkDisetahunkan) == 0)) ||
            (newVal == null && tbpphFaktorPengaliUtkDisetahunkan == null && tbpphFaktorPengaliUtkDisetahunkanIsInitialized)) {
            return;
        }
        tbpphFaktorPengaliUtkDisetahunkan = newVal;
        tbpphFaktorPengaliUtkDisetahunkanIsModified = true;
        tbpphFaktorPengaliUtkDisetahunkanIsInitialized = true;
    }

    /**
     * Setter method for tbpphFaktorPengaliUtkDisetahunkan.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpphFaktorPengaliUtkDisetahunkan
     */
    public void setTbpphFaktorPengaliUtkDisetahunkan(double newVal)
    {
        setTbpphFaktorPengaliUtkDisetahunkan(new Double(newVal));
    }

    /**
     * Determines if the tbpphFaktorPengaliUtkDisetahunkan has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphFaktorPengaliUtkDisetahunkanModified()
    {
        return tbpphFaktorPengaliUtkDisetahunkanIsModified;
    }

    /**
     * Determines if the tbpphFaktorPengaliUtkDisetahunkan has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphFaktorPengaliUtkDisetahunkanInitialized()
    {
        return tbpphFaktorPengaliUtkDisetahunkanIsInitialized;
    }

    /**
     * Getter method for tbpphPajakDisetorYtdSmpBlnLalu.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_pajak_disetor_ytd_smp_bln_lalu</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbpphPajakDisetorYtdSmpBlnLalu
     */
    public Double getTbpphPajakDisetorYtdSmpBlnLalu()
    {
        return tbpphPajakDisetorYtdSmpBlnLalu;
    }

    /**
     * Setter method for tbpphPajakDisetorYtdSmpBlnLalu.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphPajakDisetorYtdSmpBlnLalu
     */
    public void setTbpphPajakDisetorYtdSmpBlnLalu(Double newVal)
    {
        if ((newVal != null && tbpphPajakDisetorYtdSmpBlnLalu != null && (newVal.compareTo(tbpphPajakDisetorYtdSmpBlnLalu) == 0)) ||
            (newVal == null && tbpphPajakDisetorYtdSmpBlnLalu == null && tbpphPajakDisetorYtdSmpBlnLaluIsInitialized)) {
            return;
        }
        tbpphPajakDisetorYtdSmpBlnLalu = newVal;
        tbpphPajakDisetorYtdSmpBlnLaluIsModified = true;
        tbpphPajakDisetorYtdSmpBlnLaluIsInitialized = true;
    }

    /**
     * Setter method for tbpphPajakDisetorYtdSmpBlnLalu.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpphPajakDisetorYtdSmpBlnLalu
     */
    public void setTbpphPajakDisetorYtdSmpBlnLalu(double newVal)
    {
        setTbpphPajakDisetorYtdSmpBlnLalu(new Double(newVal));
    }

    /**
     * Determines if the tbpphPajakDisetorYtdSmpBlnLalu has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphPajakDisetorYtdSmpBlnLaluModified()
    {
        return tbpphPajakDisetorYtdSmpBlnLaluIsModified;
    }

    /**
     * Determines if the tbpphPajakDisetorYtdSmpBlnLalu has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphPajakDisetorYtdSmpBlnLaluInitialized()
    {
        return tbpphPajakDisetorYtdSmpBlnLaluIsInitialized;
    }

    /**
     * Getter method for tbpphPendYtdSblmPajakSmpBlnLalu.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_pend_ytd_sblm_pajak_smp_bln_lalu</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbpphPendYtdSblmPajakSmpBlnLalu
     */
    public Double getTbpphPendYtdSblmPajakSmpBlnLalu()
    {
        return tbpphPendYtdSblmPajakSmpBlnLalu;
    }

    /**
     * Setter method for tbpphPendYtdSblmPajakSmpBlnLalu.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphPendYtdSblmPajakSmpBlnLalu
     */
    public void setTbpphPendYtdSblmPajakSmpBlnLalu(Double newVal)
    {
        if ((newVal != null && tbpphPendYtdSblmPajakSmpBlnLalu != null && (newVal.compareTo(tbpphPendYtdSblmPajakSmpBlnLalu) == 0)) ||
            (newVal == null && tbpphPendYtdSblmPajakSmpBlnLalu == null && tbpphPendYtdSblmPajakSmpBlnLaluIsInitialized)) {
            return;
        }
        tbpphPendYtdSblmPajakSmpBlnLalu = newVal;
        tbpphPendYtdSblmPajakSmpBlnLaluIsModified = true;
        tbpphPendYtdSblmPajakSmpBlnLaluIsInitialized = true;
    }

    /**
     * Setter method for tbpphPendYtdSblmPajakSmpBlnLalu.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpphPendYtdSblmPajakSmpBlnLalu
     */
    public void setTbpphPendYtdSblmPajakSmpBlnLalu(double newVal)
    {
        setTbpphPendYtdSblmPajakSmpBlnLalu(new Double(newVal));
    }

    /**
     * Determines if the tbpphPendYtdSblmPajakSmpBlnLalu has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphPendYtdSblmPajakSmpBlnLaluModified()
    {
        return tbpphPendYtdSblmPajakSmpBlnLaluIsModified;
    }

    /**
     * Determines if the tbpphPendYtdSblmPajakSmpBlnLalu has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphPendYtdSblmPajakSmpBlnLaluInitialized()
    {
        return tbpphPendYtdSblmPajakSmpBlnLaluIsInitialized;
    }

    /**
     * Getter method for tbpphPendSblnSblmPajak.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_pend_sbln_sblm_pajak</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbpphPendSblnSblmPajak
     */
    public Double getTbpphPendSblnSblmPajak()
    {
        return tbpphPendSblnSblmPajak;
    }

    /**
     * Setter method for tbpphPendSblnSblmPajak.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphPendSblnSblmPajak
     */
    public void setTbpphPendSblnSblmPajak(Double newVal)
    {
        if ((newVal != null && tbpphPendSblnSblmPajak != null && (newVal.compareTo(tbpphPendSblnSblmPajak) == 0)) ||
            (newVal == null && tbpphPendSblnSblmPajak == null && tbpphPendSblnSblmPajakIsInitialized)) {
            return;
        }
        tbpphPendSblnSblmPajak = newVal;
        tbpphPendSblnSblmPajakIsModified = true;
        tbpphPendSblnSblmPajakIsInitialized = true;
    }

    /**
     * Setter method for tbpphPendSblnSblmPajak.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpphPendSblnSblmPajak
     */
    public void setTbpphPendSblnSblmPajak(double newVal)
    {
        setTbpphPendSblnSblmPajak(new Double(newVal));
    }

    /**
     * Determines if the tbpphPendSblnSblmPajak has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphPendSblnSblmPajakModified()
    {
        return tbpphPendSblnSblmPajakIsModified;
    }

    /**
     * Determines if the tbpphPendSblnSblmPajak has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphPendSblnSblmPajakInitialized()
    {
        return tbpphPendSblnSblmPajakIsInitialized;
    }

    /**
     * Getter method for tbpphBiayaJabatan.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_biaya_jabatan</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbpphBiayaJabatan
     */
    public Double getTbpphBiayaJabatan()
    {
        return tbpphBiayaJabatan;
    }

    /**
     * Setter method for tbpphBiayaJabatan.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphBiayaJabatan
     */
    public void setTbpphBiayaJabatan(Double newVal)
    {
        if ((newVal != null && tbpphBiayaJabatan != null && (newVal.compareTo(tbpphBiayaJabatan) == 0)) ||
            (newVal == null && tbpphBiayaJabatan == null && tbpphBiayaJabatanIsInitialized)) {
            return;
        }
        tbpphBiayaJabatan = newVal;
        tbpphBiayaJabatanIsModified = true;
        tbpphBiayaJabatanIsInitialized = true;
    }

    /**
     * Setter method for tbpphBiayaJabatan.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpphBiayaJabatan
     */
    public void setTbpphBiayaJabatan(double newVal)
    {
        setTbpphBiayaJabatan(new Double(newVal));
    }

    /**
     * Determines if the tbpphBiayaJabatan has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphBiayaJabatanModified()
    {
        return tbpphBiayaJabatanIsModified;
    }

    /**
     * Determines if the tbpphBiayaJabatan has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphBiayaJabatanInitialized()
    {
        return tbpphBiayaJabatanIsInitialized;
    }

    /**
     * Getter method for tbpphIuranJhtJamsostek.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_iuran_jht_jamsostek</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbpphIuranJhtJamsostek
     */
    public Double getTbpphIuranJhtJamsostek()
    {
        return tbpphIuranJhtJamsostek;
    }

    /**
     * Setter method for tbpphIuranJhtJamsostek.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphIuranJhtJamsostek
     */
    public void setTbpphIuranJhtJamsostek(Double newVal)
    {
        if ((newVal != null && tbpphIuranJhtJamsostek != null && (newVal.compareTo(tbpphIuranJhtJamsostek) == 0)) ||
            (newVal == null && tbpphIuranJhtJamsostek == null && tbpphIuranJhtJamsostekIsInitialized)) {
            return;
        }
        tbpphIuranJhtJamsostek = newVal;
        tbpphIuranJhtJamsostekIsModified = true;
        tbpphIuranJhtJamsostekIsInitialized = true;
    }

    /**
     * Setter method for tbpphIuranJhtJamsostek.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpphIuranJhtJamsostek
     */
    public void setTbpphIuranJhtJamsostek(double newVal)
    {
        setTbpphIuranJhtJamsostek(new Double(newVal));
    }

    /**
     * Determines if the tbpphIuranJhtJamsostek has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphIuranJhtJamsostekModified()
    {
        return tbpphIuranJhtJamsostekIsModified;
    }

    /**
     * Determines if the tbpphIuranJhtJamsostek has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphIuranJhtJamsostekInitialized()
    {
        return tbpphIuranJhtJamsostekIsInitialized;
    }

    /**
     * Getter method for tbpphTotalGross.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_total_gross</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbpphTotalGross
     */
    public Double getTbpphTotalGross()
    {
        return tbpphTotalGross;
    }

    /**
     * Setter method for tbpphTotalGross.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphTotalGross
     */
    public void setTbpphTotalGross(Double newVal)
    {
        if ((newVal != null && tbpphTotalGross != null && (newVal.compareTo(tbpphTotalGross) == 0)) ||
            (newVal == null && tbpphTotalGross == null && tbpphTotalGrossIsInitialized)) {
            return;
        }
        tbpphTotalGross = newVal;
        tbpphTotalGrossIsModified = true;
        tbpphTotalGrossIsInitialized = true;
    }

    /**
     * Setter method for tbpphTotalGross.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpphTotalGross
     */
    public void setTbpphTotalGross(double newVal)
    {
        setTbpphTotalGross(new Double(newVal));
    }

    /**
     * Determines if the tbpphTotalGross has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphTotalGrossModified()
    {
        return tbpphTotalGrossIsModified;
    }

    /**
     * Determines if the tbpphTotalGross has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphTotalGrossInitialized()
    {
        return tbpphTotalGrossIsInitialized;
    }

    /**
     * Getter method for tbpphTunjanganJamsostekJkkjkm.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_tunjangan_jamsostek_jkkjkm</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbpphTunjanganJamsostekJkkjkm
     */
    public Double getTbpphTunjanganJamsostekJkkjkm()
    {
        return tbpphTunjanganJamsostekJkkjkm;
    }

    /**
     * Setter method for tbpphTunjanganJamsostekJkkjkm.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphTunjanganJamsostekJkkjkm
     */
    public void setTbpphTunjanganJamsostekJkkjkm(Double newVal)
    {
        if ((newVal != null && tbpphTunjanganJamsostekJkkjkm != null && (newVal.compareTo(tbpphTunjanganJamsostekJkkjkm) == 0)) ||
            (newVal == null && tbpphTunjanganJamsostekJkkjkm == null && tbpphTunjanganJamsostekJkkjkmIsInitialized)) {
            return;
        }
        tbpphTunjanganJamsostekJkkjkm = newVal;
        tbpphTunjanganJamsostekJkkjkmIsModified = true;
        tbpphTunjanganJamsostekJkkjkmIsInitialized = true;
    }

    /**
     * Setter method for tbpphTunjanganJamsostekJkkjkm.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpphTunjanganJamsostekJkkjkm
     */
    public void setTbpphTunjanganJamsostekJkkjkm(double newVal)
    {
        setTbpphTunjanganJamsostekJkkjkm(new Double(newVal));
    }

    /**
     * Determines if the tbpphTunjanganJamsostekJkkjkm has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphTunjanganJamsostekJkkjkmModified()
    {
        return tbpphTunjanganJamsostekJkkjkmIsModified;
    }

    /**
     * Determines if the tbpphTunjanganJamsostekJkkjkm has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphTunjanganJamsostekJkkjkmInitialized()
    {
        return tbpphTunjanganJamsostekJkkjkmIsInitialized;
    }

    /**
     * Getter method for tbpphTunjanganTetap.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_tunjangan_tetap</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbpphTunjanganTetap
     */
    public Double getTbpphTunjanganTetap()
    {
        return tbpphTunjanganTetap;
    }

    /**
     * Setter method for tbpphTunjanganTetap.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphTunjanganTetap
     */
    public void setTbpphTunjanganTetap(Double newVal)
    {
        if ((newVal != null && tbpphTunjanganTetap != null && (newVal.compareTo(tbpphTunjanganTetap) == 0)) ||
            (newVal == null && tbpphTunjanganTetap == null && tbpphTunjanganTetapIsInitialized)) {
            return;
        }
        tbpphTunjanganTetap = newVal;
        tbpphTunjanganTetapIsModified = true;
        tbpphTunjanganTetapIsInitialized = true;
    }

    /**
     * Setter method for tbpphTunjanganTetap.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpphTunjanganTetap
     */
    public void setTbpphTunjanganTetap(double newVal)
    {
        setTbpphTunjanganTetap(new Double(newVal));
    }

    /**
     * Determines if the tbpphTunjanganTetap has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphTunjanganTetapModified()
    {
        return tbpphTunjanganTetapIsModified;
    }

    /**
     * Determines if the tbpphTunjanganTetap has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphTunjanganTetapInitialized()
    {
        return tbpphTunjanganTetapIsInitialized;
    }

    /**
     * Getter method for tbpphGajiPokokGross.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_gaji_pokok_gross</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbpphGajiPokokGross
     */
    public Double getTbpphGajiPokokGross()
    {
        return tbpphGajiPokokGross;
    }

    /**
     * Setter method for tbpphGajiPokokGross.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphGajiPokokGross
     */
    public void setTbpphGajiPokokGross(Double newVal)
    {
        if ((newVal != null && tbpphGajiPokokGross != null && (newVal.compareTo(tbpphGajiPokokGross) == 0)) ||
            (newVal == null && tbpphGajiPokokGross == null && tbpphGajiPokokGrossIsInitialized)) {
            return;
        }
        tbpphGajiPokokGross = newVal;
        tbpphGajiPokokGrossIsModified = true;
        tbpphGajiPokokGrossIsInitialized = true;
    }

    /**
     * Setter method for tbpphGajiPokokGross.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpphGajiPokokGross
     */
    public void setTbpphGajiPokokGross(double newVal)
    {
        setTbpphGajiPokokGross(new Double(newVal));
    }

    /**
     * Determines if the tbpphGajiPokokGross has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphGajiPokokGrossModified()
    {
        return tbpphGajiPokokGrossIsModified;
    }

    /**
     * Determines if the tbpphGajiPokokGross has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphGajiPokokGrossInitialized()
    {
        return tbpphGajiPokokGrossIsInitialized;
    }

    /**
     * Getter method for tbpphNpwpAwalTahun.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_npwp_awal_tahun</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbpphNpwpAwalTahun
     */
    public Integer getTbpphNpwpAwalTahun()
    {
        return tbpphNpwpAwalTahun;
    }

    /**
     * Setter method for tbpphNpwpAwalTahun.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphNpwpAwalTahun
     */
    public void setTbpphNpwpAwalTahun(Integer newVal)
    {
        if ((newVal != null && tbpphNpwpAwalTahun != null && (newVal.compareTo(tbpphNpwpAwalTahun) == 0)) ||
            (newVal == null && tbpphNpwpAwalTahun == null && tbpphNpwpAwalTahunIsInitialized)) {
            return;
        }
        tbpphNpwpAwalTahun = newVal;
        tbpphNpwpAwalTahunIsModified = true;
        tbpphNpwpAwalTahunIsInitialized = true;
    }

    /**
     * Setter method for tbpphNpwpAwalTahun.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpphNpwpAwalTahun
     */
    public void setTbpphNpwpAwalTahun(int newVal)
    {
        setTbpphNpwpAwalTahun(new Integer(newVal));
    }

    /**
     * Determines if the tbpphNpwpAwalTahun has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphNpwpAwalTahunModified()
    {
        return tbpphNpwpAwalTahunIsModified;
    }

    /**
     * Determines if the tbpphNpwpAwalTahun has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphNpwpAwalTahunInitialized()
    {
        return tbpphNpwpAwalTahunIsInitialized;
    }

    /**
     * Getter method for tbpphJkkjkm.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_jkkjkm</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbpphJkkjkm
     */
    public Double getTbpphJkkjkm()
    {
        return tbpphJkkjkm;
    }

    /**
     * Setter method for tbpphJkkjkm.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphJkkjkm
     */
    public void setTbpphJkkjkm(Double newVal)
    {
        if ((newVal != null && tbpphJkkjkm != null && (newVal.compareTo(tbpphJkkjkm) == 0)) ||
            (newVal == null && tbpphJkkjkm == null && tbpphJkkjkmIsInitialized)) {
            return;
        }
        tbpphJkkjkm = newVal;
        tbpphJkkjkmIsModified = true;
        tbpphJkkjkmIsInitialized = true;
    }

    /**
     * Setter method for tbpphJkkjkm.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpphJkkjkm
     */
    public void setTbpphJkkjkm(double newVal)
    {
        setTbpphJkkjkm(new Double(newVal));
    }

    /**
     * Determines if the tbpphJkkjkm has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphJkkjkmModified()
    {
        return tbpphJkkjkmIsModified;
    }

    /**
     * Determines if the tbpphJkkjkm has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphJkkjkmInitialized()
    {
        return tbpphJkkjkmIsInitialized;
    }

    /**
     * Getter method for tbpphSalary.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_salary</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbpphSalary
     */
    public Double getTbpphSalary()
    {
        return tbpphSalary;
    }

    /**
     * Setter method for tbpphSalary.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphSalary
     */
    public void setTbpphSalary(Double newVal)
    {
        if ((newVal != null && tbpphSalary != null && (newVal.compareTo(tbpphSalary) == 0)) ||
            (newVal == null && tbpphSalary == null && tbpphSalaryIsInitialized)) {
            return;
        }
        tbpphSalary = newVal;
        tbpphSalaryIsModified = true;
        tbpphSalaryIsInitialized = true;
    }

    /**
     * Setter method for tbpphSalary.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpphSalary
     */
    public void setTbpphSalary(double newVal)
    {
        setTbpphSalary(new Double(newVal));
    }

    /**
     * Determines if the tbpphSalary has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphSalaryModified()
    {
        return tbpphSalaryIsModified;
    }

    /**
     * Determines if the tbpphSalary has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphSalaryInitialized()
    {
        return tbpphSalaryIsInitialized;
    }

    /**
     * Getter method for tbpphPtkp.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_ptkp</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbpphPtkp
     */
    public Double getTbpphPtkp()
    {
        return tbpphPtkp;
    }

    /**
     * Setter method for tbpphPtkp.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphPtkp
     */
    public void setTbpphPtkp(Double newVal)
    {
        if ((newVal != null && tbpphPtkp != null && (newVal.compareTo(tbpphPtkp) == 0)) ||
            (newVal == null && tbpphPtkp == null && tbpphPtkpIsInitialized)) {
            return;
        }
        tbpphPtkp = newVal;
        tbpphPtkpIsModified = true;
        tbpphPtkpIsInitialized = true;
    }

    /**
     * Setter method for tbpphPtkp.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpphPtkp
     */
    public void setTbpphPtkp(double newVal)
    {
        setTbpphPtkp(new Double(newVal));
    }

    /**
     * Determines if the tbpphPtkp has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphPtkpModified()
    {
        return tbpphPtkpIsModified;
    }

    /**
     * Determines if the tbpphPtkp has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphPtkpInitialized()
    {
        return tbpphPtkpIsInitialized;
    }

    /**
     * Getter method for tbpphDate.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_date</li>
     * <li>column size: 19</li>
     * <li>jdbc type returned by the driver: Types.TIMESTAMP</li>
     * </ul>
     *
     * @return the value of tbpphDate
     */
    public java.sql.Timestamp getTbpphDate()
    {
        return tbpphDate;
    }

    /**
     * Setter method for tbpphDate.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphDate
     */
    public void setTbpphDate(java.sql.Timestamp newVal)
    {
        if ((newVal != null && tbpphDate != null && (newVal.compareTo(tbpphDate) == 0)) ||
            (newVal == null && tbpphDate == null && tbpphDateIsInitialized)) {
            return;
        }
        tbpphDate = newVal;
        tbpphDateIsModified = true;
        tbpphDateIsInitialized = true;
    }

    /**
     * Setter method for tbpphDate.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpphDate
     */
    public void setTbpphDate(long newVal)
    {
        setTbpphDate(new java.sql.Timestamp(newVal));
    }

    /**
     * Determines if the tbpphDate has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphDateModified()
    {
        return tbpphDateIsModified;
    }

    /**
     * Determines if the tbpphDate has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphDateInitialized()
    {
        return tbpphDateIsInitialized;
    }

    /**
     * Getter method for tbpphId.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbpph_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbpphId
     */
    public Integer getTbpphId()
    {
        return tbpphId;
    }

    /**
     * Setter method for tbpphId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbpphId
     */
    public void setTbpphId(Integer newVal)
    {
        if ((newVal != null && tbpphId != null && (newVal.compareTo(tbpphId) == 0)) ||
            (newVal == null && tbpphId == null && tbpphIdIsInitialized)) {
            return;
        }
        tbpphId = newVal;
        tbpphIdIsModified = true;
        tbpphIdIsInitialized = true;
    }

    /**
     * Setter method for tbpphId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbpphId
     */
    public void setTbpphId(int newVal)
    {
        setTbpphId(new Integer(newVal));
    }

    /**
     * Determines if the tbpphId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbpphIdModified()
    {
        return tbpphIdIsModified;
    }

    /**
     * Determines if the tbpphId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbpphIdInitialized()
    {
        return tbpphIdIsInitialized;
    }

    /**
     * Getter method for tbptkpJumlah.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbptkp_jumlah</li>
     * <li>column size: 22</li>
     * <li>jdbc type returned by the driver: Types.DOUBLE</li>
     * </ul>
     *
     * @return the value of tbptkpJumlah
     */
    public Double getTbptkpJumlah()
    {
        return tbptkpJumlah;
    }

    /**
     * Setter method for tbptkpJumlah.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbptkpJumlah
     */
    public void setTbptkpJumlah(Double newVal)
    {
        if ((newVal != null && tbptkpJumlah != null && (newVal.compareTo(tbptkpJumlah) == 0)) ||
            (newVal == null && tbptkpJumlah == null && tbptkpJumlahIsInitialized)) {
            return;
        }
        tbptkpJumlah = newVal;
        tbptkpJumlahIsModified = true;
        tbptkpJumlahIsInitialized = true;
    }

    /**
     * Setter method for tbptkpJumlah.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbptkpJumlah
     */
    public void setTbptkpJumlah(double newVal)
    {
        setTbptkpJumlah(new Double(newVal));
    }

    /**
     * Determines if the tbptkpJumlah has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbptkpJumlahModified()
    {
        return tbptkpJumlahIsModified;
    }

    /**
     * Determines if the tbptkpJumlah has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbptkpJumlahInitialized()
    {
        return tbptkpJumlahIsInitialized;
    }

    /**
     * Getter method for tbptkpStatus.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbptkp_status</li>
     * <li>column size: 45</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbptkpStatus
     */
    public String getTbptkpStatus()
    {
        return tbptkpStatus;
    }

    /**
     * Setter method for tbptkpStatus.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbptkpStatus
     */
    public void setTbptkpStatus(String newVal)
    {
        if ((newVal != null && tbptkpStatus != null && (newVal.compareTo(tbptkpStatus) == 0)) ||
            (newVal == null && tbptkpStatus == null && tbptkpStatusIsInitialized)) {
            return;
        }
        tbptkpStatus = newVal;
        tbptkpStatusIsModified = true;
        tbptkpStatusIsInitialized = true;
    }

    /**
     * Determines if the tbptkpStatus has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbptkpStatusModified()
    {
        return tbptkpStatusIsModified;
    }

    /**
     * Determines if the tbptkpStatus has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbptkpStatusInitialized()
    {
        return tbptkpStatusIsInitialized;
    }

    /**
     * Getter method for tbeName.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbe_name</li>
     * <li>column size: 100</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbeName
     */
    public String getTbeName()
    {
        return tbeName;
    }

    /**
     * Setter method for tbeName.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbeName
     */
    public void setTbeName(String newVal)
    {
        if ((newVal != null && tbeName != null && (newVal.compareTo(tbeName) == 0)) ||
            (newVal == null && tbeName == null && tbeNameIsInitialized)) {
            return;
        }
        tbeName = newVal;
        tbeNameIsModified = true;
        tbeNameIsInitialized = true;
    }

    /**
     * Determines if the tbeName has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbeNameModified()
    {
        return tbeNameIsModified;
    }

    /**
     * Determines if the tbeName has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbeNameInitialized()
    {
        return tbeNameIsInitialized;
    }

    /**
     * Getter method for tbeEmployeeId.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbe_employee_id</li>
     * <li>column size: 45</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbeEmployeeId
     */
    public String getTbeEmployeeId()
    {
        return tbeEmployeeId;
    }

    /**
     * Setter method for tbeEmployeeId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbeEmployeeId
     */
    public void setTbeEmployeeId(String newVal)
    {
        if ((newVal != null && tbeEmployeeId != null && (newVal.compareTo(tbeEmployeeId) == 0)) ||
            (newVal == null && tbeEmployeeId == null && tbeEmployeeIdIsInitialized)) {
            return;
        }
        tbeEmployeeId = newVal;
        tbeEmployeeIdIsModified = true;
        tbeEmployeeIdIsInitialized = true;
    }

    /**
     * Determines if the tbeEmployeeId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbeEmployeeIdModified()
    {
        return tbeEmployeeIdIsModified;
    }

    /**
     * Determines if the tbeEmployeeId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbeEmployeeIdInitialized()
    {
        return tbeEmployeeIdIsInitialized;
    }

    /**
     * Getter method for tbeId.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: view_report_employee_pph.tbe_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbeId
     */
    public Integer getTbeId()
    {
        return tbeId;
    }

    /**
     * Setter method for tbeId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbeId
     */
    public void setTbeId(Integer newVal)
    {
        if ((newVal != null && tbeId != null && (newVal.compareTo(tbeId) == 0)) ||
            (newVal == null && tbeId == null && tbeIdIsInitialized)) {
            return;
        }
        tbeId = newVal;
        tbeIdIsModified = true;
        tbeIdIsInitialized = true;
    }

    /**
     * Setter method for tbeId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbeId
     */
    public void setTbeId(int newVal)
    {
        setTbeId(new Integer(newVal));
    }

    /**
     * Determines if the tbeId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbeIdModified()
    {
        return tbeIdIsModified;
    }

    /**
     * Determines if the tbeId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbeIdInitialized()
    {
        return tbeIdIsInitialized;
    }

    /**
     * Determines if the current object is new.
     *
     * @return true if the current object is new, false if the object is not new
     */
    public boolean isNew()
    {
        return _isNew;
    }

    /**
     * Specifies to the object if it has been set as new.
     *
     * @param isNew the boolean value to be assigned to the isNew field
     */
    public void isNew(boolean isNew)
    {
        this._isNew = isNew;
    }

    /**
     * Determines if the object has been modified since the last time this method was called.
     * <br>
     * We can also determine if this object has ever been modified since its creation.
     *
     * @return true if the object has been modified, false if the object has not been modified
     */
    public boolean isModified()
    {
        return tbjtNameIsModified 		|| tbjtIdIsModified  		|| tboNamaIsModified  		|| tboIdIsModified  		|| tbpphDummyIsModified  		|| tbpphPeriodeIsModified  		|| tbpphTotalTakeHomePayKursIsModified  		|| tbcIdIsModified  		|| tbpphTotalTakeHomePayIsModified  		|| tbpphLoanIsModified  		|| tbpphTakeHomePayUtkPendIrregulerIsModified  		|| tbpphPajakKomisiIsModified  		|| tbpphPajakTotSethnUtkKaryTdkBerNpwpIsModified  		|| tbpphPajakTotSethnUtkKaryBerNpwpIsModified  		|| tbpphPendDisetahunkanPlusKomisiIsModified  		|| tbpphPajakSdhDisetorUtkPendTdkTtpYtdIsModified  		|| tbpphPendapatanTidakTetapYtdIsModified  		|| tbpphPendapatanTidakTetapIsModified  		|| tbpphTakeHomePayIsModified  		|| tbpphPajakBlnIniIsModified  		|| tbpphPajakTerutangSmpBlnIniIsModified  		|| tbpphPajakSetahunUtkKaryTdkBerNpwpIsModified  		|| tbpphPajakSetahunUtkKaryBerNpwpIsModified  		|| tbpphPendapatanKenaPajakIsModified  		|| tbpphPendapatanDisetahunkanIsModified  		|| tbpphFaktorPengaliUtkDisetahunkanIsModified  		|| tbpphPajakDisetorYtdSmpBlnLaluIsModified  		|| tbpphPendYtdSblmPajakSmpBlnLaluIsModified  		|| tbpphPendSblnSblmPajakIsModified  		|| tbpphBiayaJabatanIsModified  		|| tbpphIuranJhtJamsostekIsModified  		|| tbpphTotalGrossIsModified  		|| tbpphTunjanganJamsostekJkkjkmIsModified  		|| tbpphTunjanganTetapIsModified  		|| tbpphGajiPokokGrossIsModified  		|| tbpphNpwpAwalTahunIsModified  		|| tbpphJkkjkmIsModified  		|| tbpphSalaryIsModified  		|| tbpphPtkpIsModified  		|| tbpphDateIsModified  		|| tbpphIdIsModified  		|| tbptkpJumlahIsModified  		|| tbptkpStatusIsModified  		|| tbeNameIsModified  		|| tbeEmployeeIdIsModified  		|| tbeIdIsModified  ;
    }

    /**
     * Resets the object modification status to 'not modified'.
     */
    public void resetIsModified()
    {
        tbjtNameIsModified = false;
        tbjtIdIsModified = false;
        tboNamaIsModified = false;
        tboIdIsModified = false;
        tbpphDummyIsModified = false;
        tbpphPeriodeIsModified = false;
        tbpphTotalTakeHomePayKursIsModified = false;
        tbcIdIsModified = false;
        tbpphTotalTakeHomePayIsModified = false;
        tbpphLoanIsModified = false;
        tbpphTakeHomePayUtkPendIrregulerIsModified = false;
        tbpphPajakKomisiIsModified = false;
        tbpphPajakTotSethnUtkKaryTdkBerNpwpIsModified = false;
        tbpphPajakTotSethnUtkKaryBerNpwpIsModified = false;
        tbpphPendDisetahunkanPlusKomisiIsModified = false;
        tbpphPajakSdhDisetorUtkPendTdkTtpYtdIsModified = false;
        tbpphPendapatanTidakTetapYtdIsModified = false;
        tbpphPendapatanTidakTetapIsModified = false;
        tbpphTakeHomePayIsModified = false;
        tbpphPajakBlnIniIsModified = false;
        tbpphPajakTerutangSmpBlnIniIsModified = false;
        tbpphPajakSetahunUtkKaryTdkBerNpwpIsModified = false;
        tbpphPajakSetahunUtkKaryBerNpwpIsModified = false;
        tbpphPendapatanKenaPajakIsModified = false;
        tbpphPendapatanDisetahunkanIsModified = false;
        tbpphFaktorPengaliUtkDisetahunkanIsModified = false;
        tbpphPajakDisetorYtdSmpBlnLaluIsModified = false;
        tbpphPendYtdSblmPajakSmpBlnLaluIsModified = false;
        tbpphPendSblnSblmPajakIsModified = false;
        tbpphBiayaJabatanIsModified = false;
        tbpphIuranJhtJamsostekIsModified = false;
        tbpphTotalGrossIsModified = false;
        tbpphTunjanganJamsostekJkkjkmIsModified = false;
        tbpphTunjanganTetapIsModified = false;
        tbpphGajiPokokGrossIsModified = false;
        tbpphNpwpAwalTahunIsModified = false;
        tbpphJkkjkmIsModified = false;
        tbpphSalaryIsModified = false;
        tbpphPtkpIsModified = false;
        tbpphDateIsModified = false;
        tbpphIdIsModified = false;
        tbptkpJumlahIsModified = false;
        tbptkpStatusIsModified = false;
        tbeNameIsModified = false;
        tbeEmployeeIdIsModified = false;
        tbeIdIsModified = false;
    }

    /**
     * Copies the passed bean into the current bean.
     *
     * @param bean the bean to copy into the current bean
     */
    public void copy(ViewReportEmployeePphBean bean)
    {
        setTbjtName(bean.getTbjtName());
        setTbjtId(bean.getTbjtId());
        setTboNama(bean.getTboNama());
        setTboId(bean.getTboId());
        setTbpphDummy(bean.getTbpphDummy());
        setTbpphPeriode(bean.getTbpphPeriode());
        setTbpphTotalTakeHomePayKurs(bean.getTbpphTotalTakeHomePayKurs());
        setTbcId(bean.getTbcId());
        setTbpphTotalTakeHomePay(bean.getTbpphTotalTakeHomePay());
        setTbpphLoan(bean.getTbpphLoan());
        setTbpphTakeHomePayUtkPendIrreguler(bean.getTbpphTakeHomePayUtkPendIrreguler());
        setTbpphPajakKomisi(bean.getTbpphPajakKomisi());
        setTbpphPajakTotSethnUtkKaryTdkBerNpwp(bean.getTbpphPajakTotSethnUtkKaryTdkBerNpwp());
        setTbpphPajakTotSethnUtkKaryBerNpwp(bean.getTbpphPajakTotSethnUtkKaryBerNpwp());
        setTbpphPendDisetahunkanPlusKomisi(bean.getTbpphPendDisetahunkanPlusKomisi());
        setTbpphPajakSdhDisetorUtkPendTdkTtpYtd(bean.getTbpphPajakSdhDisetorUtkPendTdkTtpYtd());
        setTbpphPendapatanTidakTetapYtd(bean.getTbpphPendapatanTidakTetapYtd());
        setTbpphPendapatanTidakTetap(bean.getTbpphPendapatanTidakTetap());
        setTbpphTakeHomePay(bean.getTbpphTakeHomePay());
        setTbpphPajakBlnIni(bean.getTbpphPajakBlnIni());
        setTbpphPajakTerutangSmpBlnIni(bean.getTbpphPajakTerutangSmpBlnIni());
        setTbpphPajakSetahunUtkKaryTdkBerNpwp(bean.getTbpphPajakSetahunUtkKaryTdkBerNpwp());
        setTbpphPajakSetahunUtkKaryBerNpwp(bean.getTbpphPajakSetahunUtkKaryBerNpwp());
        setTbpphPendapatanKenaPajak(bean.getTbpphPendapatanKenaPajak());
        setTbpphPendapatanDisetahunkan(bean.getTbpphPendapatanDisetahunkan());
        setTbpphFaktorPengaliUtkDisetahunkan(bean.getTbpphFaktorPengaliUtkDisetahunkan());
        setTbpphPajakDisetorYtdSmpBlnLalu(bean.getTbpphPajakDisetorYtdSmpBlnLalu());
        setTbpphPendYtdSblmPajakSmpBlnLalu(bean.getTbpphPendYtdSblmPajakSmpBlnLalu());
        setTbpphPendSblnSblmPajak(bean.getTbpphPendSblnSblmPajak());
        setTbpphBiayaJabatan(bean.getTbpphBiayaJabatan());
        setTbpphIuranJhtJamsostek(bean.getTbpphIuranJhtJamsostek());
        setTbpphTotalGross(bean.getTbpphTotalGross());
        setTbpphTunjanganJamsostekJkkjkm(bean.getTbpphTunjanganJamsostekJkkjkm());
        setTbpphTunjanganTetap(bean.getTbpphTunjanganTetap());
        setTbpphGajiPokokGross(bean.getTbpphGajiPokokGross());
        setTbpphNpwpAwalTahun(bean.getTbpphNpwpAwalTahun());
        setTbpphJkkjkm(bean.getTbpphJkkjkm());
        setTbpphSalary(bean.getTbpphSalary());
        setTbpphPtkp(bean.getTbpphPtkp());
        setTbpphDate(bean.getTbpphDate());
        setTbpphId(bean.getTbpphId());
        setTbptkpJumlah(bean.getTbptkpJumlah());
        setTbptkpStatus(bean.getTbptkpStatus());
        setTbeName(bean.getTbeName());
        setTbeEmployeeId(bean.getTbeEmployeeId());
        setTbeId(bean.getTbeId());
    }

    /**
     * return a dictionnary of the object
     */
    public Map getDictionnary()
    {
        Map dictionnary = new HashMap();
        dictionnary.put("tbjt_name", getTbjtName() == null ? "" : getTbjtName().toString());
        dictionnary.put("tbjt_id", getTbjtId() == null ? "" : getTbjtId().toString());
        dictionnary.put("tbo_nama", getTboNama() == null ? "" : getTboNama().toString());
        dictionnary.put("tbo_id", getTboId() == null ? "" : getTboId().toString());
        dictionnary.put("tbpph_dummy", getTbpphDummy() == null ? "" : getTbpphDummy().toString());
        dictionnary.put("tbpph_periode", getTbpphPeriode() == null ? "" : getTbpphPeriode().toString());
        dictionnary.put("tbpph_total_take_home_pay_kurs", getTbpphTotalTakeHomePayKurs() == null ? "" : getTbpphTotalTakeHomePayKurs().toString());
        dictionnary.put("tbc_id", getTbcId() == null ? "" : getTbcId().toString());
        dictionnary.put("tbpph_total_take_home_pay", getTbpphTotalTakeHomePay() == null ? "" : getTbpphTotalTakeHomePay().toString());
        dictionnary.put("tbpph_loan", getTbpphLoan() == null ? "" : getTbpphLoan().toString());
        dictionnary.put("tbpph_take_home_pay_utk_pend_irreguler", getTbpphTakeHomePayUtkPendIrreguler() == null ? "" : getTbpphTakeHomePayUtkPendIrreguler().toString());
        dictionnary.put("tbpph_pajak_komisi", getTbpphPajakKomisi() == null ? "" : getTbpphPajakKomisi().toString());
        dictionnary.put("tbpph_pajak_tot_sethn_utk_kary_tdk_ber_npwp", getTbpphPajakTotSethnUtkKaryTdkBerNpwp() == null ? "" : getTbpphPajakTotSethnUtkKaryTdkBerNpwp().toString());
        dictionnary.put("tbpph_pajak_tot_sethn_utk_kary_ber_npwp", getTbpphPajakTotSethnUtkKaryBerNpwp() == null ? "" : getTbpphPajakTotSethnUtkKaryBerNpwp().toString());
        dictionnary.put("tbpph_pend_disetahunkan_plus_komisi", getTbpphPendDisetahunkanPlusKomisi() == null ? "" : getTbpphPendDisetahunkanPlusKomisi().toString());
        dictionnary.put("tbpph_pajak_sdh_disetor_utk_pend_tdk_ttp_ytd", getTbpphPajakSdhDisetorUtkPendTdkTtpYtd() == null ? "" : getTbpphPajakSdhDisetorUtkPendTdkTtpYtd().toString());
        dictionnary.put("tbpph_pendapatan_tidak_tetap_ytd", getTbpphPendapatanTidakTetapYtd() == null ? "" : getTbpphPendapatanTidakTetapYtd().toString());
        dictionnary.put("tbpph_pendapatan_tidak_tetap", getTbpphPendapatanTidakTetap() == null ? "" : getTbpphPendapatanTidakTetap().toString());
        dictionnary.put("tbpph_take_home_pay", getTbpphTakeHomePay() == null ? "" : getTbpphTakeHomePay().toString());
        dictionnary.put("tbpph_pajak_bln_ini", getTbpphPajakBlnIni() == null ? "" : getTbpphPajakBlnIni().toString());
        dictionnary.put("tbpph_pajak_terutang_smp_bln_ini", getTbpphPajakTerutangSmpBlnIni() == null ? "" : getTbpphPajakTerutangSmpBlnIni().toString());
        dictionnary.put("tbpph_pajak_setahun_utk_kary_tdk_ber_npwp", getTbpphPajakSetahunUtkKaryTdkBerNpwp() == null ? "" : getTbpphPajakSetahunUtkKaryTdkBerNpwp().toString());
        dictionnary.put("tbpph_pajak_setahun_utk_kary_ber_npwp", getTbpphPajakSetahunUtkKaryBerNpwp() == null ? "" : getTbpphPajakSetahunUtkKaryBerNpwp().toString());
        dictionnary.put("tbpph_pendapatan_kena_pajak", getTbpphPendapatanKenaPajak() == null ? "" : getTbpphPendapatanKenaPajak().toString());
        dictionnary.put("tbpph_pendapatan_disetahunkan", getTbpphPendapatanDisetahunkan() == null ? "" : getTbpphPendapatanDisetahunkan().toString());
        dictionnary.put("tbpph_faktor_pengali_utk_disetahunkan", getTbpphFaktorPengaliUtkDisetahunkan() == null ? "" : getTbpphFaktorPengaliUtkDisetahunkan().toString());
        dictionnary.put("tbpph_pajak_disetor_ytd_smp_bln_lalu", getTbpphPajakDisetorYtdSmpBlnLalu() == null ? "" : getTbpphPajakDisetorYtdSmpBlnLalu().toString());
        dictionnary.put("tbpph_pend_ytd_sblm_pajak_smp_bln_lalu", getTbpphPendYtdSblmPajakSmpBlnLalu() == null ? "" : getTbpphPendYtdSblmPajakSmpBlnLalu().toString());
        dictionnary.put("tbpph_pend_sbln_sblm_pajak", getTbpphPendSblnSblmPajak() == null ? "" : getTbpphPendSblnSblmPajak().toString());
        dictionnary.put("tbpph_biaya_jabatan", getTbpphBiayaJabatan() == null ? "" : getTbpphBiayaJabatan().toString());
        dictionnary.put("tbpph_iuran_jht_jamsostek", getTbpphIuranJhtJamsostek() == null ? "" : getTbpphIuranJhtJamsostek().toString());
        dictionnary.put("tbpph_total_gross", getTbpphTotalGross() == null ? "" : getTbpphTotalGross().toString());
        dictionnary.put("tbpph_tunjangan_jamsostek_jkkjkm", getTbpphTunjanganJamsostekJkkjkm() == null ? "" : getTbpphTunjanganJamsostekJkkjkm().toString());
        dictionnary.put("tbpph_tunjangan_tetap", getTbpphTunjanganTetap() == null ? "" : getTbpphTunjanganTetap().toString());
        dictionnary.put("tbpph_gaji_pokok_gross", getTbpphGajiPokokGross() == null ? "" : getTbpphGajiPokokGross().toString());
        dictionnary.put("tbpph_npwp_awal_tahun", getTbpphNpwpAwalTahun() == null ? "" : getTbpphNpwpAwalTahun().toString());
        dictionnary.put("tbpph_jkkjkm", getTbpphJkkjkm() == null ? "" : getTbpphJkkjkm().toString());
        dictionnary.put("tbpph_salary", getTbpphSalary() == null ? "" : getTbpphSalary().toString());
        dictionnary.put("tbpph_ptkp", getTbpphPtkp() == null ? "" : getTbpphPtkp().toString());
        dictionnary.put("tbpph_date", getTbpphDate() == null ? "" : getTbpphDate().toString());
        dictionnary.put("tbpph_id", getTbpphId() == null ? "" : getTbpphId().toString());
        dictionnary.put("tbptkp_jumlah", getTbptkpJumlah() == null ? "" : getTbptkpJumlah().toString());
        dictionnary.put("tbptkp_status", getTbptkpStatus() == null ? "" : getTbptkpStatus().toString());
        dictionnary.put("tbe_name", getTbeName() == null ? "" : getTbeName().toString());
        dictionnary.put("tbe_employee_id", getTbeEmployeeId() == null ? "" : getTbeEmployeeId().toString());
        dictionnary.put("tbe_id", getTbeId() == null ? "" : getTbeId().toString());
        return dictionnary;
    }

    /**
     * return a dictionnary of the pk columns
     * no primary key, the regular dictionnary is returned
     */
    public Map getPkDictionnary()
    {
        return getDictionnary();
    }

    /**
     * return a the value string representation of the given field
     */
    public String getValue(String column)
    {
        if (null == column || "".equals(column)) {
            return "";
        } else if ("tbjt_name".equalsIgnoreCase(column) || "tbjtName".equalsIgnoreCase(column)) {
            return getTbjtName() == null ? "" : getTbjtName().toString();
        } else if ("tbjt_id".equalsIgnoreCase(column) || "tbjtId".equalsIgnoreCase(column)) {
            return getTbjtId() == null ? "" : getTbjtId().toString();
        } else if ("tbo_nama".equalsIgnoreCase(column) || "tboNama".equalsIgnoreCase(column)) {
            return getTboNama() == null ? "" : getTboNama().toString();
        } else if ("tbo_id".equalsIgnoreCase(column) || "tboId".equalsIgnoreCase(column)) {
            return getTboId() == null ? "" : getTboId().toString();
        } else if ("tbpph_dummy".equalsIgnoreCase(column) || "tbpphDummy".equalsIgnoreCase(column)) {
            return getTbpphDummy() == null ? "" : getTbpphDummy().toString();
        } else if ("tbpph_periode".equalsIgnoreCase(column) || "tbpphPeriode".equalsIgnoreCase(column)) {
            return getTbpphPeriode() == null ? "" : getTbpphPeriode().toString();
        } else if ("tbpph_total_take_home_pay_kurs".equalsIgnoreCase(column) || "tbpphTotalTakeHomePayKurs".equalsIgnoreCase(column)) {
            return getTbpphTotalTakeHomePayKurs() == null ? "" : getTbpphTotalTakeHomePayKurs().toString();
        } else if ("tbc_id".equalsIgnoreCase(column) || "tbcId".equalsIgnoreCase(column)) {
            return getTbcId() == null ? "" : getTbcId().toString();
        } else if ("tbpph_total_take_home_pay".equalsIgnoreCase(column) || "tbpphTotalTakeHomePay".equalsIgnoreCase(column)) {
            return getTbpphTotalTakeHomePay() == null ? "" : getTbpphTotalTakeHomePay().toString();
        } else if ("tbpph_loan".equalsIgnoreCase(column) || "tbpphLoan".equalsIgnoreCase(column)) {
            return getTbpphLoan() == null ? "" : getTbpphLoan().toString();
        } else if ("tbpph_take_home_pay_utk_pend_irreguler".equalsIgnoreCase(column) || "tbpphTakeHomePayUtkPendIrreguler".equalsIgnoreCase(column)) {
            return getTbpphTakeHomePayUtkPendIrreguler() == null ? "" : getTbpphTakeHomePayUtkPendIrreguler().toString();
        } else if ("tbpph_pajak_komisi".equalsIgnoreCase(column) || "tbpphPajakKomisi".equalsIgnoreCase(column)) {
            return getTbpphPajakKomisi() == null ? "" : getTbpphPajakKomisi().toString();
        } else if ("tbpph_pajak_tot_sethn_utk_kary_tdk_ber_npwp".equalsIgnoreCase(column) || "tbpphPajakTotSethnUtkKaryTdkBerNpwp".equalsIgnoreCase(column)) {
            return getTbpphPajakTotSethnUtkKaryTdkBerNpwp() == null ? "" : getTbpphPajakTotSethnUtkKaryTdkBerNpwp().toString();
        } else if ("tbpph_pajak_tot_sethn_utk_kary_ber_npwp".equalsIgnoreCase(column) || "tbpphPajakTotSethnUtkKaryBerNpwp".equalsIgnoreCase(column)) {
            return getTbpphPajakTotSethnUtkKaryBerNpwp() == null ? "" : getTbpphPajakTotSethnUtkKaryBerNpwp().toString();
        } else if ("tbpph_pend_disetahunkan_plus_komisi".equalsIgnoreCase(column) || "tbpphPendDisetahunkanPlusKomisi".equalsIgnoreCase(column)) {
            return getTbpphPendDisetahunkanPlusKomisi() == null ? "" : getTbpphPendDisetahunkanPlusKomisi().toString();
        } else if ("tbpph_pajak_sdh_disetor_utk_pend_tdk_ttp_ytd".equalsIgnoreCase(column) || "tbpphPajakSdhDisetorUtkPendTdkTtpYtd".equalsIgnoreCase(column)) {
            return getTbpphPajakSdhDisetorUtkPendTdkTtpYtd() == null ? "" : getTbpphPajakSdhDisetorUtkPendTdkTtpYtd().toString();
        } else if ("tbpph_pendapatan_tidak_tetap_ytd".equalsIgnoreCase(column) || "tbpphPendapatanTidakTetapYtd".equalsIgnoreCase(column)) {
            return getTbpphPendapatanTidakTetapYtd() == null ? "" : getTbpphPendapatanTidakTetapYtd().toString();
        } else if ("tbpph_pendapatan_tidak_tetap".equalsIgnoreCase(column) || "tbpphPendapatanTidakTetap".equalsIgnoreCase(column)) {
            return getTbpphPendapatanTidakTetap() == null ? "" : getTbpphPendapatanTidakTetap().toString();
        } else if ("tbpph_take_home_pay".equalsIgnoreCase(column) || "tbpphTakeHomePay".equalsIgnoreCase(column)) {
            return getTbpphTakeHomePay() == null ? "" : getTbpphTakeHomePay().toString();
        } else if ("tbpph_pajak_bln_ini".equalsIgnoreCase(column) || "tbpphPajakBlnIni".equalsIgnoreCase(column)) {
            return getTbpphPajakBlnIni() == null ? "" : getTbpphPajakBlnIni().toString();
        } else if ("tbpph_pajak_terutang_smp_bln_ini".equalsIgnoreCase(column) || "tbpphPajakTerutangSmpBlnIni".equalsIgnoreCase(column)) {
            return getTbpphPajakTerutangSmpBlnIni() == null ? "" : getTbpphPajakTerutangSmpBlnIni().toString();
        } else if ("tbpph_pajak_setahun_utk_kary_tdk_ber_npwp".equalsIgnoreCase(column) || "tbpphPajakSetahunUtkKaryTdkBerNpwp".equalsIgnoreCase(column)) {
            return getTbpphPajakSetahunUtkKaryTdkBerNpwp() == null ? "" : getTbpphPajakSetahunUtkKaryTdkBerNpwp().toString();
        } else if ("tbpph_pajak_setahun_utk_kary_ber_npwp".equalsIgnoreCase(column) || "tbpphPajakSetahunUtkKaryBerNpwp".equalsIgnoreCase(column)) {
            return getTbpphPajakSetahunUtkKaryBerNpwp() == null ? "" : getTbpphPajakSetahunUtkKaryBerNpwp().toString();
        } else if ("tbpph_pendapatan_kena_pajak".equalsIgnoreCase(column) || "tbpphPendapatanKenaPajak".equalsIgnoreCase(column)) {
            return getTbpphPendapatanKenaPajak() == null ? "" : getTbpphPendapatanKenaPajak().toString();
        } else if ("tbpph_pendapatan_disetahunkan".equalsIgnoreCase(column) || "tbpphPendapatanDisetahunkan".equalsIgnoreCase(column)) {
            return getTbpphPendapatanDisetahunkan() == null ? "" : getTbpphPendapatanDisetahunkan().toString();
        } else if ("tbpph_faktor_pengali_utk_disetahunkan".equalsIgnoreCase(column) || "tbpphFaktorPengaliUtkDisetahunkan".equalsIgnoreCase(column)) {
            return getTbpphFaktorPengaliUtkDisetahunkan() == null ? "" : getTbpphFaktorPengaliUtkDisetahunkan().toString();
        } else if ("tbpph_pajak_disetor_ytd_smp_bln_lalu".equalsIgnoreCase(column) || "tbpphPajakDisetorYtdSmpBlnLalu".equalsIgnoreCase(column)) {
            return getTbpphPajakDisetorYtdSmpBlnLalu() == null ? "" : getTbpphPajakDisetorYtdSmpBlnLalu().toString();
        } else if ("tbpph_pend_ytd_sblm_pajak_smp_bln_lalu".equalsIgnoreCase(column) || "tbpphPendYtdSblmPajakSmpBlnLalu".equalsIgnoreCase(column)) {
            return getTbpphPendYtdSblmPajakSmpBlnLalu() == null ? "" : getTbpphPendYtdSblmPajakSmpBlnLalu().toString();
        } else if ("tbpph_pend_sbln_sblm_pajak".equalsIgnoreCase(column) || "tbpphPendSblnSblmPajak".equalsIgnoreCase(column)) {
            return getTbpphPendSblnSblmPajak() == null ? "" : getTbpphPendSblnSblmPajak().toString();
        } else if ("tbpph_biaya_jabatan".equalsIgnoreCase(column) || "tbpphBiayaJabatan".equalsIgnoreCase(column)) {
            return getTbpphBiayaJabatan() == null ? "" : getTbpphBiayaJabatan().toString();
        } else if ("tbpph_iuran_jht_jamsostek".equalsIgnoreCase(column) || "tbpphIuranJhtJamsostek".equalsIgnoreCase(column)) {
            return getTbpphIuranJhtJamsostek() == null ? "" : getTbpphIuranJhtJamsostek().toString();
        } else if ("tbpph_total_gross".equalsIgnoreCase(column) || "tbpphTotalGross".equalsIgnoreCase(column)) {
            return getTbpphTotalGross() == null ? "" : getTbpphTotalGross().toString();
        } else if ("tbpph_tunjangan_jamsostek_jkkjkm".equalsIgnoreCase(column) || "tbpphTunjanganJamsostekJkkjkm".equalsIgnoreCase(column)) {
            return getTbpphTunjanganJamsostekJkkjkm() == null ? "" : getTbpphTunjanganJamsostekJkkjkm().toString();
        } else if ("tbpph_tunjangan_tetap".equalsIgnoreCase(column) || "tbpphTunjanganTetap".equalsIgnoreCase(column)) {
            return getTbpphTunjanganTetap() == null ? "" : getTbpphTunjanganTetap().toString();
        } else if ("tbpph_gaji_pokok_gross".equalsIgnoreCase(column) || "tbpphGajiPokokGross".equalsIgnoreCase(column)) {
            return getTbpphGajiPokokGross() == null ? "" : getTbpphGajiPokokGross().toString();
        } else if ("tbpph_npwp_awal_tahun".equalsIgnoreCase(column) || "tbpphNpwpAwalTahun".equalsIgnoreCase(column)) {
            return getTbpphNpwpAwalTahun() == null ? "" : getTbpphNpwpAwalTahun().toString();
        } else if ("tbpph_jkkjkm".equalsIgnoreCase(column) || "tbpphJkkjkm".equalsIgnoreCase(column)) {
            return getTbpphJkkjkm() == null ? "" : getTbpphJkkjkm().toString();
        } else if ("tbpph_salary".equalsIgnoreCase(column) || "tbpphSalary".equalsIgnoreCase(column)) {
            return getTbpphSalary() == null ? "" : getTbpphSalary().toString();
        } else if ("tbpph_ptkp".equalsIgnoreCase(column) || "tbpphPtkp".equalsIgnoreCase(column)) {
            return getTbpphPtkp() == null ? "" : getTbpphPtkp().toString();
        } else if ("tbpph_date".equalsIgnoreCase(column) || "tbpphDate".equalsIgnoreCase(column)) {
            return getTbpphDate() == null ? "" : getTbpphDate().toString();
        } else if ("tbpph_id".equalsIgnoreCase(column) || "tbpphId".equalsIgnoreCase(column)) {
            return getTbpphId() == null ? "" : getTbpphId().toString();
        } else if ("tbptkp_jumlah".equalsIgnoreCase(column) || "tbptkpJumlah".equalsIgnoreCase(column)) {
            return getTbptkpJumlah() == null ? "" : getTbptkpJumlah().toString();
        } else if ("tbptkp_status".equalsIgnoreCase(column) || "tbptkpStatus".equalsIgnoreCase(column)) {
            return getTbptkpStatus() == null ? "" : getTbptkpStatus().toString();
        } else if ("tbe_name".equalsIgnoreCase(column) || "tbeName".equalsIgnoreCase(column)) {
            return getTbeName() == null ? "" : getTbeName().toString();
        } else if ("tbe_employee_id".equalsIgnoreCase(column) || "tbeEmployeeId".equalsIgnoreCase(column)) {
            return getTbeEmployeeId() == null ? "" : getTbeEmployeeId().toString();
        } else if ("tbe_id".equalsIgnoreCase(column) || "tbeId".equalsIgnoreCase(column)) {
            return getTbeId() == null ? "" : getTbeId().toString();
        }
        return "";
    }

    /**
     * @see java.lang.Object#equals(Object)
     */
    public boolean equals(Object object)
    {
        if (!(object instanceof ViewReportEmployeePphBean)) {
            return false;
        }

		ViewReportEmployeePphBean obj = (ViewReportEmployeePphBean) object;
		return new EqualsBuilder()
            .append(getTbjtName(), obj.getTbjtName())
            .append(getTbjtId(), obj.getTbjtId())
            .append(getTboNama(), obj.getTboNama())
            .append(getTboId(), obj.getTboId())
            .append(getTbpphDummy(), obj.getTbpphDummy())
            .append(getTbpphPeriode(), obj.getTbpphPeriode())
            .append(getTbpphTotalTakeHomePayKurs(), obj.getTbpphTotalTakeHomePayKurs())
            .append(getTbcId(), obj.getTbcId())
            .append(getTbpphTotalTakeHomePay(), obj.getTbpphTotalTakeHomePay())
            .append(getTbpphLoan(), obj.getTbpphLoan())
            .append(getTbpphTakeHomePayUtkPendIrreguler(), obj.getTbpphTakeHomePayUtkPendIrreguler())
            .append(getTbpphPajakKomisi(), obj.getTbpphPajakKomisi())
            .append(getTbpphPajakTotSethnUtkKaryTdkBerNpwp(), obj.getTbpphPajakTotSethnUtkKaryTdkBerNpwp())
            .append(getTbpphPajakTotSethnUtkKaryBerNpwp(), obj.getTbpphPajakTotSethnUtkKaryBerNpwp())
            .append(getTbpphPendDisetahunkanPlusKomisi(), obj.getTbpphPendDisetahunkanPlusKomisi())
            .append(getTbpphPajakSdhDisetorUtkPendTdkTtpYtd(), obj.getTbpphPajakSdhDisetorUtkPendTdkTtpYtd())
            .append(getTbpphPendapatanTidakTetapYtd(), obj.getTbpphPendapatanTidakTetapYtd())
            .append(getTbpphPendapatanTidakTetap(), obj.getTbpphPendapatanTidakTetap())
            .append(getTbpphTakeHomePay(), obj.getTbpphTakeHomePay())
            .append(getTbpphPajakBlnIni(), obj.getTbpphPajakBlnIni())
            .append(getTbpphPajakTerutangSmpBlnIni(), obj.getTbpphPajakTerutangSmpBlnIni())
            .append(getTbpphPajakSetahunUtkKaryTdkBerNpwp(), obj.getTbpphPajakSetahunUtkKaryTdkBerNpwp())
            .append(getTbpphPajakSetahunUtkKaryBerNpwp(), obj.getTbpphPajakSetahunUtkKaryBerNpwp())
            .append(getTbpphPendapatanKenaPajak(), obj.getTbpphPendapatanKenaPajak())
            .append(getTbpphPendapatanDisetahunkan(), obj.getTbpphPendapatanDisetahunkan())
            .append(getTbpphFaktorPengaliUtkDisetahunkan(), obj.getTbpphFaktorPengaliUtkDisetahunkan())
            .append(getTbpphPajakDisetorYtdSmpBlnLalu(), obj.getTbpphPajakDisetorYtdSmpBlnLalu())
            .append(getTbpphPendYtdSblmPajakSmpBlnLalu(), obj.getTbpphPendYtdSblmPajakSmpBlnLalu())
            .append(getTbpphPendSblnSblmPajak(), obj.getTbpphPendSblnSblmPajak())
            .append(getTbpphBiayaJabatan(), obj.getTbpphBiayaJabatan())
            .append(getTbpphIuranJhtJamsostek(), obj.getTbpphIuranJhtJamsostek())
            .append(getTbpphTotalGross(), obj.getTbpphTotalGross())
            .append(getTbpphTunjanganJamsostekJkkjkm(), obj.getTbpphTunjanganJamsostekJkkjkm())
            .append(getTbpphTunjanganTetap(), obj.getTbpphTunjanganTetap())
            .append(getTbpphGajiPokokGross(), obj.getTbpphGajiPokokGross())
            .append(getTbpphNpwpAwalTahun(), obj.getTbpphNpwpAwalTahun())
            .append(getTbpphJkkjkm(), obj.getTbpphJkkjkm())
            .append(getTbpphSalary(), obj.getTbpphSalary())
            .append(getTbpphPtkp(), obj.getTbpphPtkp())
            .append(getTbpphDate(), obj.getTbpphDate())
            .append(getTbpphId(), obj.getTbpphId())
            .append(getTbptkpJumlah(), obj.getTbptkpJumlah())
            .append(getTbptkpStatus(), obj.getTbptkpStatus())
            .append(getTbeName(), obj.getTbeName())
            .append(getTbeEmployeeId(), obj.getTbeEmployeeId())
            .append(getTbeId(), obj.getTbeId())
            .isEquals();
	}

	/**
	 * @see java.lang.Object#hashCode()
	 */
	public int hashCode()
	{
		return new HashCodeBuilder(-82280557, -700257973)
            .append(getTbjtName())
            .append(getTbjtId())
            .append(getTboNama())
            .append(getTboId())
            .append(getTbpphDummy())
            .append(getTbpphPeriode())
            .append(getTbpphTotalTakeHomePayKurs())
            .append(getTbcId())
            .append(getTbpphTotalTakeHomePay())
            .append(getTbpphLoan())
            .append(getTbpphTakeHomePayUtkPendIrreguler())
            .append(getTbpphPajakKomisi())
            .append(getTbpphPajakTotSethnUtkKaryTdkBerNpwp())
            .append(getTbpphPajakTotSethnUtkKaryBerNpwp())
            .append(getTbpphPendDisetahunkanPlusKomisi())
            .append(getTbpphPajakSdhDisetorUtkPendTdkTtpYtd())
            .append(getTbpphPendapatanTidakTetapYtd())
            .append(getTbpphPendapatanTidakTetap())
            .append(getTbpphTakeHomePay())
            .append(getTbpphPajakBlnIni())
            .append(getTbpphPajakTerutangSmpBlnIni())
            .append(getTbpphPajakSetahunUtkKaryTdkBerNpwp())
            .append(getTbpphPajakSetahunUtkKaryBerNpwp())
            .append(getTbpphPendapatanKenaPajak())
            .append(getTbpphPendapatanDisetahunkan())
            .append(getTbpphFaktorPengaliUtkDisetahunkan())
            .append(getTbpphPajakDisetorYtdSmpBlnLalu())
            .append(getTbpphPendYtdSblmPajakSmpBlnLalu())
            .append(getTbpphPendSblnSblmPajak())
            .append(getTbpphBiayaJabatan())
            .append(getTbpphIuranJhtJamsostek())
            .append(getTbpphTotalGross())
            .append(getTbpphTunjanganJamsostekJkkjkm())
            .append(getTbpphTunjanganTetap())
            .append(getTbpphGajiPokokGross())
            .append(getTbpphNpwpAwalTahun())
            .append(getTbpphJkkjkm())
            .append(getTbpphSalary())
            .append(getTbpphPtkp())
            .append(getTbpphDate())
            .append(getTbpphId())
            .append(getTbptkpJumlah())
            .append(getTbptkpStatus())
            .append(getTbeName())
            .append(getTbeEmployeeId())
            .append(getTbeId())
            .toHashCode();
	}

	/**
	 * @see java.lang.Object#toString()
	 */
	public String toString()
	{
	    return toString(ToStringStyle.MULTI_LINE_STYLE);
	}

	/**
	 * you can use the following styles:
	 * <li>ToStringStyle.DEFAULT_STYLE</li>
	 * <li>ToStringStyle.MULTI_LINE_STYLE</li>
     * <li>ToStringStyle.NO_FIELD_NAMES_STYLE</li>
     * <li>ToStringStyle.SHORT_PREFIX_STYLE</li>
     * <li>ToStringStyle.SIMPLE_STYLE</li>
	 */
	public String toString(ToStringStyle style) {
		return new ToStringBuilder(this, style)
            .append("tbjt_name", getTbjtName())
            .append("tbjt_id", getTbjtId())
            .append("tbo_nama", getTboNama())
            .append("tbo_id", getTboId())
            .append("tbpph_dummy", getTbpphDummy())
            .append("tbpph_periode", getTbpphPeriode())
            .append("tbpph_total_take_home_pay_kurs", getTbpphTotalTakeHomePayKurs())
            .append("tbc_id", getTbcId())
            .append("tbpph_total_take_home_pay", getTbpphTotalTakeHomePay())
            .append("tbpph_loan", getTbpphLoan())
            .append("tbpph_take_home_pay_utk_pend_irreguler", getTbpphTakeHomePayUtkPendIrreguler())
            .append("tbpph_pajak_komisi", getTbpphPajakKomisi())
            .append("tbpph_pajak_tot_sethn_utk_kary_tdk_ber_npwp", getTbpphPajakTotSethnUtkKaryTdkBerNpwp())
            .append("tbpph_pajak_tot_sethn_utk_kary_ber_npwp", getTbpphPajakTotSethnUtkKaryBerNpwp())
            .append("tbpph_pend_disetahunkan_plus_komisi", getTbpphPendDisetahunkanPlusKomisi())
            .append("tbpph_pajak_sdh_disetor_utk_pend_tdk_ttp_ytd", getTbpphPajakSdhDisetorUtkPendTdkTtpYtd())
            .append("tbpph_pendapatan_tidak_tetap_ytd", getTbpphPendapatanTidakTetapYtd())
            .append("tbpph_pendapatan_tidak_tetap", getTbpphPendapatanTidakTetap())
            .append("tbpph_take_home_pay", getTbpphTakeHomePay())
            .append("tbpph_pajak_bln_ini", getTbpphPajakBlnIni())
            .append("tbpph_pajak_terutang_smp_bln_ini", getTbpphPajakTerutangSmpBlnIni())
            .append("tbpph_pajak_setahun_utk_kary_tdk_ber_npwp", getTbpphPajakSetahunUtkKaryTdkBerNpwp())
            .append("tbpph_pajak_setahun_utk_kary_ber_npwp", getTbpphPajakSetahunUtkKaryBerNpwp())
            .append("tbpph_pendapatan_kena_pajak", getTbpphPendapatanKenaPajak())
            .append("tbpph_pendapatan_disetahunkan", getTbpphPendapatanDisetahunkan())
            .append("tbpph_faktor_pengali_utk_disetahunkan", getTbpphFaktorPengaliUtkDisetahunkan())
            .append("tbpph_pajak_disetor_ytd_smp_bln_lalu", getTbpphPajakDisetorYtdSmpBlnLalu())
            .append("tbpph_pend_ytd_sblm_pajak_smp_bln_lalu", getTbpphPendYtdSblmPajakSmpBlnLalu())
            .append("tbpph_pend_sbln_sblm_pajak", getTbpphPendSblnSblmPajak())
            .append("tbpph_biaya_jabatan", getTbpphBiayaJabatan())
            .append("tbpph_iuran_jht_jamsostek", getTbpphIuranJhtJamsostek())
            .append("tbpph_total_gross", getTbpphTotalGross())
            .append("tbpph_tunjangan_jamsostek_jkkjkm", getTbpphTunjanganJamsostekJkkjkm())
            .append("tbpph_tunjangan_tetap", getTbpphTunjanganTetap())
            .append("tbpph_gaji_pokok_gross", getTbpphGajiPokokGross())
            .append("tbpph_npwp_awal_tahun", getTbpphNpwpAwalTahun())
            .append("tbpph_jkkjkm", getTbpphJkkjkm())
            .append("tbpph_salary", getTbpphSalary())
            .append("tbpph_ptkp", getTbpphPtkp())
            .append("tbpph_date", getTbpphDate())
            .append("tbpph_id", getTbpphId())
            .append("tbptkp_jumlah", getTbptkpJumlah())
            .append("tbptkp_status", getTbptkpStatus())
            .append("tbe_name", getTbeName())
            .append("tbe_employee_id", getTbeEmployeeId())
            .append("tbe_id", getTbeId())
            .toString();
	}


    public int compareTo(Object object)
    {
        ViewReportEmployeePphBean obj = (ViewReportEmployeePphBean) object;
        return new CompareToBuilder()
            .append(getTbjtName(), obj.getTbjtName())
            .append(getTbjtId(), obj.getTbjtId())
            .append(getTboNama(), obj.getTboNama())
            .append(getTboId(), obj.getTboId())
            .append(getTbpphDummy(), obj.getTbpphDummy())
            .append(getTbpphPeriode(), obj.getTbpphPeriode())
            .append(getTbpphTotalTakeHomePayKurs(), obj.getTbpphTotalTakeHomePayKurs())
            .append(getTbcId(), obj.getTbcId())
            .append(getTbpphTotalTakeHomePay(), obj.getTbpphTotalTakeHomePay())
            .append(getTbpphLoan(), obj.getTbpphLoan())
            .append(getTbpphTakeHomePayUtkPendIrreguler(), obj.getTbpphTakeHomePayUtkPendIrreguler())
            .append(getTbpphPajakKomisi(), obj.getTbpphPajakKomisi())
            .append(getTbpphPajakTotSethnUtkKaryTdkBerNpwp(), obj.getTbpphPajakTotSethnUtkKaryTdkBerNpwp())
            .append(getTbpphPajakTotSethnUtkKaryBerNpwp(), obj.getTbpphPajakTotSethnUtkKaryBerNpwp())
            .append(getTbpphPendDisetahunkanPlusKomisi(), obj.getTbpphPendDisetahunkanPlusKomisi())
            .append(getTbpphPajakSdhDisetorUtkPendTdkTtpYtd(), obj.getTbpphPajakSdhDisetorUtkPendTdkTtpYtd())
            .append(getTbpphPendapatanTidakTetapYtd(), obj.getTbpphPendapatanTidakTetapYtd())
            .append(getTbpphPendapatanTidakTetap(), obj.getTbpphPendapatanTidakTetap())
            .append(getTbpphTakeHomePay(), obj.getTbpphTakeHomePay())
            .append(getTbpphPajakBlnIni(), obj.getTbpphPajakBlnIni())
            .append(getTbpphPajakTerutangSmpBlnIni(), obj.getTbpphPajakTerutangSmpBlnIni())
            .append(getTbpphPajakSetahunUtkKaryTdkBerNpwp(), obj.getTbpphPajakSetahunUtkKaryTdkBerNpwp())
            .append(getTbpphPajakSetahunUtkKaryBerNpwp(), obj.getTbpphPajakSetahunUtkKaryBerNpwp())
            .append(getTbpphPendapatanKenaPajak(), obj.getTbpphPendapatanKenaPajak())
            .append(getTbpphPendapatanDisetahunkan(), obj.getTbpphPendapatanDisetahunkan())
            .append(getTbpphFaktorPengaliUtkDisetahunkan(), obj.getTbpphFaktorPengaliUtkDisetahunkan())
            .append(getTbpphPajakDisetorYtdSmpBlnLalu(), obj.getTbpphPajakDisetorYtdSmpBlnLalu())
            .append(getTbpphPendYtdSblmPajakSmpBlnLalu(), obj.getTbpphPendYtdSblmPajakSmpBlnLalu())
            .append(getTbpphPendSblnSblmPajak(), obj.getTbpphPendSblnSblmPajak())
            .append(getTbpphBiayaJabatan(), obj.getTbpphBiayaJabatan())
            .append(getTbpphIuranJhtJamsostek(), obj.getTbpphIuranJhtJamsostek())
            .append(getTbpphTotalGross(), obj.getTbpphTotalGross())
            .append(getTbpphTunjanganJamsostekJkkjkm(), obj.getTbpphTunjanganJamsostekJkkjkm())
            .append(getTbpphTunjanganTetap(), obj.getTbpphTunjanganTetap())
            .append(getTbpphGajiPokokGross(), obj.getTbpphGajiPokokGross())
            .append(getTbpphNpwpAwalTahun(), obj.getTbpphNpwpAwalTahun())
            .append(getTbpphJkkjkm(), obj.getTbpphJkkjkm())
            .append(getTbpphSalary(), obj.getTbpphSalary())
            .append(getTbpphPtkp(), obj.getTbpphPtkp())
            .append(getTbpphDate(), obj.getTbpphDate())
            .append(getTbpphId(), obj.getTbpphId())
            .append(getTbptkpJumlah(), obj.getTbptkpJumlah())
            .append(getTbptkpStatus(), obj.getTbptkpStatus())
            .append(getTbeName(), obj.getTbeName())
            .append(getTbeEmployeeId(), obj.getTbeEmployeeId())
            .append(getTbeId(), obj.getTbeId())
            .toComparison();
   }
}
