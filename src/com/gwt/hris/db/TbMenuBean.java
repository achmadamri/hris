// ______________________________________________________
// Generated by sql2java - http://sql2java.sourceforge.net/
// jdbc driver used at code generation time: com.mysql.jdbc.Driver
//
// Please help us improve this tool by reporting:
// - problems and suggestions to
//   http://sourceforge.net/tracker/?group_id=54687
// - feedbacks and ideas on
//   http://sourceforge.net/forum/forum.php?forum_id=182208
// ______________________________________________________

package com.gwt.hris.db;

import java.io.Serializable;
import java.util.HashMap;
import java.util.Map;

import org.apache.commons.lang.builder.CompareToBuilder;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.commons.lang.builder.ToStringStyle;

/**
 * TbMenuBean is a mapping of tb_menu Table.
 * @author sql2java
*/
public class TbMenuBean
    implements Serializable, GeneratedBean
{
	private static final long serialVersionUID = 1229980767026324598L;
	
    private Integer tbmDisabled;

    private boolean tbmDisabledIsModified = false;
    private boolean tbmDisabledIsInitialized = false;

    private String tbmIndex;

    private boolean tbmIndexIsModified = false;
    private boolean tbmIndexIsInitialized = false;

    private String tbmNama;

    private boolean tbmNamaIsModified = false;
    private boolean tbmNamaIsInitialized = false;

    private Integer tbmParentId;

    private boolean tbmParentIdIsModified = false;
    private boolean tbmParentIdIsInitialized = false;

    private Integer tbmId;

    private boolean tbmIdIsModified = false;
    private boolean tbmIdIsInitialized = false;

    private boolean _isNew = true;

    /**
     * Prefered methods to create a TbMenuBean is via the createTbMenuBean method in TbMenuManager or
     * via the factory class TbMenuFactory create method
     */
    protected TbMenuBean()
    {
    }

    /**
     * Getter method for tbmDisabled.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_menu.tbm_disabled</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbmDisabled
     */
    public Integer getTbmDisabled()
    {
        return tbmDisabled;
    }

    /**
     * Setter method for tbmDisabled.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbmDisabled
     */
    public void setTbmDisabled(Integer newVal)
    {
        if ((newVal != null && tbmDisabled != null && (newVal.compareTo(tbmDisabled) == 0)) ||
            (newVal == null && tbmDisabled == null && tbmDisabledIsInitialized)) {
            return;
        }
        tbmDisabled = newVal;
        tbmDisabledIsModified = true;
        tbmDisabledIsInitialized = true;
    }

    /**
     * Setter method for tbmDisabled.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbmDisabled
     */
    public void setTbmDisabled(int newVal)
    {
        setTbmDisabled(new Integer(newVal));
    }

    /**
     * Determines if the tbmDisabled has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbmDisabledModified()
    {
        return tbmDisabledIsModified;
    }

    /**
     * Determines if the tbmDisabled has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbmDisabledInitialized()
    {
        return tbmDisabledIsInitialized;
    }

    /**
     * Getter method for tbmIndex.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_menu.tbm_index</li>
     * <li>column size: 45</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbmIndex
     */
    public String getTbmIndex()
    {
        return tbmIndex;
    }

    /**
     * Setter method for tbmIndex.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbmIndex
     */
    public void setTbmIndex(String newVal)
    {
        if ((newVal != null && tbmIndex != null && (newVal.compareTo(tbmIndex) == 0)) ||
            (newVal == null && tbmIndex == null && tbmIndexIsInitialized)) {
            return;
        }
        tbmIndex = newVal;
        tbmIndexIsModified = true;
        tbmIndexIsInitialized = true;
    }

    /**
     * Determines if the tbmIndex has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbmIndexModified()
    {
        return tbmIndexIsModified;
    }

    /**
     * Determines if the tbmIndex has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbmIndexInitialized()
    {
        return tbmIndexIsInitialized;
    }

    /**
     * Getter method for tbmNama.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_menu.tbm_nama</li>
     * <li>column size: 45</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbmNama
     */
    public String getTbmNama()
    {
        return tbmNama;
    }

    /**
     * Setter method for tbmNama.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbmNama
     */
    public void setTbmNama(String newVal)
    {
        if ((newVal != null && tbmNama != null && (newVal.compareTo(tbmNama) == 0)) ||
            (newVal == null && tbmNama == null && tbmNamaIsInitialized)) {
            return;
        }
        tbmNama = newVal;
        tbmNamaIsModified = true;
        tbmNamaIsInitialized = true;
    }

    /**
     * Determines if the tbmNama has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbmNamaModified()
    {
        return tbmNamaIsModified;
    }

    /**
     * Determines if the tbmNama has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbmNamaInitialized()
    {
        return tbmNamaIsInitialized;
    }

    /**
     * Getter method for tbmParentId.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_menu.tbm_parent_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbmParentId
     */
    public Integer getTbmParentId()
    {
        return tbmParentId;
    }

    /**
     * Setter method for tbmParentId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbmParentId
     */
    public void setTbmParentId(Integer newVal)
    {
        if ((newVal != null && tbmParentId != null && (newVal.compareTo(tbmParentId) == 0)) ||
            (newVal == null && tbmParentId == null && tbmParentIdIsInitialized)) {
            return;
        }
        tbmParentId = newVal;
        tbmParentIdIsModified = true;
        tbmParentIdIsInitialized = true;
    }

    /**
     * Setter method for tbmParentId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbmParentId
     */
    public void setTbmParentId(int newVal)
    {
        setTbmParentId(new Integer(newVal));
    }

    /**
     * Determines if the tbmParentId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbmParentIdModified()
    {
        return tbmParentIdIsModified;
    }

    /**
     * Determines if the tbmParentId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbmParentIdInitialized()
    {
        return tbmParentIdIsInitialized;
    }

    /**
     * Getter method for tbmId.
     * <br>
     * PRIMARY KEY.<br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_menu.tbm_id</li>
     * <li> imported key: tb_menu_access.tbm_id</li>
     * <li> imported key: tb_menu_access_admin.tbm_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbmId
     */
    public Integer getTbmId()
    {
        return tbmId;
    }

    /**
     * Setter method for tbmId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbmId
     */
    public void setTbmId(Integer newVal)
    {
        if ((newVal != null && tbmId != null && (newVal.compareTo(tbmId) == 0)) ||
            (newVal == null && tbmId == null && tbmIdIsInitialized)) {
            return;
        }
        tbmId = newVal;
        tbmIdIsModified = true;
        tbmIdIsInitialized = true;
    }

    /**
     * Setter method for tbmId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbmId
     */
    public void setTbmId(int newVal)
    {
        setTbmId(new Integer(newVal));
    }

    /**
     * Determines if the tbmId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbmIdModified()
    {
        return tbmIdIsModified;
    }

    /**
     * Determines if the tbmId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbmIdInitialized()
    {
        return tbmIdIsInitialized;
    }

    /**
     * Determines if the current object is new.
     *
     * @return true if the current object is new, false if the object is not new
     */
    public boolean isNew()
    {
        return _isNew;
    }

    /**
     * Specifies to the object if it has been set as new.
     *
     * @param isNew the boolean value to be assigned to the isNew field
     */
    public void isNew(boolean isNew)
    {
        this._isNew = isNew;
    }

    /**
     * Determines if the object has been modified since the last time this method was called.
     * <br>
     * We can also determine if this object has ever been modified since its creation.
     *
     * @return true if the object has been modified, false if the object has not been modified
     */
    public boolean isModified()
    {
        return tbmDisabledIsModified 		|| tbmIndexIsModified  		|| tbmNamaIsModified  		|| tbmParentIdIsModified  		|| tbmIdIsModified  ;
    }

    /**
     * Resets the object modification status to 'not modified'.
     */
    public void resetIsModified()
    {
        tbmDisabledIsModified = false;
        tbmIndexIsModified = false;
        tbmNamaIsModified = false;
        tbmParentIdIsModified = false;
        tbmIdIsModified = false;
    }

    /**
     * Copies the passed bean into the current bean.
     *
     * @param bean the bean to copy into the current bean
     */
    public void copy(TbMenuBean bean)
    {
        setTbmDisabled(bean.getTbmDisabled());
        setTbmIndex(bean.getTbmIndex());
        setTbmNama(bean.getTbmNama());
        setTbmParentId(bean.getTbmParentId());
        setTbmId(bean.getTbmId());
    }

    /**
     * return a dictionnary of the object
     */
    public Map getDictionnary()
    {
        Map dictionnary = new HashMap();
        dictionnary.put("tbm_disabled", getTbmDisabled() == null ? "" : getTbmDisabled().toString());
        dictionnary.put("tbm_index", getTbmIndex() == null ? "" : getTbmIndex().toString());
        dictionnary.put("tbm_nama", getTbmNama() == null ? "" : getTbmNama().toString());
        dictionnary.put("tbm_parent_id", getTbmParentId() == null ? "" : getTbmParentId().toString());
        dictionnary.put("tbm_id", getTbmId() == null ? "" : getTbmId().toString());
        return dictionnary;
    }

    /**
     * return a dictionnary of the pk columns
     */
    public Map getPkDictionnary()
    {
        Map dictionnary = new HashMap();
        dictionnary.put("tbm_id", getTbmId() == null ? "" : getTbmId().toString());
        return dictionnary;
    }

    /**
     * return a the value string representation of the given field
     */
    public String getValue(String column)
    {
        if (null == column || "".equals(column)) {
            return "";
        } else if ("tbm_disabled".equalsIgnoreCase(column) || "tbmDisabled".equalsIgnoreCase(column)) {
            return getTbmDisabled() == null ? "" : getTbmDisabled().toString();
        } else if ("tbm_index".equalsIgnoreCase(column) || "tbmIndex".equalsIgnoreCase(column)) {
            return getTbmIndex() == null ? "" : getTbmIndex().toString();
        } else if ("tbm_nama".equalsIgnoreCase(column) || "tbmNama".equalsIgnoreCase(column)) {
            return getTbmNama() == null ? "" : getTbmNama().toString();
        } else if ("tbm_parent_id".equalsIgnoreCase(column) || "tbmParentId".equalsIgnoreCase(column)) {
            return getTbmParentId() == null ? "" : getTbmParentId().toString();
        } else if ("tbm_id".equalsIgnoreCase(column) || "tbmId".equalsIgnoreCase(column)) {
            return getTbmId() == null ? "" : getTbmId().toString();
        }
        return "";
    }

    /**
     * @see java.lang.Object#equals(Object)
     */
    public boolean equals(Object object)
    {
        if (!(object instanceof TbMenuBean)) {
            return false;
        }

		TbMenuBean obj = (TbMenuBean) object;
		return new EqualsBuilder()
            .append(getTbmDisabled(), obj.getTbmDisabled())
            .append(getTbmIndex(), obj.getTbmIndex())
            .append(getTbmNama(), obj.getTbmNama())
            .append(getTbmParentId(), obj.getTbmParentId())
            .append(getTbmId(), obj.getTbmId())
            .isEquals();
	}

	/**
	 * @see java.lang.Object#hashCode()
	 */
	public int hashCode()
	{
		return new HashCodeBuilder(-82280557, -700257973)
            .append(getTbmDisabled())
            .append(getTbmIndex())
            .append(getTbmNama())
            .append(getTbmParentId())
            .append(getTbmId())
            .toHashCode();
	}

	/**
	 * @see java.lang.Object#toString()
	 */
	public String toString()
	{
	    return toString(ToStringStyle.MULTI_LINE_STYLE);
	}

	/**
	 * you can use the following styles:
	 * <li>ToStringStyle.DEFAULT_STYLE</li>
	 * <li>ToStringStyle.MULTI_LINE_STYLE</li>
     * <li>ToStringStyle.NO_FIELD_NAMES_STYLE</li>
     * <li>ToStringStyle.SHORT_PREFIX_STYLE</li>
     * <li>ToStringStyle.SIMPLE_STYLE</li>
	 */
	public String toString(ToStringStyle style) {
		return new ToStringBuilder(this, style)
            .append("tbm_disabled", getTbmDisabled())
            .append("tbm_index", getTbmIndex())
            .append("tbm_nama", getTbmNama())
            .append("tbm_parent_id", getTbmParentId())
            .append("tbm_id", getTbmId())
            .toString();
	}


    public int compareTo(Object object)
    {
        TbMenuBean obj = (TbMenuBean) object;
        return new CompareToBuilder()
            .append(getTbmDisabled(), obj.getTbmDisabled())
            .append(getTbmIndex(), obj.getTbmIndex())
            .append(getTbmNama(), obj.getTbmNama())
            .append(getTbmParentId(), obj.getTbmParentId())
            .append(getTbmId(), obj.getTbmId())
            .toComparison();
   }
}
