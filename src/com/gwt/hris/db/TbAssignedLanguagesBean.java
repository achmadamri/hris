// ______________________________________________________
// Generated by sql2java - http://sql2java.sourceforge.net/
// jdbc driver used at code generation time: com.mysql.jdbc.Driver
//
// Please help us improve this tool by reporting:
// - problems and suggestions to
//   http://sourceforge.net/tracker/?group_id=54687
// - feedbacks and ideas on
//   http://sourceforge.net/forum/forum.php?forum_id=182208
// ______________________________________________________

package com.gwt.hris.db;

import java.io.Serializable;
import java.util.HashMap;
import java.util.Map;

import org.apache.commons.lang.builder.CompareToBuilder;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.commons.lang.builder.ToStringStyle;

/**
 * TbAssignedLanguagesBean is a mapping of tb_assigned_languages Table.
 * @author sql2java
*/
public class TbAssignedLanguagesBean
    implements Serializable, GeneratedBean
{
	private static final long serialVersionUID = -6560103239556721976L;
	
    private Integer tbalCompetency;

    private boolean tbalCompetencyIsModified = false;
    private boolean tbalCompetencyIsInitialized = false;

    private Integer tbalFluency;

    private boolean tbalFluencyIsModified = false;
    private boolean tbalFluencyIsInitialized = false;

    private Integer tblId;

    private boolean tblIdIsModified = false;
    private boolean tblIdIsInitialized = false;

    private Integer tbeId;

    private boolean tbeIdIsModified = false;
    private boolean tbeIdIsInitialized = false;

    private Integer tbalId;

    private boolean tbalIdIsModified = false;
    private boolean tbalIdIsInitialized = false;

    private boolean _isNew = true;

    /**
     * Prefered methods to create a TbAssignedLanguagesBean is via the createTbAssignedLanguagesBean method in TbAssignedLanguagesManager or
     * via the factory class TbAssignedLanguagesFactory create method
     */
    protected TbAssignedLanguagesBean()
    {
    }

    /**
     * Getter method for tbalCompetency.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_assigned_languages.tbal_competency</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbalCompetency
     */
    public Integer getTbalCompetency()
    {
        return tbalCompetency;
    }

    /**
     * Setter method for tbalCompetency.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbalCompetency
     */
    public void setTbalCompetency(Integer newVal)
    {
        if ((newVal != null && tbalCompetency != null && (newVal.compareTo(tbalCompetency) == 0)) ||
            (newVal == null && tbalCompetency == null && tbalCompetencyIsInitialized)) {
            return;
        }
        tbalCompetency = newVal;
        tbalCompetencyIsModified = true;
        tbalCompetencyIsInitialized = true;
    }

    /**
     * Setter method for tbalCompetency.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbalCompetency
     */
    public void setTbalCompetency(int newVal)
    {
        setTbalCompetency(new Integer(newVal));
    }

    /**
     * Determines if the tbalCompetency has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbalCompetencyModified()
    {
        return tbalCompetencyIsModified;
    }

    /**
     * Determines if the tbalCompetency has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbalCompetencyInitialized()
    {
        return tbalCompetencyIsInitialized;
    }

    /**
     * Getter method for tbalFluency.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_assigned_languages.tbal_fluency</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbalFluency
     */
    public Integer getTbalFluency()
    {
        return tbalFluency;
    }

    /**
     * Setter method for tbalFluency.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbalFluency
     */
    public void setTbalFluency(Integer newVal)
    {
        if ((newVal != null && tbalFluency != null && (newVal.compareTo(tbalFluency) == 0)) ||
            (newVal == null && tbalFluency == null && tbalFluencyIsInitialized)) {
            return;
        }
        tbalFluency = newVal;
        tbalFluencyIsModified = true;
        tbalFluencyIsInitialized = true;
    }

    /**
     * Setter method for tbalFluency.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbalFluency
     */
    public void setTbalFluency(int newVal)
    {
        setTbalFluency(new Integer(newVal));
    }

    /**
     * Determines if the tbalFluency has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbalFluencyModified()
    {
        return tbalFluencyIsModified;
    }

    /**
     * Determines if the tbalFluency has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbalFluencyInitialized()
    {
        return tbalFluencyIsInitialized;
    }

    /**
     * Getter method for tblId.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_assigned_languages.tbl_id</li>
     * <li> foreign key: tb_language.tbl_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tblId
     */
    public Integer getTblId()
    {
        return tblId;
    }

    /**
     * Setter method for tblId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tblId
     */
    public void setTblId(Integer newVal)
    {
        if ((newVal != null && tblId != null && (newVal.compareTo(tblId) == 0)) ||
            (newVal == null && tblId == null && tblIdIsInitialized)) {
            return;
        }
        tblId = newVal;
        tblIdIsModified = true;
        tblIdIsInitialized = true;
    }

    /**
     * Setter method for tblId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tblId
     */
    public void setTblId(int newVal)
    {
        setTblId(new Integer(newVal));
    }

    /**
     * Determines if the tblId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTblIdModified()
    {
        return tblIdIsModified;
    }

    /**
     * Determines if the tblId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTblIdInitialized()
    {
        return tblIdIsInitialized;
    }

    /**
     * Getter method for tbeId.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_assigned_languages.tbe_id</li>
     * <li> foreign key: tb_employee.tbe_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbeId
     */
    public Integer getTbeId()
    {
        return tbeId;
    }

    /**
     * Setter method for tbeId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbeId
     */
    public void setTbeId(Integer newVal)
    {
        if ((newVal != null && tbeId != null && (newVal.compareTo(tbeId) == 0)) ||
            (newVal == null && tbeId == null && tbeIdIsInitialized)) {
            return;
        }
        tbeId = newVal;
        tbeIdIsModified = true;
        tbeIdIsInitialized = true;
    }

    /**
     * Setter method for tbeId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbeId
     */
    public void setTbeId(int newVal)
    {
        setTbeId(new Integer(newVal));
    }

    /**
     * Determines if the tbeId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbeIdModified()
    {
        return tbeIdIsModified;
    }

    /**
     * Determines if the tbeId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbeIdInitialized()
    {
        return tbeIdIsInitialized;
    }

    /**
     * Getter method for tbalId.
     * <br>
     * PRIMARY KEY.<br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_assigned_languages.tbal_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbalId
     */
    public Integer getTbalId()
    {
        return tbalId;
    }

    /**
     * Setter method for tbalId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbalId
     */
    public void setTbalId(Integer newVal)
    {
        if ((newVal != null && tbalId != null && (newVal.compareTo(tbalId) == 0)) ||
            (newVal == null && tbalId == null && tbalIdIsInitialized)) {
            return;
        }
        tbalId = newVal;
        tbalIdIsModified = true;
        tbalIdIsInitialized = true;
    }

    /**
     * Setter method for tbalId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbalId
     */
    public void setTbalId(int newVal)
    {
        setTbalId(new Integer(newVal));
    }

    /**
     * Determines if the tbalId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbalIdModified()
    {
        return tbalIdIsModified;
    }

    /**
     * Determines if the tbalId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbalIdInitialized()
    {
        return tbalIdIsInitialized;
    }

    /** The TbEmployee referenced by this bean. */
    private TbEmployeeBean referencedTbEmployee;
    /** Getter method for TbEmployeeBean. */
    public TbEmployeeBean getTbEmployeeBean() {
        return this.referencedTbEmployee;
    }
    /** Setter method for TbEmployeeBean. */
    public void setTbEmployeeBean(TbEmployeeBean reference) {
        this.referencedTbEmployee = reference;
    }
    
    /** The TbLanguage referenced by this bean. */
    private TbLanguageBean referencedTbLanguage;
    /** Getter method for TbLanguageBean. */
    public TbLanguageBean getTbLanguageBean() {
        return this.referencedTbLanguage;
    }
    /** Setter method for TbLanguageBean. */
    public void setTbLanguageBean(TbLanguageBean reference) {
        this.referencedTbLanguage = reference;
    }
    
    /**
     * Determines if the current object is new.
     *
     * @return true if the current object is new, false if the object is not new
     */
    public boolean isNew()
    {
        return _isNew;
    }

    /**
     * Specifies to the object if it has been set as new.
     *
     * @param isNew the boolean value to be assigned to the isNew field
     */
    public void isNew(boolean isNew)
    {
        this._isNew = isNew;
    }

    /**
     * Determines if the object has been modified since the last time this method was called.
     * <br>
     * We can also determine if this object has ever been modified since its creation.
     *
     * @return true if the object has been modified, false if the object has not been modified
     */
    public boolean isModified()
    {
        return tbalCompetencyIsModified 		|| tbalFluencyIsModified  		|| tblIdIsModified  		|| tbeIdIsModified  		|| tbalIdIsModified  ;
    }

    /**
     * Resets the object modification status to 'not modified'.
     */
    public void resetIsModified()
    {
        tbalCompetencyIsModified = false;
        tbalFluencyIsModified = false;
        tblIdIsModified = false;
        tbeIdIsModified = false;
        tbalIdIsModified = false;
    }

    /**
     * Copies the passed bean into the current bean.
     *
     * @param bean the bean to copy into the current bean
     */
    public void copy(TbAssignedLanguagesBean bean)
    {
        setTbalCompetency(bean.getTbalCompetency());
        setTbalFluency(bean.getTbalFluency());
        setTblId(bean.getTblId());
        setTbeId(bean.getTbeId());
        setTbalId(bean.getTbalId());
    }

    /**
     * return a dictionnary of the object
     */
    public Map getDictionnary()
    {
        Map dictionnary = new HashMap();
        dictionnary.put("tbal_competency", getTbalCompetency() == null ? "" : getTbalCompetency().toString());
        dictionnary.put("tbal_fluency", getTbalFluency() == null ? "" : getTbalFluency().toString());
        dictionnary.put("tbl_id", getTblId() == null ? "" : getTblId().toString());
        dictionnary.put("tbe_id", getTbeId() == null ? "" : getTbeId().toString());
        dictionnary.put("tbal_id", getTbalId() == null ? "" : getTbalId().toString());
        return dictionnary;
    }

    /**
     * return a dictionnary of the pk columns
     */
    public Map getPkDictionnary()
    {
        Map dictionnary = new HashMap();
        dictionnary.put("tbal_id", getTbalId() == null ? "" : getTbalId().toString());
        return dictionnary;
    }

    /**
     * return a the value string representation of the given field
     */
    public String getValue(String column)
    {
        if (null == column || "".equals(column)) {
            return "";
        } else if ("tbal_competency".equalsIgnoreCase(column) || "tbalCompetency".equalsIgnoreCase(column)) {
            return getTbalCompetency() == null ? "" : getTbalCompetency().toString();
        } else if ("tbal_fluency".equalsIgnoreCase(column) || "tbalFluency".equalsIgnoreCase(column)) {
            return getTbalFluency() == null ? "" : getTbalFluency().toString();
        } else if ("tbl_id".equalsIgnoreCase(column) || "tblId".equalsIgnoreCase(column)) {
            return getTblId() == null ? "" : getTblId().toString();
        } else if ("tbe_id".equalsIgnoreCase(column) || "tbeId".equalsIgnoreCase(column)) {
            return getTbeId() == null ? "" : getTbeId().toString();
        } else if ("tbal_id".equalsIgnoreCase(column) || "tbalId".equalsIgnoreCase(column)) {
            return getTbalId() == null ? "" : getTbalId().toString();
        }
        return "";
    }

    /**
     * @see java.lang.Object#equals(Object)
     */
    public boolean equals(Object object)
    {
        if (!(object instanceof TbAssignedLanguagesBean)) {
            return false;
        }

		TbAssignedLanguagesBean obj = (TbAssignedLanguagesBean) object;
		return new EqualsBuilder()
            .append(getTbalCompetency(), obj.getTbalCompetency())
            .append(getTbalFluency(), obj.getTbalFluency())
            .append(getTblId(), obj.getTblId())
            .append(getTbeId(), obj.getTbeId())
            .append(getTbalId(), obj.getTbalId())
            .isEquals();
	}

	/**
	 * @see java.lang.Object#hashCode()
	 */
	public int hashCode()
	{
		return new HashCodeBuilder(-82280557, -700257973)
            .append(getTbalCompetency())
            .append(getTbalFluency())
            .append(getTblId())
            .append(getTbeId())
            .append(getTbalId())
            .toHashCode();
	}

	/**
	 * @see java.lang.Object#toString()
	 */
	public String toString()
	{
	    return toString(ToStringStyle.MULTI_LINE_STYLE);
	}

	/**
	 * you can use the following styles:
	 * <li>ToStringStyle.DEFAULT_STYLE</li>
	 * <li>ToStringStyle.MULTI_LINE_STYLE</li>
     * <li>ToStringStyle.NO_FIELD_NAMES_STYLE</li>
     * <li>ToStringStyle.SHORT_PREFIX_STYLE</li>
     * <li>ToStringStyle.SIMPLE_STYLE</li>
	 */
	public String toString(ToStringStyle style) {
		return new ToStringBuilder(this, style)
            .append("tbal_competency", getTbalCompetency())
            .append("tbal_fluency", getTbalFluency())
            .append("tbl_id", getTblId())
            .append("tbe_id", getTbeId())
            .append("tbal_id", getTbalId())
            .toString();
	}


    public int compareTo(Object object)
    {
        TbAssignedLanguagesBean obj = (TbAssignedLanguagesBean) object;
        return new CompareToBuilder()
            .append(getTbalCompetency(), obj.getTbalCompetency())
            .append(getTbalFluency(), obj.getTbalFluency())
            .append(getTblId(), obj.getTblId())
            .append(getTbeId(), obj.getTbeId())
            .append(getTbalId(), obj.getTbalId())
            .toComparison();
   }
}
