// ______________________________________________________
// Generated by sql2java - http://sql2java.sourceforge.net/
// jdbc driver used at code generation time: com.mysql.jdbc.Driver
//
// Please help us improve this tool by reporting:
// - problems and suggestions to
//   http://sourceforge.net/tracker/?group_id=54687
// - feedbacks and ideas on
//   http://sourceforge.net/forum/forum.php?forum_id=182208
// ______________________________________________________

package com.gwt.hris.db;

import java.io.Serializable;
import java.util.HashMap;
import java.util.Map;

import org.apache.commons.lang.builder.CompareToBuilder;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.commons.lang.builder.ToStringStyle;

/**
 * TbLicensesBean is a mapping of tb_licenses Table.
 * @author sql2java
*/
public class TbLicensesBean
    implements Serializable, GeneratedBean
{
	private static final long serialVersionUID = 1229980767026324598L;
	
    private String tblDescription;

    private boolean tblDescriptionIsModified = false;
    private boolean tblDescriptionIsInitialized = false;

    private String tblName;

    private boolean tblNameIsModified = false;
    private boolean tblNameIsInitialized = false;

    private String tblLicensesId;

    private boolean tblLicensesIdIsModified = false;
    private boolean tblLicensesIdIsInitialized = false;

    private Integer tblId;

    private boolean tblIdIsModified = false;
    private boolean tblIdIsInitialized = false;

    private boolean _isNew = true;

    /**
     * Prefered methods to create a TbLicensesBean is via the createTbLicensesBean method in TbLicensesManager or
     * via the factory class TbLicensesFactory create method
     */
    protected TbLicensesBean()
    {
    }

    /**
     * Getter method for tblDescription.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_licenses.tbl_description</li>
     * <li>column size: 500</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tblDescription
     */
    public String getTblDescription()
    {
        return tblDescription;
    }

    /**
     * Setter method for tblDescription.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tblDescription
     */
    public void setTblDescription(String newVal)
    {
        if ((newVal != null && tblDescription != null && (newVal.compareTo(tblDescription) == 0)) ||
            (newVal == null && tblDescription == null && tblDescriptionIsInitialized)) {
            return;
        }
        tblDescription = newVal;
        tblDescriptionIsModified = true;
        tblDescriptionIsInitialized = true;
    }

    /**
     * Determines if the tblDescription has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTblDescriptionModified()
    {
        return tblDescriptionIsModified;
    }

    /**
     * Determines if the tblDescription has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTblDescriptionInitialized()
    {
        return tblDescriptionIsInitialized;
    }

    /**
     * Getter method for tblName.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_licenses.tbl_name</li>
     * <li>column size: 45</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tblName
     */
    public String getTblName()
    {
        return tblName;
    }

    /**
     * Setter method for tblName.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tblName
     */
    public void setTblName(String newVal)
    {
        if ((newVal != null && tblName != null && (newVal.compareTo(tblName) == 0)) ||
            (newVal == null && tblName == null && tblNameIsInitialized)) {
            return;
        }
        tblName = newVal;
        tblNameIsModified = true;
        tblNameIsInitialized = true;
    }

    /**
     * Determines if the tblName has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTblNameModified()
    {
        return tblNameIsModified;
    }

    /**
     * Determines if the tblName has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTblNameInitialized()
    {
        return tblNameIsInitialized;
    }

    /**
     * Getter method for tblLicensesId.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_licenses.tbl_licenses_id</li>
     * <li>column size: 45</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tblLicensesId
     */
    public String getTblLicensesId()
    {
        return tblLicensesId;
    }

    /**
     * Setter method for tblLicensesId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tblLicensesId
     */
    public void setTblLicensesId(String newVal)
    {
        if ((newVal != null && tblLicensesId != null && (newVal.compareTo(tblLicensesId) == 0)) ||
            (newVal == null && tblLicensesId == null && tblLicensesIdIsInitialized)) {
            return;
        }
        tblLicensesId = newVal;
        tblLicensesIdIsModified = true;
        tblLicensesIdIsInitialized = true;
    }

    /**
     * Determines if the tblLicensesId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTblLicensesIdModified()
    {
        return tblLicensesIdIsModified;
    }

    /**
     * Determines if the tblLicensesId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTblLicensesIdInitialized()
    {
        return tblLicensesIdIsInitialized;
    }

    /**
     * Getter method for tblId.
     * <br>
     * PRIMARY KEY.<br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_licenses.tbl_id</li>
     * <li> imported key: tb_assigned_licenses.tbl_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tblId
     */
    public Integer getTblId()
    {
        return tblId;
    }

    /**
     * Setter method for tblId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tblId
     */
    public void setTblId(Integer newVal)
    {
        if ((newVal != null && tblId != null && (newVal.compareTo(tblId) == 0)) ||
            (newVal == null && tblId == null && tblIdIsInitialized)) {
            return;
        }
        tblId = newVal;
        tblIdIsModified = true;
        tblIdIsInitialized = true;
    }

    /**
     * Setter method for tblId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tblId
     */
    public void setTblId(int newVal)
    {
        setTblId(new Integer(newVal));
    }

    /**
     * Determines if the tblId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTblIdModified()
    {
        return tblIdIsModified;
    }

    /**
     * Determines if the tblId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTblIdInitialized()
    {
        return tblIdIsInitialized;
    }

    /**
     * Determines if the current object is new.
     *
     * @return true if the current object is new, false if the object is not new
     */
    public boolean isNew()
    {
        return _isNew;
    }

    /**
     * Specifies to the object if it has been set as new.
     *
     * @param isNew the boolean value to be assigned to the isNew field
     */
    public void isNew(boolean isNew)
    {
        this._isNew = isNew;
    }

    /**
     * Determines if the object has been modified since the last time this method was called.
     * <br>
     * We can also determine if this object has ever been modified since its creation.
     *
     * @return true if the object has been modified, false if the object has not been modified
     */
    public boolean isModified()
    {
        return tblDescriptionIsModified 		|| tblNameIsModified  		|| tblLicensesIdIsModified  		|| tblIdIsModified  ;
    }

    /**
     * Resets the object modification status to 'not modified'.
     */
    public void resetIsModified()
    {
        tblDescriptionIsModified = false;
        tblNameIsModified = false;
        tblLicensesIdIsModified = false;
        tblIdIsModified = false;
    }

    /**
     * Copies the passed bean into the current bean.
     *
     * @param bean the bean to copy into the current bean
     */
    public void copy(TbLicensesBean bean)
    {
        setTblDescription(bean.getTblDescription());
        setTblName(bean.getTblName());
        setTblLicensesId(bean.getTblLicensesId());
        setTblId(bean.getTblId());
    }

    /**
     * return a dictionnary of the object
     */
    public Map getDictionnary()
    {
        Map dictionnary = new HashMap();
        dictionnary.put("tbl_description", getTblDescription() == null ? "" : getTblDescription().toString());
        dictionnary.put("tbl_name", getTblName() == null ? "" : getTblName().toString());
        dictionnary.put("tbl_licenses_id", getTblLicensesId() == null ? "" : getTblLicensesId().toString());
        dictionnary.put("tbl_id", getTblId() == null ? "" : getTblId().toString());
        return dictionnary;
    }

    /**
     * return a dictionnary of the pk columns
     */
    public Map getPkDictionnary()
    {
        Map dictionnary = new HashMap();
        dictionnary.put("tbl_id", getTblId() == null ? "" : getTblId().toString());
        return dictionnary;
    }

    /**
     * return a the value string representation of the given field
     */
    public String getValue(String column)
    {
        if (null == column || "".equals(column)) {
            return "";
        } else if ("tbl_description".equalsIgnoreCase(column) || "tblDescription".equalsIgnoreCase(column)) {
            return getTblDescription() == null ? "" : getTblDescription().toString();
        } else if ("tbl_name".equalsIgnoreCase(column) || "tblName".equalsIgnoreCase(column)) {
            return getTblName() == null ? "" : getTblName().toString();
        } else if ("tbl_licenses_id".equalsIgnoreCase(column) || "tblLicensesId".equalsIgnoreCase(column)) {
            return getTblLicensesId() == null ? "" : getTblLicensesId().toString();
        } else if ("tbl_id".equalsIgnoreCase(column) || "tblId".equalsIgnoreCase(column)) {
            return getTblId() == null ? "" : getTblId().toString();
        }
        return "";
    }

    /**
     * @see java.lang.Object#equals(Object)
     */
    public boolean equals(Object object)
    {
        if (!(object instanceof TbLicensesBean)) {
            return false;
        }

		TbLicensesBean obj = (TbLicensesBean) object;
		return new EqualsBuilder()
            .append(getTblDescription(), obj.getTblDescription())
            .append(getTblName(), obj.getTblName())
            .append(getTblLicensesId(), obj.getTblLicensesId())
            .append(getTblId(), obj.getTblId())
            .isEquals();
	}

	/**
	 * @see java.lang.Object#hashCode()
	 */
	public int hashCode()
	{
		return new HashCodeBuilder(-82280557, -700257973)
            .append(getTblDescription())
            .append(getTblName())
            .append(getTblLicensesId())
            .append(getTblId())
            .toHashCode();
	}

	/**
	 * @see java.lang.Object#toString()
	 */
	public String toString()
	{
	    return toString(ToStringStyle.MULTI_LINE_STYLE);
	}

	/**
	 * you can use the following styles:
	 * <li>ToStringStyle.DEFAULT_STYLE</li>
	 * <li>ToStringStyle.MULTI_LINE_STYLE</li>
     * <li>ToStringStyle.NO_FIELD_NAMES_STYLE</li>
     * <li>ToStringStyle.SHORT_PREFIX_STYLE</li>
     * <li>ToStringStyle.SIMPLE_STYLE</li>
	 */
	public String toString(ToStringStyle style) {
		return new ToStringBuilder(this, style)
            .append("tbl_description", getTblDescription())
            .append("tbl_name", getTblName())
            .append("tbl_licenses_id", getTblLicensesId())
            .append("tbl_id", getTblId())
            .toString();
	}


    public int compareTo(Object object)
    {
        TbLicensesBean obj = (TbLicensesBean) object;
        return new CompareToBuilder()
            .append(getTblDescription(), obj.getTblDescription())
            .append(getTblName(), obj.getTblName())
            .append(getTblLicensesId(), obj.getTblLicensesId())
            .append(getTblId(), obj.getTblId())
            .toComparison();
   }
}
