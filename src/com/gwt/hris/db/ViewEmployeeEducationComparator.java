// ______________________________________________________
// Generated by sql2java - http://sql2java.sourceforge.net/
// jdbc driver used at code generation time: com.mysql.jdbc.Driver
//
// Please help us improve this tool by reporting:
// - problems and suggestions to
//   http://sourceforge.net/tracker/?group_id=54687
// - feedbacks and ideas on
//   http://sourceforge.net/forum/forum.php?forum_id=182208
// ______________________________________________________

package com.gwt.hris.db;

import java.util.Comparator;


/**
 * Comparator class is used to sort the ViewEmployeeEducationBean objects.
 * @author sql2java
 */
public class ViewEmployeeEducationComparator implements Comparator
{
    /**
     * Holds the field on which the comparison is performed.
     */
    private int iType;
    /**
     * Value that will contain the information about the order of the sort: normal or reversal.
     */
    private boolean bReverse;

    /**
     * Constructor class for ViewEmployeeEducationComparator.
     * <br>
     * Example:
     * <br>
     * <code>Arrays.sort(pArray, new ViewEmployeeEducationComparator(ViewEmployeeEducationManager.ID_TBAE_GPA, bReverse));<code>
     *
     * @param iType the field from which you want to sort
     * <br>
     * Possible values are:
     * <ul>
     *   <li>ViewEmployeeEducationManager.ID_TBAE_GPA
     *   <li>ViewEmployeeEducationManager.ID_TBAE_END_DATE
     *   <li>ViewEmployeeEducationManager.ID_TBAE_START_DATE
     *   <li>ViewEmployeeEducationManager.ID_TBAE_MAJOR
     *   <li>ViewEmployeeEducationManager.ID_TBEDU_ID
     *   <li>ViewEmployeeEducationManager.ID_TBAE_ID
     *   <li>ViewEmployeeEducationManager.ID_TBE_INSTITUTE
     *   <li>ViewEmployeeEducationManager.ID_TBE_EDUCATION_ID
     *   <li>ViewEmployeeEducationManager.ID_TBE_NAME
     *   <li>ViewEmployeeEducationManager.ID_TBE_NICK_NAME
     *   <li>ViewEmployeeEducationManager.ID_TBE_LAST_NAME
     *   <li>ViewEmployeeEducationManager.ID_TBE_MIDDLE_NAME
     *   <li>ViewEmployeeEducationManager.ID_TBE_FIRST_NAME
     *   <li>ViewEmployeeEducationManager.ID_TBE_EMPLOYEE_ID
     *   <li>ViewEmployeeEducationManager.ID_TBE_ID
     * </ul>
     */
    public ViewEmployeeEducationComparator(int iType)
    {
        this(iType, false);
    }

    /**
     * Constructor class for ViewEmployeeEducationComparator.
     * <br>
     * Example:
     * <br>
     * <code>Arrays.sort(pArray, new ViewEmployeeEducationComparator(ViewEmployeeEducationManager.ID_TBAE_GPA, bReverse));<code>
     *
     * @param iType the field from which you want to sort.
     * <br>
     * Possible values are:
     * <ul>
     *   <li>ViewEmployeeEducationManager.ID_TBAE_GPA
     *   <li>ViewEmployeeEducationManager.ID_TBAE_END_DATE
     *   <li>ViewEmployeeEducationManager.ID_TBAE_START_DATE
     *   <li>ViewEmployeeEducationManager.ID_TBAE_MAJOR
     *   <li>ViewEmployeeEducationManager.ID_TBEDU_ID
     *   <li>ViewEmployeeEducationManager.ID_TBAE_ID
     *   <li>ViewEmployeeEducationManager.ID_TBE_INSTITUTE
     *   <li>ViewEmployeeEducationManager.ID_TBE_EDUCATION_ID
     *   <li>ViewEmployeeEducationManager.ID_TBE_NAME
     *   <li>ViewEmployeeEducationManager.ID_TBE_NICK_NAME
     *   <li>ViewEmployeeEducationManager.ID_TBE_LAST_NAME
     *   <li>ViewEmployeeEducationManager.ID_TBE_MIDDLE_NAME
     *   <li>ViewEmployeeEducationManager.ID_TBE_FIRST_NAME
     *   <li>ViewEmployeeEducationManager.ID_TBE_EMPLOYEE_ID
     *   <li>ViewEmployeeEducationManager.ID_TBE_ID
     * </ul>
     *
     * @param bReverse set this value to true, if you want to reverse the sorting results
     */
    public ViewEmployeeEducationComparator(int iType, boolean bReverse)
    {
        this.iType = iType;
        this.bReverse = bReverse;
    }

    /**
     * Implementation of the compare method.
     */
    public int compare(Object pObj1, Object pObj2)
    {
        ViewEmployeeEducationBean b1 = (ViewEmployeeEducationBean)pObj1;
        ViewEmployeeEducationBean b2 = (ViewEmployeeEducationBean)pObj2;
        int iReturn = 0;
        switch(iType)
        {
            case ViewEmployeeEducationManager.ID_TBAE_GPA:
                if (b1.getTbaeGpa() == null && b2.getTbaeGpa() != null) {
                    iReturn = -1;
                } else if (b1.getTbaeGpa() == null && b2.getTbaeGpa() == null) {
                    iReturn = 0;
                } else if (b1.getTbaeGpa() != null && b2.getTbaeGpa() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbaeGpa().compareTo(b2.getTbaeGpa());
                }
                break;
            case ViewEmployeeEducationManager.ID_TBAE_END_DATE:
                if (b1.getTbaeEndDate() == null && b2.getTbaeEndDate() != null) {
                    iReturn = -1;
                } else if (b1.getTbaeEndDate() == null && b2.getTbaeEndDate() == null) {
                    iReturn = 0;
                } else if (b1.getTbaeEndDate() != null && b2.getTbaeEndDate() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbaeEndDate().compareTo(b2.getTbaeEndDate());
                }
                break;
            case ViewEmployeeEducationManager.ID_TBAE_START_DATE:
                if (b1.getTbaeStartDate() == null && b2.getTbaeStartDate() != null) {
                    iReturn = -1;
                } else if (b1.getTbaeStartDate() == null && b2.getTbaeStartDate() == null) {
                    iReturn = 0;
                } else if (b1.getTbaeStartDate() != null && b2.getTbaeStartDate() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbaeStartDate().compareTo(b2.getTbaeStartDate());
                }
                break;
            case ViewEmployeeEducationManager.ID_TBAE_MAJOR:
                if (b1.getTbaeMajor() == null && b2.getTbaeMajor() != null) {
                    iReturn = -1;
                } else if (b1.getTbaeMajor() == null && b2.getTbaeMajor() == null) {
                    iReturn = 0;
                } else if (b1.getTbaeMajor() != null && b2.getTbaeMajor() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbaeMajor().compareTo(b2.getTbaeMajor());
                }
                break;
            case ViewEmployeeEducationManager.ID_TBEDU_ID:
                if (b1.getTbeduId() == null && b2.getTbeduId() != null) {
                    iReturn = -1;
                } else if (b1.getTbeduId() == null && b2.getTbeduId() == null) {
                    iReturn = 0;
                } else if (b1.getTbeduId() != null && b2.getTbeduId() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbeduId().compareTo(b2.getTbeduId());
                }
                break;
            case ViewEmployeeEducationManager.ID_TBAE_ID:
                if (b1.getTbaeId() == null && b2.getTbaeId() != null) {
                    iReturn = -1;
                } else if (b1.getTbaeId() == null && b2.getTbaeId() == null) {
                    iReturn = 0;
                } else if (b1.getTbaeId() != null && b2.getTbaeId() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbaeId().compareTo(b2.getTbaeId());
                }
                break;
            case ViewEmployeeEducationManager.ID_TBE_INSTITUTE:
                if (b1.getTbeInstitute() == null && b2.getTbeInstitute() != null) {
                    iReturn = -1;
                } else if (b1.getTbeInstitute() == null && b2.getTbeInstitute() == null) {
                    iReturn = 0;
                } else if (b1.getTbeInstitute() != null && b2.getTbeInstitute() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbeInstitute().compareTo(b2.getTbeInstitute());
                }
                break;
            case ViewEmployeeEducationManager.ID_TBE_EDUCATION_ID:
                if (b1.getTbeEducationId() == null && b2.getTbeEducationId() != null) {
                    iReturn = -1;
                } else if (b1.getTbeEducationId() == null && b2.getTbeEducationId() == null) {
                    iReturn = 0;
                } else if (b1.getTbeEducationId() != null && b2.getTbeEducationId() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbeEducationId().compareTo(b2.getTbeEducationId());
                }
                break;
            case ViewEmployeeEducationManager.ID_TBE_NAME:
                if (b1.getTbeName() == null && b2.getTbeName() != null) {
                    iReturn = -1;
                } else if (b1.getTbeName() == null && b2.getTbeName() == null) {
                    iReturn = 0;
                } else if (b1.getTbeName() != null && b2.getTbeName() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbeName().compareTo(b2.getTbeName());
                }
                break;
            case ViewEmployeeEducationManager.ID_TBE_NICK_NAME:
                if (b1.getTbeNickName() == null && b2.getTbeNickName() != null) {
                    iReturn = -1;
                } else if (b1.getTbeNickName() == null && b2.getTbeNickName() == null) {
                    iReturn = 0;
                } else if (b1.getTbeNickName() != null && b2.getTbeNickName() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbeNickName().compareTo(b2.getTbeNickName());
                }
                break;
            case ViewEmployeeEducationManager.ID_TBE_LAST_NAME:
                if (b1.getTbeLastName() == null && b2.getTbeLastName() != null) {
                    iReturn = -1;
                } else if (b1.getTbeLastName() == null && b2.getTbeLastName() == null) {
                    iReturn = 0;
                } else if (b1.getTbeLastName() != null && b2.getTbeLastName() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbeLastName().compareTo(b2.getTbeLastName());
                }
                break;
            case ViewEmployeeEducationManager.ID_TBE_MIDDLE_NAME:
                if (b1.getTbeMiddleName() == null && b2.getTbeMiddleName() != null) {
                    iReturn = -1;
                } else if (b1.getTbeMiddleName() == null && b2.getTbeMiddleName() == null) {
                    iReturn = 0;
                } else if (b1.getTbeMiddleName() != null && b2.getTbeMiddleName() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbeMiddleName().compareTo(b2.getTbeMiddleName());
                }
                break;
            case ViewEmployeeEducationManager.ID_TBE_FIRST_NAME:
                if (b1.getTbeFirstName() == null && b2.getTbeFirstName() != null) {
                    iReturn = -1;
                } else if (b1.getTbeFirstName() == null && b2.getTbeFirstName() == null) {
                    iReturn = 0;
                } else if (b1.getTbeFirstName() != null && b2.getTbeFirstName() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbeFirstName().compareTo(b2.getTbeFirstName());
                }
                break;
            case ViewEmployeeEducationManager.ID_TBE_EMPLOYEE_ID:
                if (b1.getTbeEmployeeId() == null && b2.getTbeEmployeeId() != null) {
                    iReturn = -1;
                } else if (b1.getTbeEmployeeId() == null && b2.getTbeEmployeeId() == null) {
                    iReturn = 0;
                } else if (b1.getTbeEmployeeId() != null && b2.getTbeEmployeeId() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbeEmployeeId().compareTo(b2.getTbeEmployeeId());
                }
                break;
            case ViewEmployeeEducationManager.ID_TBE_ID:
                if (b1.getTbeId() == null && b2.getTbeId() != null) {
                    iReturn = -1;
                } else if (b1.getTbeId() == null && b2.getTbeId() == null) {
                    iReturn = 0;
                } else if (b1.getTbeId() != null && b2.getTbeId() == null) {
                    iReturn = 1;
                } else {
                    iReturn = b1.getTbeId().compareTo(b2.getTbeId());
                }
                break;
            default:
                throw new IllegalArgumentException("Type passed for the field is not supported");
        }

        return bReverse ? (-1 * iReturn) : iReturn;
    }}
