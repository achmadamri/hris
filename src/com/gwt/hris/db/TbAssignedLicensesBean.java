// ______________________________________________________
// Generated by sql2java - http://sql2java.sourceforge.net/
// jdbc driver used at code generation time: com.mysql.jdbc.Driver
//
// Please help us improve this tool by reporting:
// - problems and suggestions to
//   http://sourceforge.net/tracker/?group_id=54687
// - feedbacks and ideas on
//   http://sourceforge.net/forum/forum.php?forum_id=182208
// ______________________________________________________

package com.gwt.hris.db;

import java.io.Serializable;
import java.util.HashMap;
import java.util.Map;

import org.apache.commons.lang.builder.CompareToBuilder;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.commons.lang.builder.ToStringStyle;

/**
 * TbAssignedLicensesBean is a mapping of tb_assigned_licenses Table.
 * @author sql2java
*/
public class TbAssignedLicensesBean
    implements Serializable, GeneratedBean
{
	private static final long serialVersionUID = -6560103239556721976L;
	
    private java.sql.Timestamp tbalEndDate;

    private boolean tbalEndDateIsModified = false;
    private boolean tbalEndDateIsInitialized = false;

    private java.sql.Timestamp tbalStartDate;

    private boolean tbalStartDateIsModified = false;
    private boolean tbalStartDateIsInitialized = false;

    private Integer tblId;

    private boolean tblIdIsModified = false;
    private boolean tblIdIsInitialized = false;

    private Integer tbeId;

    private boolean tbeIdIsModified = false;
    private boolean tbeIdIsInitialized = false;

    private Integer tbalId;

    private boolean tbalIdIsModified = false;
    private boolean tbalIdIsInitialized = false;

    private boolean _isNew = true;

    /**
     * Prefered methods to create a TbAssignedLicensesBean is via the createTbAssignedLicensesBean method in TbAssignedLicensesManager or
     * via the factory class TbAssignedLicensesFactory create method
     */
    protected TbAssignedLicensesBean()
    {
    }

    /**
     * Getter method for tbalEndDate.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_assigned_licenses.tbal_end_date</li>
     * <li>column size: 19</li>
     * <li>jdbc type returned by the driver: Types.TIMESTAMP</li>
     * </ul>
     *
     * @return the value of tbalEndDate
     */
    public java.sql.Timestamp getTbalEndDate()
    {
        return tbalEndDate;
    }

    /**
     * Setter method for tbalEndDate.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbalEndDate
     */
    public void setTbalEndDate(java.sql.Timestamp newVal)
    {
        if ((newVal != null && tbalEndDate != null && (newVal.compareTo(tbalEndDate) == 0)) ||
            (newVal == null && tbalEndDate == null && tbalEndDateIsInitialized)) {
            return;
        }
        tbalEndDate = newVal;
        tbalEndDateIsModified = true;
        tbalEndDateIsInitialized = true;
    }

    /**
     * Setter method for tbalEndDate.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbalEndDate
     */
    public void setTbalEndDate(long newVal)
    {
        setTbalEndDate(new java.sql.Timestamp(newVal));
    }

    /**
     * Determines if the tbalEndDate has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbalEndDateModified()
    {
        return tbalEndDateIsModified;
    }

    /**
     * Determines if the tbalEndDate has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbalEndDateInitialized()
    {
        return tbalEndDateIsInitialized;
    }

    /**
     * Getter method for tbalStartDate.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_assigned_licenses.tbal_start_date</li>
     * <li>column size: 19</li>
     * <li>jdbc type returned by the driver: Types.TIMESTAMP</li>
     * </ul>
     *
     * @return the value of tbalStartDate
     */
    public java.sql.Timestamp getTbalStartDate()
    {
        return tbalStartDate;
    }

    /**
     * Setter method for tbalStartDate.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbalStartDate
     */
    public void setTbalStartDate(java.sql.Timestamp newVal)
    {
        if ((newVal != null && tbalStartDate != null && (newVal.compareTo(tbalStartDate) == 0)) ||
            (newVal == null && tbalStartDate == null && tbalStartDateIsInitialized)) {
            return;
        }
        tbalStartDate = newVal;
        tbalStartDateIsModified = true;
        tbalStartDateIsInitialized = true;
    }

    /**
     * Setter method for tbalStartDate.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbalStartDate
     */
    public void setTbalStartDate(long newVal)
    {
        setTbalStartDate(new java.sql.Timestamp(newVal));
    }

    /**
     * Determines if the tbalStartDate has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbalStartDateModified()
    {
        return tbalStartDateIsModified;
    }

    /**
     * Determines if the tbalStartDate has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbalStartDateInitialized()
    {
        return tbalStartDateIsInitialized;
    }

    /**
     * Getter method for tblId.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_assigned_licenses.tbl_id</li>
     * <li> foreign key: tb_licenses.tbl_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tblId
     */
    public Integer getTblId()
    {
        return tblId;
    }

    /**
     * Setter method for tblId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tblId
     */
    public void setTblId(Integer newVal)
    {
        if ((newVal != null && tblId != null && (newVal.compareTo(tblId) == 0)) ||
            (newVal == null && tblId == null && tblIdIsInitialized)) {
            return;
        }
        tblId = newVal;
        tblIdIsModified = true;
        tblIdIsInitialized = true;
    }

    /**
     * Setter method for tblId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tblId
     */
    public void setTblId(int newVal)
    {
        setTblId(new Integer(newVal));
    }

    /**
     * Determines if the tblId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTblIdModified()
    {
        return tblIdIsModified;
    }

    /**
     * Determines if the tblId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTblIdInitialized()
    {
        return tblIdIsInitialized;
    }

    /**
     * Getter method for tbeId.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_assigned_licenses.tbe_id</li>
     * <li> foreign key: tb_employee.tbe_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbeId
     */
    public Integer getTbeId()
    {
        return tbeId;
    }

    /**
     * Setter method for tbeId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbeId
     */
    public void setTbeId(Integer newVal)
    {
        if ((newVal != null && tbeId != null && (newVal.compareTo(tbeId) == 0)) ||
            (newVal == null && tbeId == null && tbeIdIsInitialized)) {
            return;
        }
        tbeId = newVal;
        tbeIdIsModified = true;
        tbeIdIsInitialized = true;
    }

    /**
     * Setter method for tbeId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbeId
     */
    public void setTbeId(int newVal)
    {
        setTbeId(new Integer(newVal));
    }

    /**
     * Determines if the tbeId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbeIdModified()
    {
        return tbeIdIsModified;
    }

    /**
     * Determines if the tbeId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbeIdInitialized()
    {
        return tbeIdIsInitialized;
    }

    /**
     * Getter method for tbalId.
     * <br>
     * PRIMARY KEY.<br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_assigned_licenses.tbal_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbalId
     */
    public Integer getTbalId()
    {
        return tbalId;
    }

    /**
     * Setter method for tbalId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbalId
     */
    public void setTbalId(Integer newVal)
    {
        if ((newVal != null && tbalId != null && (newVal.compareTo(tbalId) == 0)) ||
            (newVal == null && tbalId == null && tbalIdIsInitialized)) {
            return;
        }
        tbalId = newVal;
        tbalIdIsModified = true;
        tbalIdIsInitialized = true;
    }

    /**
     * Setter method for tbalId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbalId
     */
    public void setTbalId(int newVal)
    {
        setTbalId(new Integer(newVal));
    }

    /**
     * Determines if the tbalId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbalIdModified()
    {
        return tbalIdIsModified;
    }

    /**
     * Determines if the tbalId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbalIdInitialized()
    {
        return tbalIdIsInitialized;
    }

    /** The TbEmployee referenced by this bean. */
    private TbEmployeeBean referencedTbEmployee;
    /** Getter method for TbEmployeeBean. */
    public TbEmployeeBean getTbEmployeeBean() {
        return this.referencedTbEmployee;
    }
    /** Setter method for TbEmployeeBean. */
    public void setTbEmployeeBean(TbEmployeeBean reference) {
        this.referencedTbEmployee = reference;
    }
    
    /** The TbLicenses referenced by this bean. */
    private TbLicensesBean referencedTbLicenses;
    /** Getter method for TbLicensesBean. */
    public TbLicensesBean getTbLicensesBean() {
        return this.referencedTbLicenses;
    }
    /** Setter method for TbLicensesBean. */
    public void setTbLicensesBean(TbLicensesBean reference) {
        this.referencedTbLicenses = reference;
    }
    
    /**
     * Determines if the current object is new.
     *
     * @return true if the current object is new, false if the object is not new
     */
    public boolean isNew()
    {
        return _isNew;
    }

    /**
     * Specifies to the object if it has been set as new.
     *
     * @param isNew the boolean value to be assigned to the isNew field
     */
    public void isNew(boolean isNew)
    {
        this._isNew = isNew;
    }

    /**
     * Determines if the object has been modified since the last time this method was called.
     * <br>
     * We can also determine if this object has ever been modified since its creation.
     *
     * @return true if the object has been modified, false if the object has not been modified
     */
    public boolean isModified()
    {
        return tbalEndDateIsModified 		|| tbalStartDateIsModified  		|| tblIdIsModified  		|| tbeIdIsModified  		|| tbalIdIsModified  ;
    }

    /**
     * Resets the object modification status to 'not modified'.
     */
    public void resetIsModified()
    {
        tbalEndDateIsModified = false;
        tbalStartDateIsModified = false;
        tblIdIsModified = false;
        tbeIdIsModified = false;
        tbalIdIsModified = false;
    }

    /**
     * Copies the passed bean into the current bean.
     *
     * @param bean the bean to copy into the current bean
     */
    public void copy(TbAssignedLicensesBean bean)
    {
        setTbalEndDate(bean.getTbalEndDate());
        setTbalStartDate(bean.getTbalStartDate());
        setTblId(bean.getTblId());
        setTbeId(bean.getTbeId());
        setTbalId(bean.getTbalId());
    }

    /**
     * return a dictionnary of the object
     */
    public Map getDictionnary()
    {
        Map dictionnary = new HashMap();
        dictionnary.put("tbal_end_date", getTbalEndDate() == null ? "" : getTbalEndDate().toString());
        dictionnary.put("tbal_start_date", getTbalStartDate() == null ? "" : getTbalStartDate().toString());
        dictionnary.put("tbl_id", getTblId() == null ? "" : getTblId().toString());
        dictionnary.put("tbe_id", getTbeId() == null ? "" : getTbeId().toString());
        dictionnary.put("tbal_id", getTbalId() == null ? "" : getTbalId().toString());
        return dictionnary;
    }

    /**
     * return a dictionnary of the pk columns
     */
    public Map getPkDictionnary()
    {
        Map dictionnary = new HashMap();
        dictionnary.put("tbal_id", getTbalId() == null ? "" : getTbalId().toString());
        return dictionnary;
    }

    /**
     * return a the value string representation of the given field
     */
    public String getValue(String column)
    {
        if (null == column || "".equals(column)) {
            return "";
        } else if ("tbal_end_date".equalsIgnoreCase(column) || "tbalEndDate".equalsIgnoreCase(column)) {
            return getTbalEndDate() == null ? "" : getTbalEndDate().toString();
        } else if ("tbal_start_date".equalsIgnoreCase(column) || "tbalStartDate".equalsIgnoreCase(column)) {
            return getTbalStartDate() == null ? "" : getTbalStartDate().toString();
        } else if ("tbl_id".equalsIgnoreCase(column) || "tblId".equalsIgnoreCase(column)) {
            return getTblId() == null ? "" : getTblId().toString();
        } else if ("tbe_id".equalsIgnoreCase(column) || "tbeId".equalsIgnoreCase(column)) {
            return getTbeId() == null ? "" : getTbeId().toString();
        } else if ("tbal_id".equalsIgnoreCase(column) || "tbalId".equalsIgnoreCase(column)) {
            return getTbalId() == null ? "" : getTbalId().toString();
        }
        return "";
    }

    /**
     * @see java.lang.Object#equals(Object)
     */
    public boolean equals(Object object)
    {
        if (!(object instanceof TbAssignedLicensesBean)) {
            return false;
        }

		TbAssignedLicensesBean obj = (TbAssignedLicensesBean) object;
		return new EqualsBuilder()
            .append(getTbalEndDate(), obj.getTbalEndDate())
            .append(getTbalStartDate(), obj.getTbalStartDate())
            .append(getTblId(), obj.getTblId())
            .append(getTbeId(), obj.getTbeId())
            .append(getTbalId(), obj.getTbalId())
            .isEquals();
	}

	/**
	 * @see java.lang.Object#hashCode()
	 */
	public int hashCode()
	{
		return new HashCodeBuilder(-82280557, -700257973)
            .append(getTbalEndDate())
            .append(getTbalStartDate())
            .append(getTblId())
            .append(getTbeId())
            .append(getTbalId())
            .toHashCode();
	}

	/**
	 * @see java.lang.Object#toString()
	 */
	public String toString()
	{
	    return toString(ToStringStyle.MULTI_LINE_STYLE);
	}

	/**
	 * you can use the following styles:
	 * <li>ToStringStyle.DEFAULT_STYLE</li>
	 * <li>ToStringStyle.MULTI_LINE_STYLE</li>
     * <li>ToStringStyle.NO_FIELD_NAMES_STYLE</li>
     * <li>ToStringStyle.SHORT_PREFIX_STYLE</li>
     * <li>ToStringStyle.SIMPLE_STYLE</li>
	 */
	public String toString(ToStringStyle style) {
		return new ToStringBuilder(this, style)
            .append("tbal_end_date", getTbalEndDate())
            .append("tbal_start_date", getTbalStartDate())
            .append("tbl_id", getTblId())
            .append("tbe_id", getTbeId())
            .append("tbal_id", getTbalId())
            .toString();
	}


    public int compareTo(Object object)
    {
        TbAssignedLicensesBean obj = (TbAssignedLicensesBean) object;
        return new CompareToBuilder()
            .append(getTbalEndDate(), obj.getTbalEndDate())
            .append(getTbalStartDate(), obj.getTbalStartDate())
            .append(getTblId(), obj.getTblId())
            .append(getTbeId(), obj.getTbeId())
            .append(getTbalId(), obj.getTbalId())
            .toComparison();
   }
}
