// ______________________________________________________
// Generated by sql2java - http://sql2java.sourceforge.net/
// jdbc driver used at code generation time: com.mysql.jdbc.Driver
//
// Please help us improve this tool by reporting:
// - problems and suggestions to
//   http://sourceforge.net/tracker/?group_id=54687
// - feedbacks and ideas on
//   http://sourceforge.net/forum/forum.php?forum_id=182208
// ______________________________________________________

package com.gwt.hris.db;

import java.io.Serializable;
import java.util.HashMap;
import java.util.Map;

import org.apache.commons.lang.builder.CompareToBuilder;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.commons.lang.builder.ToStringStyle;

/**
 * TbKpiAssignBean is a mapping of tb_kpi_assign Table.
 * @author sql2java
*/
public class TbKpiAssignBean
    implements Serializable, GeneratedBean
{
	private static final long serialVersionUID = -1897561318385902685L;
	
    private Integer tbkaSpvId;

    private boolean tbkaSpvIdIsModified = false;
    private boolean tbkaSpvIdIsInitialized = false;

    private Integer tbkaStatus;

    private boolean tbkaStatusIsModified = false;
    private boolean tbkaStatusIsInitialized = false;

    private Integer tbkaPoin;

    private boolean tbkaPoinIsModified = false;
    private boolean tbkaPoinIsInitialized = false;

    private String tbkaAction;

    private boolean tbkaActionIsModified = false;
    private boolean tbkaActionIsInitialized = false;

    private String tbkaEvaluasi;

    private boolean tbkaEvaluasiIsModified = false;
    private boolean tbkaEvaluasiIsInitialized = false;

    private Integer tbkId;

    private boolean tbkIdIsModified = false;
    private boolean tbkIdIsInitialized = false;

    private Integer tbeId;

    private boolean tbeIdIsModified = false;
    private boolean tbeIdIsInitialized = false;

    private Integer tbkaId;

    private boolean tbkaIdIsModified = false;
    private boolean tbkaIdIsInitialized = false;

    private boolean _isNew = true;

    /**
     * Prefered methods to create a TbKpiAssignBean is via the createTbKpiAssignBean method in TbKpiAssignManager or
     * via the factory class TbKpiAssignFactory create method
     */
    protected TbKpiAssignBean()
    {
    }

    /**
     * Getter method for tbkaSpvId.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_kpi_assign.tbka_spv_id</li>
     * <li> foreign key: tb_employee.tbe_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbkaSpvId
     */
    public Integer getTbkaSpvId()
    {
        return tbkaSpvId;
    }

    /**
     * Setter method for tbkaSpvId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbkaSpvId
     */
    public void setTbkaSpvId(Integer newVal)
    {
        if ((newVal != null && tbkaSpvId != null && (newVal.compareTo(tbkaSpvId) == 0)) ||
            (newVal == null && tbkaSpvId == null && tbkaSpvIdIsInitialized)) {
            return;
        }
        tbkaSpvId = newVal;
        tbkaSpvIdIsModified = true;
        tbkaSpvIdIsInitialized = true;
    }

    /**
     * Setter method for tbkaSpvId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbkaSpvId
     */
    public void setTbkaSpvId(int newVal)
    {
        setTbkaSpvId(new Integer(newVal));
    }

    /**
     * Determines if the tbkaSpvId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbkaSpvIdModified()
    {
        return tbkaSpvIdIsModified;
    }

    /**
     * Determines if the tbkaSpvId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbkaSpvIdInitialized()
    {
        return tbkaSpvIdIsInitialized;
    }

    /**
     * Getter method for tbkaStatus.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_kpi_assign.tbka_status</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbkaStatus
     */
    public Integer getTbkaStatus()
    {
        return tbkaStatus;
    }

    /**
     * Setter method for tbkaStatus.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbkaStatus
     */
    public void setTbkaStatus(Integer newVal)
    {
        if ((newVal != null && tbkaStatus != null && (newVal.compareTo(tbkaStatus) == 0)) ||
            (newVal == null && tbkaStatus == null && tbkaStatusIsInitialized)) {
            return;
        }
        tbkaStatus = newVal;
        tbkaStatusIsModified = true;
        tbkaStatusIsInitialized = true;
    }

    /**
     * Setter method for tbkaStatus.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbkaStatus
     */
    public void setTbkaStatus(int newVal)
    {
        setTbkaStatus(new Integer(newVal));
    }

    /**
     * Determines if the tbkaStatus has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbkaStatusModified()
    {
        return tbkaStatusIsModified;
    }

    /**
     * Determines if the tbkaStatus has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbkaStatusInitialized()
    {
        return tbkaStatusIsInitialized;
    }

    /**
     * Getter method for tbkaPoin.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_kpi_assign.tbka_poin</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbkaPoin
     */
    public Integer getTbkaPoin()
    {
        return tbkaPoin;
    }

    /**
     * Setter method for tbkaPoin.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbkaPoin
     */
    public void setTbkaPoin(Integer newVal)
    {
        if ((newVal != null && tbkaPoin != null && (newVal.compareTo(tbkaPoin) == 0)) ||
            (newVal == null && tbkaPoin == null && tbkaPoinIsInitialized)) {
            return;
        }
        tbkaPoin = newVal;
        tbkaPoinIsModified = true;
        tbkaPoinIsInitialized = true;
    }

    /**
     * Setter method for tbkaPoin.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbkaPoin
     */
    public void setTbkaPoin(int newVal)
    {
        setTbkaPoin(new Integer(newVal));
    }

    /**
     * Determines if the tbkaPoin has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbkaPoinModified()
    {
        return tbkaPoinIsModified;
    }

    /**
     * Determines if the tbkaPoin has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbkaPoinInitialized()
    {
        return tbkaPoinIsInitialized;
    }

    /**
     * Getter method for tbkaAction.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_kpi_assign.tbka_action</li>
     * <li>column size: 500</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbkaAction
     */
    public String getTbkaAction()
    {
        return tbkaAction;
    }

    /**
     * Setter method for tbkaAction.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbkaAction
     */
    public void setTbkaAction(String newVal)
    {
        if ((newVal != null && tbkaAction != null && (newVal.compareTo(tbkaAction) == 0)) ||
            (newVal == null && tbkaAction == null && tbkaActionIsInitialized)) {
            return;
        }
        tbkaAction = newVal;
        tbkaActionIsModified = true;
        tbkaActionIsInitialized = true;
    }

    /**
     * Determines if the tbkaAction has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbkaActionModified()
    {
        return tbkaActionIsModified;
    }

    /**
     * Determines if the tbkaAction has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbkaActionInitialized()
    {
        return tbkaActionIsInitialized;
    }

    /**
     * Getter method for tbkaEvaluasi.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_kpi_assign.tbka_evaluasi</li>
     * <li>column size: 500</li>
     * <li>jdbc type returned by the driver: Types.VARCHAR</li>
     * </ul>
     *
     * @return the value of tbkaEvaluasi
     */
    public String getTbkaEvaluasi()
    {
        return tbkaEvaluasi;
    }

    /**
     * Setter method for tbkaEvaluasi.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbkaEvaluasi
     */
    public void setTbkaEvaluasi(String newVal)
    {
        if ((newVal != null && tbkaEvaluasi != null && (newVal.compareTo(tbkaEvaluasi) == 0)) ||
            (newVal == null && tbkaEvaluasi == null && tbkaEvaluasiIsInitialized)) {
            return;
        }
        tbkaEvaluasi = newVal;
        tbkaEvaluasiIsModified = true;
        tbkaEvaluasiIsInitialized = true;
    }

    /**
     * Determines if the tbkaEvaluasi has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbkaEvaluasiModified()
    {
        return tbkaEvaluasiIsModified;
    }

    /**
     * Determines if the tbkaEvaluasi has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbkaEvaluasiInitialized()
    {
        return tbkaEvaluasiIsInitialized;
    }

    /**
     * Getter method for tbkId.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_kpi_assign.tbk_id</li>
     * <li> foreign key: tb_kpi.tbk_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbkId
     */
    public Integer getTbkId()
    {
        return tbkId;
    }

    /**
     * Setter method for tbkId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbkId
     */
    public void setTbkId(Integer newVal)
    {
        if ((newVal != null && tbkId != null && (newVal.compareTo(tbkId) == 0)) ||
            (newVal == null && tbkId == null && tbkIdIsInitialized)) {
            return;
        }
        tbkId = newVal;
        tbkIdIsModified = true;
        tbkIdIsInitialized = true;
    }

    /**
     * Setter method for tbkId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbkId
     */
    public void setTbkId(int newVal)
    {
        setTbkId(new Integer(newVal));
    }

    /**
     * Determines if the tbkId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbkIdModified()
    {
        return tbkIdIsModified;
    }

    /**
     * Determines if the tbkId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbkIdInitialized()
    {
        return tbkIdIsInitialized;
    }

    /**
     * Getter method for tbeId.
     * <br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_kpi_assign.tbe_id</li>
     * <li> foreign key: tb_employee.tbe_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbeId
     */
    public Integer getTbeId()
    {
        return tbeId;
    }

    /**
     * Setter method for tbeId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbeId
     */
    public void setTbeId(Integer newVal)
    {
        if ((newVal != null && tbeId != null && (newVal.compareTo(tbeId) == 0)) ||
            (newVal == null && tbeId == null && tbeIdIsInitialized)) {
            return;
        }
        tbeId = newVal;
        tbeIdIsModified = true;
        tbeIdIsInitialized = true;
    }

    /**
     * Setter method for tbeId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbeId
     */
    public void setTbeId(int newVal)
    {
        setTbeId(new Integer(newVal));
    }

    /**
     * Determines if the tbeId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbeIdModified()
    {
        return tbeIdIsModified;
    }

    /**
     * Determines if the tbeId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbeIdInitialized()
    {
        return tbeIdIsInitialized;
    }

    /**
     * Getter method for tbkaId.
     * <br>
     * PRIMARY KEY.<br>
     * Meta Data Information (in progress):
     * <ul>
     * <li>full name: tb_kpi_assign.tbka_id</li>
     * <li>column size: 10</li>
     * <li>jdbc type returned by the driver: Types.INTEGER</li>
     * </ul>
     *
     * @return the value of tbkaId
     */
    public Integer getTbkaId()
    {
        return tbkaId;
    }

    /**
     * Setter method for tbkaId.
     * <br>
     * The new value is set only if compareTo() says it is different,
     * or if one of either the new value or the current value is null.
     * In case the new value is different, it is set and the field is marked as 'modified'.
     *
     * @param newVal the new value to be assigned to tbkaId
     */
    public void setTbkaId(Integer newVal)
    {
        if ((newVal != null && tbkaId != null && (newVal.compareTo(tbkaId) == 0)) ||
            (newVal == null && tbkaId == null && tbkaIdIsInitialized)) {
            return;
        }
        tbkaId = newVal;
        tbkaIdIsModified = true;
        tbkaIdIsInitialized = true;
    }

    /**
     * Setter method for tbkaId.
     * <br>
     * Convenient for those who do not want to deal with Objects for primary types.
     *
     * @param newVal the new value to be assigned to tbkaId
     */
    public void setTbkaId(int newVal)
    {
        setTbkaId(new Integer(newVal));
    }

    /**
     * Determines if the tbkaId has been modified.
     *
     * @return true if the field has been modified, false if the field has not been modified
     */
    public boolean isTbkaIdModified()
    {
        return tbkaIdIsModified;
    }

    /**
     * Determines if the tbkaId has been initialized.
     * <br>
     * It is useful to determine if a field is null on purpose or just because it has not been initialized.
     *
     * @return true if the field has been initialized, false otherwise
     */
    public boolean isTbkaIdInitialized()
    {
        return tbkaIdIsInitialized;
    }

    /** The TbEmployee referenced by this bean. */
    private TbEmployeeBean referencedTbEmployee;
    /** Getter method for TbEmployeeBean. */
    public TbEmployeeBean getTbEmployeeBean() {
        return this.referencedTbEmployee;
    }
    /** Setter method for TbEmployeeBean. */
    public void setTbEmployeeBean(TbEmployeeBean reference) {
        this.referencedTbEmployee = reference;
    }
    
    /** The TbKpi referenced by this bean. */
    private TbKpiBean referencedTbKpi;
    /** Getter method for TbKpiBean. */
    public TbKpiBean getTbKpiBean() {
        return this.referencedTbKpi;
    }
    /** Setter method for TbKpiBean. */
    public void setTbKpiBean(TbKpiBean reference) {
        this.referencedTbKpi = reference;
    }
    
    /**
     * Determines if the current object is new.
     *
     * @return true if the current object is new, false if the object is not new
     */
    public boolean isNew()
    {
        return _isNew;
    }

    /**
     * Specifies to the object if it has been set as new.
     *
     * @param isNew the boolean value to be assigned to the isNew field
     */
    public void isNew(boolean isNew)
    {
        this._isNew = isNew;
    }

    /**
     * Determines if the object has been modified since the last time this method was called.
     * <br>
     * We can also determine if this object has ever been modified since its creation.
     *
     * @return true if the object has been modified, false if the object has not been modified
     */
    public boolean isModified()
    {
        return tbkaSpvIdIsModified 		|| tbkaStatusIsModified  		|| tbkaPoinIsModified  		|| tbkaActionIsModified  		|| tbkaEvaluasiIsModified  		|| tbkIdIsModified  		|| tbeIdIsModified  		|| tbkaIdIsModified  ;
    }

    /**
     * Resets the object modification status to 'not modified'.
     */
    public void resetIsModified()
    {
        tbkaSpvIdIsModified = false;
        tbkaStatusIsModified = false;
        tbkaPoinIsModified = false;
        tbkaActionIsModified = false;
        tbkaEvaluasiIsModified = false;
        tbkIdIsModified = false;
        tbeIdIsModified = false;
        tbkaIdIsModified = false;
    }

    /**
     * Copies the passed bean into the current bean.
     *
     * @param bean the bean to copy into the current bean
     */
    public void copy(TbKpiAssignBean bean)
    {
        setTbkaSpvId(bean.getTbkaSpvId());
        setTbkaStatus(bean.getTbkaStatus());
        setTbkaPoin(bean.getTbkaPoin());
        setTbkaAction(bean.getTbkaAction());
        setTbkaEvaluasi(bean.getTbkaEvaluasi());
        setTbkId(bean.getTbkId());
        setTbeId(bean.getTbeId());
        setTbkaId(bean.getTbkaId());
    }

    /**
     * return a dictionnary of the object
     */
    public Map getDictionnary()
    {
        Map dictionnary = new HashMap();
        dictionnary.put("tbka_spv_id", getTbkaSpvId() == null ? "" : getTbkaSpvId().toString());
        dictionnary.put("tbka_status", getTbkaStatus() == null ? "" : getTbkaStatus().toString());
        dictionnary.put("tbka_poin", getTbkaPoin() == null ? "" : getTbkaPoin().toString());
        dictionnary.put("tbka_action", getTbkaAction() == null ? "" : getTbkaAction().toString());
        dictionnary.put("tbka_evaluasi", getTbkaEvaluasi() == null ? "" : getTbkaEvaluasi().toString());
        dictionnary.put("tbk_id", getTbkId() == null ? "" : getTbkId().toString());
        dictionnary.put("tbe_id", getTbeId() == null ? "" : getTbeId().toString());
        dictionnary.put("tbka_id", getTbkaId() == null ? "" : getTbkaId().toString());
        return dictionnary;
    }

    /**
     * return a dictionnary of the pk columns
     */
    public Map getPkDictionnary()
    {
        Map dictionnary = new HashMap();
        dictionnary.put("tbka_id", getTbkaId() == null ? "" : getTbkaId().toString());
        return dictionnary;
    }

    /**
     * return a the value string representation of the given field
     */
    public String getValue(String column)
    {
        if (null == column || "".equals(column)) {
            return "";
        } else if ("tbka_spv_id".equalsIgnoreCase(column) || "tbkaSpvId".equalsIgnoreCase(column)) {
            return getTbkaSpvId() == null ? "" : getTbkaSpvId().toString();
        } else if ("tbka_status".equalsIgnoreCase(column) || "tbkaStatus".equalsIgnoreCase(column)) {
            return getTbkaStatus() == null ? "" : getTbkaStatus().toString();
        } else if ("tbka_poin".equalsIgnoreCase(column) || "tbkaPoin".equalsIgnoreCase(column)) {
            return getTbkaPoin() == null ? "" : getTbkaPoin().toString();
        } else if ("tbka_action".equalsIgnoreCase(column) || "tbkaAction".equalsIgnoreCase(column)) {
            return getTbkaAction() == null ? "" : getTbkaAction().toString();
        } else if ("tbka_evaluasi".equalsIgnoreCase(column) || "tbkaEvaluasi".equalsIgnoreCase(column)) {
            return getTbkaEvaluasi() == null ? "" : getTbkaEvaluasi().toString();
        } else if ("tbk_id".equalsIgnoreCase(column) || "tbkId".equalsIgnoreCase(column)) {
            return getTbkId() == null ? "" : getTbkId().toString();
        } else if ("tbe_id".equalsIgnoreCase(column) || "tbeId".equalsIgnoreCase(column)) {
            return getTbeId() == null ? "" : getTbeId().toString();
        } else if ("tbka_id".equalsIgnoreCase(column) || "tbkaId".equalsIgnoreCase(column)) {
            return getTbkaId() == null ? "" : getTbkaId().toString();
        }
        return "";
    }

    /**
     * @see java.lang.Object#equals(Object)
     */
    public boolean equals(Object object)
    {
        if (!(object instanceof TbKpiAssignBean)) {
            return false;
        }

		TbKpiAssignBean obj = (TbKpiAssignBean) object;
		return new EqualsBuilder()
            .append(getTbkaSpvId(), obj.getTbkaSpvId())
            .append(getTbkaStatus(), obj.getTbkaStatus())
            .append(getTbkaPoin(), obj.getTbkaPoin())
            .append(getTbkaAction(), obj.getTbkaAction())
            .append(getTbkaEvaluasi(), obj.getTbkaEvaluasi())
            .append(getTbkId(), obj.getTbkId())
            .append(getTbeId(), obj.getTbeId())
            .append(getTbkaId(), obj.getTbkaId())
            .isEquals();
	}

	/**
	 * @see java.lang.Object#hashCode()
	 */
	public int hashCode()
	{
		return new HashCodeBuilder(-82280557, -700257973)
            .append(getTbkaSpvId())
            .append(getTbkaStatus())
            .append(getTbkaPoin())
            .append(getTbkaAction())
            .append(getTbkaEvaluasi())
            .append(getTbkId())
            .append(getTbeId())
            .append(getTbkaId())
            .toHashCode();
	}

	/**
	 * @see java.lang.Object#toString()
	 */
	public String toString()
	{
	    return toString(ToStringStyle.MULTI_LINE_STYLE);
	}

	/**
	 * you can use the following styles:
	 * <li>ToStringStyle.DEFAULT_STYLE</li>
	 * <li>ToStringStyle.MULTI_LINE_STYLE</li>
     * <li>ToStringStyle.NO_FIELD_NAMES_STYLE</li>
     * <li>ToStringStyle.SHORT_PREFIX_STYLE</li>
     * <li>ToStringStyle.SIMPLE_STYLE</li>
	 */
	public String toString(ToStringStyle style) {
		return new ToStringBuilder(this, style)
            .append("tbka_spv_id", getTbkaSpvId())
            .append("tbka_status", getTbkaStatus())
            .append("tbka_poin", getTbkaPoin())
            .append("tbka_action", getTbkaAction())
            .append("tbka_evaluasi", getTbkaEvaluasi())
            .append("tbk_id", getTbkId())
            .append("tbe_id", getTbeId())
            .append("tbka_id", getTbkaId())
            .toString();
	}


    public int compareTo(Object object)
    {
        TbKpiAssignBean obj = (TbKpiAssignBean) object;
        return new CompareToBuilder()
            .append(getTbkaSpvId(), obj.getTbkaSpvId())
            .append(getTbkaStatus(), obj.getTbkaStatus())
            .append(getTbkaPoin(), obj.getTbkaPoin())
            .append(getTbkaAction(), obj.getTbkaAction())
            .append(getTbkaEvaluasi(), obj.getTbkaEvaluasi())
            .append(getTbkId(), obj.getTbkId())
            .append(getTbeId(), obj.getTbeId())
            .append(getTbkaId(), obj.getTbkaId())
            .toComparison();
   }
}
